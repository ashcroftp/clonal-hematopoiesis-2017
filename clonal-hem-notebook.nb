(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1382194,      30701]
NotebookOptionsPosition[   1362481,      30125]
NotebookOutlinePosition[   1362838,      30141]
CellTagsIndexPosition[   1362795,      30138]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["clonal-hem-notebook.nb", "Title",
 CellChangeTimes->{{3.673248574008663*^9, 3.6732485799278107`*^9}, {
  3.6955626330434523`*^9, 3.695562639420328*^9}}],

Cell["Mathematical analysis and data presentation functions", "Subtitle",
 CellChangeTimes->{{3.695562654332616*^9, 3.6955626651078243`*^9}}],

Cell["Author: Peter Ashcroft, ETH Z\[UDoubleDot]rich", "Subsubtitle",
 CellChangeTimes->{{3.69556267332403*^9, 3.695562679338793*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Clear", " ", "output", " ", "cells", " ", "before", " ", "saving", " ", 
    "and", " ", 
    RowBox[{"pushing", "!"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NotebookDelete", "[", 
    RowBox[{"Cells", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"CellStyle", "\[Rule]", 
       RowBox[{"{", "\"\<Output\>\"", "}"}]}]}], "]"}], " ", "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.695575061048427*^9, 3.6955751014159107`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "plot", " ", "style", " ", "for", " ", "this", " ", 
    RowBox[{"notebook", ".", " ", "\[IndentingNewLine]", "Run"}], " ", 
    "before", " ", "evaluating", " ", "notebook", " ", "cells", " ", "to", 
    " ", "avoid", " ", 
    RowBox[{"errors", "!"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"myPlotStyle", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"col", "\[Rule]", "\[Section]col"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"sym", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Section]col", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}]}], ",", "0.05"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"Rectangle", "[", "]"}]}], "}"}]}], ",", "0.04"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0.5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
                "}"}]}], ",", "0.06"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"Triangle", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", 
                    FractionBox[
                    SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
              ",", "0.05"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"symFull", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Section]col", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}]}], ",", "0.05"}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"Rectangle", "[", "]"}]}], "}"}]}], ",", "0.04"}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0.5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
                "}"}]}], ",", "0.06"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FaceForm", "[", 
                  RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"\[Section]col", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}]}], " ", "]"}], " ", 
                  "]"}], ",", 
                 RowBox[{"EdgeForm", "[", 
                  RowBox[{"Opacity", "[", "0", "]"}], " ", "]"}], ",", 
                 RowBox[{"Triangle", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", 
                    FractionBox[
                    SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
              ",", "0.05"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"labelSize", "\[Rule]", "22"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ticksSize", "\[Rule]", "16"}], ",", "\[IndentingNewLine]", 
         RowBox[{"insetSize", "\[Rule]", "12"}], ",", "\[IndentingNewLine]", 
         RowBox[{"font", "\[Rule]", "\"\<Helvetica\>\""}]}], 
        "\[IndentingNewLine]", "}"}], "/.", 
       RowBox[{"\[Section]col", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"94", "/", "255"}], ",", 
            RowBox[{"60", "/", "255"}], ",", 
            RowBox[{"153", "/", "255"}]}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"230", "/", "255"}], ",", 
            RowBox[{"97", "/", "255"}], ",", 
            RowBox[{"1", "/", "255"}]}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"178", "/", "255"}], ",", 
            RowBox[{"171", "/", "255"}], ",", 
            RowBox[{"210", "/", "255"}]}], "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"253", "/", "255"}], ",", 
            RowBox[{"184", "/", "255"}], ",", 
            RowBox[{"99", "/", "255"}]}], "]"}]}], "}"}]}]}], "//", 
      "Quiet"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getTickLocations", "[", 
     RowBox[{"{", 
      RowBox[{"fmin_", ",", "fmax_"}], "}"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"series", ",", "min", ",", "max", ",", "tickLocations"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"series", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "9", ",", "1"}], "]"}], "\[Times]", 
            SuperscriptBox["10", 
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", "9"}], "]"}], "/", "9"}]]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "89"}], ",", "91"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"min", "=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LessEqual]", "fmin"}], "&"}], ",", "series"}], 
            "]"}], ",", "True"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[GreaterEqual]", "fmax"}], "&"}], ",", 
             "series"}], "]"}], ",", "True"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tickLocations", "=", 
        RowBox[{"series", "[", 
         RowBox[{"[", 
          RowBox[{"min", ";;", "max"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "tickLocations", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"logTicks", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fmin_", ",", "fmax_"}], "}"}], ",", "label_", ",", 
      "sciFormat_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "tickLocations", ",", "n", " ", ",", "power10", ",", "tickLabels", ",", 
        RowBox[{"\[CapitalDelta]", "=", "0.01"}], ",", "tickSizes", ",", 
        "ticks"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tickLocations", "=", 
        RowBox[{"getTickLocations", "[", 
         RowBox[{"{", 
          RowBox[{"fmin", ",", "fmax"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "tickLocations", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"power10", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               SuperscriptBox["10.", "i"], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", "#"}],
             "]"}], "&"}], ",", "tickLocations"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Is", " ", "our", " ", "location", " ", "a", " ", "power", " ", "of", 
         " ", 
         RowBox[{"10", "?"}]}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tickLabels", "=", 
        RowBox[{"If", "[", 
         RowBox[{"label", ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"power10", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{"sciFormat", ",", 
                RowBox[{"Superscript", "[", 
                 RowBox[{"\"\<10\>\"", ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"Log10", "[", 
                    RowBox[{"tickLocations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
                 " ", "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"tickLocations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "\[GreaterEqual]", "1"}], 
                  ",", 
                  RowBox[{"Round", "[", 
                   RowBox[{"tickLocations", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
                  RowBox[{"tickLocations", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], " ", "]"}],
               ",", "\"\<\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"\"\<\>\"", ",", "n"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"tickSizes", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"#", ",", "\[CapitalDelta]", ",", 
                FractionBox["\[CapitalDelta]", "2"]}], "]"}], "&"}], ",", 
             "power10"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "n"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ticks", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"tickLocations", ",", "tickLabels", ",", "tickSizes"}], 
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "ticks", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.695580363768602*^9, 3.695580375168418*^9}, 
   3.695588676484167*^9, {3.695590579815021*^9, 3.695590583413836*^9}, {
   3.696064928827763*^9, 3.6960649453316927`*^9}, {3.696143411044868*^9, 
   3.696143424963386*^9}, {3.708767654608158*^9, 3.70876766027907*^9}, {
   3.708767711693638*^9, 3.70876771230132*^9}, {3.708767756212493*^9, 
   3.708767759283763*^9}, {3.708769995848255*^9, 3.708770015022944*^9}, {
   3.711881901381802*^9, 3.711881902445035*^9}, {3.712057931975542*^9, 
   3.71205793447582*^9}, {3.7120580129021463`*^9, 3.7120580132050056`*^9}}],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 3}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 5}],

Cell[CellGroupData[{

Cell["\<\
1. Basic model: steady-state mouse parameters, residence times, and fluxes\
\>", "Chapter",
 CellChangeTimes->{{3.676115125024188*^9, 3.676115130783197*^9}, {
   3.6955642058283997`*^9, 3.695564210211318*^9}, {3.69556424110646*^9, 
   3.695564244370101*^9}, 3.695565180296815*^9, {3.6955652583103952`*^9, 
   3.695565276588955*^9}, {3.695573738675383*^9, 3.6955737387153177`*^9}, {
   3.6957076824290133`*^9, 3.695707683480365*^9}}],

Cell[CellGroupData[{

Cell["\[Rho]=0, \[Alpha]=0", "Subsection",
 CellChangeTimes->{{3.706335702117693*^9, 3.706335707580586*^9}, {
  3.70711430924503*^9, 3.70711431040919*^9}}],

Cell[CellGroupData[{

Cell["{\[Delta], d, a}", "Subsubsection",
 CellChangeTimes->{{3.6900207362540903`*^9, 3.6900207462510757`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[ScriptL]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      FractionBox["n", "s"]}], ",", 
     RowBox[{
      FractionBox["s", 
       RowBox[{"\[ScriptL]", " ", "n"}]], "-", "\[Beta]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "\[ScriptL]"], "-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "n"}], "s"]}], ")"}], 
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramTab", "[", "\[Section]s_", "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "1"}], "]"}], ",", 
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "3"}], "]"}], ",", 
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "5"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<d\>\"", ",", "\"\<a\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[ScriptL]=1\>\"", ",", "\"\<\[ScriptL]=3\>\"", ",", 
         "\"\<\[ScriptL]=5\>\""}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6926891760150423`*^9, 3.6926892997060337`*^9}, {
  3.692690454081099*^9, 3.692690463016618*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.692689364551364*^9, 3.692689364695389*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", "10", "]"}]], "Input",
 CellChangeTimes->{3.692689367895446*^9}],

Cell[BoxData[
 RowBox[{"paramTab", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.69268930153172*^9, 3.692689323697193*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Residence time in BM", "Subsubsection",
 CellChangeTimes->{{3.6900207625312157`*^9, 3.69002076916226*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resTime", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[ScriptL]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["s", 
          RowBox[{"\[ScriptL]", " ", "n"}]], "-", "\[Beta]"}], ")"}], 
       RowBox[{"-", "1"}]], "\[Times]", "24"}], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["s", 
         RowBox[{"\[ScriptL]", " ", "n"}]], "-", "\[Beta]"}], ")"}], 
      RowBox[{"-", "1"}]]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resTimeTab", "[", "\[Section]s_", "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"resTime", "[", 
        RowBox[{"\[Section]s", ",", "1"}], "]"}], ",", 
       RowBox[{"resTime", "[", 
        RowBox[{"\[Section]s", ",", "3"}], "]"}], ",", 
       RowBox[{"resTime", "[", 
        RowBox[{"\[Section]s", ",", "5"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<hours\>\"", ",", "\"\<days\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[ScriptL]=1\>\"", ",", "\"\<\[ScriptL]=3\>\"", ",", 
         "\"\<\[ScriptL]=5\>\""}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.692689384678368*^9, 3.6926893927423487`*^9}, {
  3.692689425910328*^9, 3.692689478923517*^9}, {3.6926903724838552`*^9, 
  3.692690382291192*^9}}],

Cell[BoxData[
 RowBox[{"resTimeTab", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.6926894852379208`*^9, 3.692689488043684*^9}}],

Cell[BoxData[
 RowBox[{"resTimeTab", "[", "10", "]"}]], "Input",
 CellChangeTimes->{3.6926894948747263`*^9}],

Cell[BoxData[
 RowBox[{"resTimeTab", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.692689501394452*^9, 3.692689501498465*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Flux", "Subsubsection",
 CellChangeTimes->{{3.692689547657835*^9, 3.692689548040812*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"flux", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[ScriptL]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["s", "\[ScriptL]"], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d", " ", "n"}], "+", 
        RowBox[{"\[Beta]", " ", "n"}]}], ")"}], "/.", 
      RowBox[{"d", "\[Rule]", 
       RowBox[{
        FractionBox["s", 
         RowBox[{"\[ScriptL]", " ", "n"}]], "-", "\[Beta]"}]}]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fluxTab", "[", "\[Section]s_", "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"flux", "[", 
        RowBox[{"\[Section]s", ",", "1"}], "]"}], ",", 
       RowBox[{"flux", "[", 
        RowBox[{"\[Section]s", ",", "3"}], "]"}], ",", 
       RowBox[{"flux", "[", 
        RowBox[{"\[Section]s", ",", "5"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<flux out of PB\>\"", ",", "\"\<flux out of BM\>\""}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[ScriptL]=1\>\"", ",", "\"\<\[ScriptL]=3\>\"", ",", 
         "\"\<\[ScriptL]=5\>\""}], "}"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.69268956158559*^9, 3.69268961854253*^9}, {
  3.6926898205843163`*^9, 3.692689869117701*^9}, {3.692689934100781*^9, 
  3.692690000984808*^9}, {3.69269039292304*^9, 3.692690400034649*^9}}],

Cell[BoxData[
 RowBox[{"fluxTab", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.692689603602504*^9, 3.692689605583866*^9}}],

Cell[BoxData[
 RowBox[{"fluxTab", "[", "10", "]"}]], "Input",
 CellChangeTimes->{3.692689627334176*^9}],

Cell[BoxData[
 RowBox[{"fluxTab", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.6926896323576717`*^9, 3.692689632477824*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Rho]=0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[NotEqual]", "0"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.706335692864699*^9, 3.706335715004387*^9}, {
  3.706335968508939*^9, 3.706335970598983*^9}, {3.7071143124655313`*^9, 
  3.707114312936908*^9}}],

Cell[CellGroupData[{

Cell["Alternative model: {\[Delta], d, a}", "Subsubsection",
 CellChangeTimes->{{3.6900207362540903`*^9, 3.6900207462510757`*^9}, {
  3.6900207847064743`*^9, 3.6900207870337133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "[", 
   RowBox[{
   "\[Section]s_", ",", "\[Section]\[ScriptL]_", ",", "\[Section]\[Alpha]_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]", " ", "n"}], 
      RowBox[{"s", "+", 
       RowBox[{"\[Alpha]", " ", "n"}]}]], ",", 
     RowBox[{
      FractionBox["s", 
       RowBox[{"\[ScriptL]", " ", "n"}]], "-", "\[Beta]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "\[ScriptL]"], "-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "n"}], 
         RowBox[{"s", "+", 
          RowBox[{"\[Alpha]", " ", "n"}]}]]}], ")"}], 
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Alpha]"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramTab", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[Alpha]Vals_"}], "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "3", ",", "\[Section]\[Alpha]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
        "}"}]}], "]"}], " ", "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<d\>\"", ",", "\"\<a\>\""}], 
        "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Section]\[Alpha]", "\[Equal]", "0"}], ",", 
           RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Section]\[Alpha]", "]"}]}], ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<\[Alpha]=10\>\"", ",", 
             RowBox[{"Log10", "[", "\[Section]\[Alpha]", "]"}]}], " ", 
            "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.692700492348117*^9, 3.692700571096177*^9}, {
  3.6927006014393787`*^9, 3.692700729970685*^9}, {3.692700762970559*^9, 
  3.692700772993155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]Vals", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692700784959499*^9, 3.692700796393087*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"1", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700659931436*^9, 3.692700679612338*^9}, {
  3.692700791065534*^9, 3.692700799535987*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"100", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700811848422*^9, 3.692700811967496*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Rho]", "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "0"], 
     FractionBox[
      RowBox[{"N", "-", "n"}], "N"]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[NotEqual]", "0"}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.706335702117693*^9, 3.706335707580586*^9}, {
  3.706335739267529*^9, 3.706335742595594*^9}, {3.7063357835381327`*^9, 
  3.706335791218364*^9}, {3.706335951997387*^9, 3.7063359620953417`*^9}, {
  3.706360144487933*^9, 3.706360144632025*^9}, {3.707114315909134*^9, 
  3.707114317928996*^9}}],

Cell[CellGroupData[{

Cell["Find parameters in terms of knowns", "Subsubsection",
 CellChangeTimes->{{3.7063358735518303`*^9, 3.706335886198637*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Rho]", " ", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", "n"}], 
               "\[ScriptCapitalN]"]}]}], ")"}]}]}], ")"}], "n"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", 
           FractionBox[
            RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}], 
          "+", "\[Delta]"}], ")"}], "s"}]}]}], ",", 
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Rho]", " ", 
           FractionBox[
            RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}], 
          "-", "d", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], "n"}], "+", 
       RowBox[{"a", " ", "s", " ", 
        FractionBox[
         RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}]}]}], 
     ",", 
     RowBox[{"\[ScriptL]", "\[Equal]", 
      FractionBox["1", 
       RowBox[{"\[Delta]", "+", 
        RowBox[{"a", " ", 
         FractionBox[
          RowBox[{"\[ScriptCapitalN]", "-", "n"}], 
          "\[ScriptCapitalN]"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "d", ",", "a"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706335887506509*^9, 3.706335947129074*^9}, {
   3.706336153654592*^9, 3.706336224051721*^9}, {3.7063362833071213`*^9, 
   3.706336359711464*^9}, {3.7063364214059973`*^9, 3.706336422488871*^9}, 
   3.70633646314815*^9, {3.70633650685111*^9, 3.706336508410778*^9}, {
   3.707114357439887*^9, 3.707114362391304*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["{\[Delta], d, a}", "Subsubsection",
 CellChangeTimes->{{3.6900207362540903`*^9, 3.6900207462510757`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "[", 
   RowBox[{
   "\[Section]s_", ",", "\[Section]\[ScriptL]_", ",", "\[Section]\[Alpha]_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      FractionBox["n", 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}]}]]}], ",", 
     RowBox[{
      FractionBox["s", 
       RowBox[{"\[ScriptL]", " ", "n"}]], "-", 
      RowBox[{"\[Beta]", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Rho]", " ", 
          FractionBox[
           RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "\[ScriptL]"], "-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "n"}], 
         RowBox[{"s", "+", 
          RowBox[{"\[Alpha]", " ", "n"}]}]]}], ")"}], 
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Alpha]"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramTab", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[Alpha]Vals_"}], "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "3", ",", "\[Section]\[Alpha]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
        "}"}]}], "]"}], " ", "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<d\>\"", ",", "\"\<a\>\""}], 
        "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Section]\[Alpha]", "\[Equal]", "0"}], ",", 
           RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Section]\[Alpha]", "]"}]}], ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<\[Alpha]=10\>\"", ",", 
             RowBox[{"Log10", "[", "\[Section]\[Alpha]", "]"}]}], " ", 
            "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6926891760150423`*^9, 3.6926892997060337`*^9}, {
   3.692690454081099*^9, 3.692690463016618*^9}, {3.7063372282182903`*^9, 
   3.7063372320100946`*^9}, {3.7063375588160067`*^9, 3.706337562743318*^9}, {
   3.70633771607507*^9, 3.706337726481789*^9}, {3.706337764097869*^9, 
   3.706337783528006*^9}, 3.7063378457502832`*^9, {3.707114376063862*^9, 
   3.7071143764312*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]Vals", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692700784959499*^9, 3.692700796393087*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"1", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700659931436*^9, 3.692700679612338*^9}, {
  3.692700791065534*^9, 3.692700799535987*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"100", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700811848422*^9, 3.692700811967496*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Rho]", "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "0"], 
     FractionBox[
      RowBox[{"N", "-", "n"}], 
      RowBox[{"N", "-", 
       SuperscriptBox["n", "\[Times]"]}]]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "\[NotEqual]", "0"}], TraditionalForm]]],
 " (Also for step function, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Rho]", "(", "n", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[Rho]", "0"], 
     SubscriptBox["\[Delta]", 
      RowBox[{"n", ",", "N"}]]}]}], TraditionalForm]]],
 ")"
}], "Subsection",
 CellChangeTimes->{{3.706335702117693*^9, 3.706335707580586*^9}, {
  3.706335739267529*^9, 3.706335742595594*^9}, {3.7063357835381327`*^9, 
  3.706335791218364*^9}, {3.706335951997387*^9, 3.7063359620953417`*^9}, {
  3.70635394969701*^9, 3.706353955711149*^9}, {3.7063601327731447`*^9, 
  3.706360164339423*^9}, {3.707114323316471*^9, 3.707114346511815*^9}}],

Cell[CellGroupData[{

Cell["Find parameters in terms of knowns", "Subsubsection",
 CellChangeTimes->{{3.7063358735518303`*^9, 3.706335886198637*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Rho]"}], " ", ")"}]}]}], ")"}], "n"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", 
           FractionBox[
            RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}], 
          "+", "\[Delta]"}], ")"}], "s"}]}]}], ",", 
     RowBox[{"0", "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Rho]"}], "-", "d", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], "n"}], "+", 
       RowBox[{"a", " ", "s", " ", 
        FractionBox[
         RowBox[{"\[ScriptCapitalN]", "-", "n"}], "\[ScriptCapitalN]"]}]}]}], 
     ",", 
     RowBox[{"\[ScriptL]", "\[Equal]", 
      FractionBox["1", 
       RowBox[{"\[Delta]", "+", 
        RowBox[{"a", " ", 
         FractionBox[
          RowBox[{"\[ScriptCapitalN]", "-", "n"}], 
          "\[ScriptCapitalN]"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Delta]", ",", "d", ",", "a"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.706335887506509*^9, 3.706335947129074*^9}, {
   3.706336153654592*^9, 3.706336224051721*^9}, {3.7063362833071213`*^9, 
   3.706336359711464*^9}, {3.7063364214059973`*^9, 3.706336422488871*^9}, 
   3.70633646314815*^9, {3.70633650685111*^9, 3.706336508410778*^9}, {
   3.706353977631591*^9, 3.706353979919435*^9}, {3.7071143927984877`*^9, 
   3.707114396406281*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["{\[Delta], d, a}", "Subsubsection",
 CellChangeTimes->{{3.6900207362540903`*^9, 3.6900207462510757`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "[", 
   RowBox[{
   "\[Section]s_", ",", "\[Section]\[ScriptL]_", ",", "\[Section]\[Alpha]_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      FractionBox["n", 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}]}]]}], ",", 
     RowBox[{
      FractionBox["s", 
       RowBox[{"\[ScriptL]", " ", "n"}]], "-", 
      RowBox[{"\[Beta]", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Rho]"}], " ", ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "\[ScriptL]"], "-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "n"}], 
         RowBox[{"s", "+", 
          RowBox[{"\[Alpha]", " ", "n"}]}]]}], ")"}], 
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["1.", "39"]}], ",", 
     RowBox[{"n", "\[Rule]", "9900"}], ",", 
     RowBox[{"s", "\[Rule]", "\[Section]s"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", 
      FractionBox["\[Section]\[ScriptL]", "1440."]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Alpha]"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramTab", "[", 
   RowBox[{"\[Section]s_", ",", "\[Section]\[Alpha]Vals_"}], "]"}], ":=", 
  RowBox[{"TableForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"params", "[", 
        RowBox[{"\[Section]s", ",", "3", ",", "\[Section]\[Alpha]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
        "}"}]}], "]"}], " ", "]"}], ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[Delta]\>\"", ",", "\"\<d\>\"", ",", "\"\<a\>\""}], 
        "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Section]\[Alpha]", "\[Equal]", "0"}], ",", 
           RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Section]\[Alpha]", "]"}]}], ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<\[Alpha]=10\>\"", ",", 
             RowBox[{"Log10", "[", "\[Section]\[Alpha]", "]"}]}], " ", 
            "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Section]\[Alpha]", ",", "\[Section]\[Alpha]Vals"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6926891760150423`*^9, 3.6926892997060337`*^9}, {
   3.692690454081099*^9, 3.692690463016618*^9}, {3.7063372282182903`*^9, 
   3.7063372320100946`*^9}, {3.7063375588160067`*^9, 3.706337562743318*^9}, {
   3.70633771607507*^9, 3.706337726481789*^9}, {3.706337764097869*^9, 
   3.706337783528006*^9}, 3.7063378457502832`*^9, 3.706353995704032*^9, {
   3.70711441358204*^9, 3.7071144138699017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]Vals", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]], ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.692700784959499*^9, 3.692700796393087*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"1", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700659931436*^9, 3.692700679612338*^9}, {
  3.692700791065534*^9, 3.692700799535987*^9}}],

Cell[BoxData[
 RowBox[{"paramTab", "[", 
  RowBox[{"100", ",", "\[Alpha]Vals"}], "]"}]], "Input",
 CellChangeTimes->{{3.692700811848422*^9, 3.692700811967496*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2. Mathematical analysis of time to clonality (\[Rho]=\[Alpha]=0)", \
"Chapter",
 CellChangeTimes->{{3.695565335947528*^9, 3.695565371137779*^9}, {
  3.695707687496222*^9, 3.695707688552051*^9}, {3.7089316464628143`*^9, 
  3.7089316515738707`*^9}}],

Cell[CellGroupData[{

Cell["Neutral clone", "Section",
 CellChangeTimes->{{3.677308899376074*^9, 3.6773089013112497`*^9}, {
  3.677323066630706*^9, 3.677323068262315*^9}, {3.6955735452611856`*^9, 
  3.6955735491383543`*^9}}],

Cell[CellGroupData[{

Cell["Jacobian and eigensystem", "Subsection",
 CellChangeTimes->{{3.668257551026848*^9, 3.668257552191036*^9}, {
  3.668313384779729*^9, 3.668313389091033*^9}}],

Cell[TextData[{
 "Writing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], ")"}], "/", "N"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the neutral ODEs for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", 
    RowBox[{
     OverscriptBox["x", "\[Rule]"], "/", "dt"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are given by:"
}], "Text",
 CellChangeTimes->{{3.6955736326165047`*^9, 3.6955736841102343`*^9}, {
  3.6955737872290983`*^9, 3.6955738201183767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"odes", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], "x3"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x1"}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], "x4"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "x3"}], "+", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "x4"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6682575831991*^9, 3.668257751936234*^9}, {
  3.677308948262648*^9, 3.677308994204137*^9}, {3.677309034596307*^9, 
  3.6773090467222757`*^9}}],

Cell["\<\
The slow manifold is given by xStar. We then compute the Jacobian of the ODEs \
about this point.\
\>", "Text",
 CellChangeTimes->{{3.695573839219204*^9, 3.695573899281167*^9}, {
  3.695573932972476*^9, 3.69557396597019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", 
        RowBox[{
         FractionBox["\[Beta]", "\[Delta]"], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], ",", 
       RowBox[{"x2", "\[Rule]", 
        RowBox[{
         FractionBox["\[Beta]", "\[Delta]"], "z"}]}], ",", 
       RowBox[{"x3", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
       RowBox[{"x4", "\[Rule]", "z"}]}], "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[Delta]"}], 
        RowBox[{"a", " ", "\[Beta]"}]]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"odes", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "}"}]}], 
      "]"}], "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "J", "]"}]}], "Input",
 CellChangeTimes->{{3.695573903138708*^9, 3.6955739227886744`*^9}, 
   3.695573970004027*^9, {3.695574000684684*^9, 3.6955740125537252`*^9}}],

Cell[TextData[{
 "Now we compute the eigenvalues, and right & left eigenvectors of ",
 Cell[BoxData[
  FormBox["J", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.695574046395015*^9, 3.6955740729446774`*^9}}],

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668257903804352*^9, 3.668257936249565*^9}, {
  3.668258186073648*^9, 3.668258212881054*^9}, {3.668313280711825*^9, 
  3.6683132863668413`*^9}}],

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6682578845517*^9, 3.668257886467813*^9}, {
  3.668258005416245*^9, 3.66825803552743*^9}, {3.668313276512781*^9, 
  3.668313290470598*^9}}],

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"Transpose", "[", "J", "]"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668258062573778*^9, 3.668258066404913*^9}, {
   3.668313295630507*^9, 3.668313296054381*^9}, 3.668313396731451*^9}],

Cell[TextData[{
 "Here we extract the first eigenvectors, corresponding to the zero \
eigenvalue. They are rescaled so that they look pretty and so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"v1", "\[CenterDot]", "u1"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.695574103410289*^9, 3.6955741242000523`*^9}, {
  3.695574164407937*^9, 3.6955741949756327`*^9}, {3.6955742454087763`*^9, 
  3.6955742621407967`*^9}}],

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{"v", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{"v", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "4"}], "]"}], "]"}]], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"u1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{"u", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ".", "v1"}]], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"v1", ".", "u1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6683134066592712`*^9, 3.668313409690284*^9}, {
  3.668313471912043*^9, 3.668313526798155*^9}, {3.6685970487541924`*^9, 
  3.668597048962077*^9}, {3.6955742673004913`*^9, 3.695574282255293*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Diffusion matrix", "Subsection",
 CellChangeTimes->{{3.668411114600995*^9, 3.668411118287931*^9}}],

Cell["\<\
By considering the individual-based reactions, we can construct \
multiplicative diffusion matrix for the SDE approximation.
We can then evaluate this on the slow-manifold xStar.\
\>", "Text",
 CellChangeTimes->{{3.6955743245523863`*^9, 3.695574382148737*^9}, {
  3.6955744131777563`*^9, 3.69557444052248*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Beta]"}], ")"}], "x3"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x1"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x3"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Beta]"}], ")"}], "x4"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x2"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x4"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x3"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"d", " ", "x3"}], "+", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x4"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"d", " ", "x4"}], "+", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668598697363703*^9, 3.668598757580647*^9}, {
   3.6685988006357517`*^9, 3.668598857889097*^9}, {3.668598890760662*^9, 
   3.668598934030899*^9}, {3.6773092220441713`*^9, 3.677309229395602*^9}, {
   3.677309485091032*^9, 3.677309649053141*^9}, 3.695574391894211*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"B", "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{{3.668598940890915*^9, 3.668598962368547*^9}, {
   3.668599042323842*^9, 3.668599068434012*^9}, 3.677309716659997*^9, {
   3.695574401061257*^9, 3.6955744017724323`*^9}}],

Cell["\<\
New diffusion coefficient, which is the diffusion matrix projected onto the \
slow-manifold direction using the leading left eigenvector.\
\>", "Text",
 CellChangeTimes->{{3.695575131328445*^9, 3.695575153934256*^9}, {
  3.6955751842140083`*^9, 3.69557519082962*^9}, {3.708931661445508*^9, 
  3.708931662165392*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"u1", ".", 
   RowBox[{"(", 
    RowBox[{"B", ".", "u1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668411221124408*^9, 3.668411235243884*^9}, {
  3.695575377469091*^9, 3.695575382796157*^9}}],

Cell["Let\[CloseCurlyQuote]s write that in a neater form.", "Text",
 CellChangeTimes->{{3.6955753909918833`*^9, 3.695575429122048*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BTilde", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], "\[Beta]", " ", 
       SuperscriptBox["\[Delta]", "2"], " "}], 
      RowBox[{"\[Xi]", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Beta]", " ", "d"}], "+", 
          RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"]}]], "z", 
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"d", " ", "\[Delta]"}], 
       RowBox[{"a", " ", "\[Beta]"}]]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668411453842161*^9, 3.668411548601388*^9}, {
  3.677309765016757*^9, 3.6773097806529016`*^9}, {3.7089316790451927`*^9, 
  3.7089316871087637`*^9}, {3.70893174499572*^9, 3.7089317527784977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Check", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"u1", ".", 
     RowBox[{"(", 
      RowBox[{"B", ".", "u1"}], ")"}]}], "-", "BTilde"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708931784275069*^9, 3.7089318059767227`*^9}}],

Cell[TextData[{
 "The coefficient, which we write as \[ScriptCapitalB] in the manuscript, can \
be expressed in terms of the fundamental parameters (",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "\[Beta]", ",", "\[ScriptCapitalN]", ",", "s", ",", "n", ",", 
    "\[ScriptL]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")."
}], "Text",
 CellChangeTimes->{{3.695575431707925*^9, 3.695575507043271*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"paramSub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Delta]", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "n"}], "s"]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{
       FractionBox[
        RowBox[{
         FractionBox["1", "\[ScriptL]"], "s"}], "n"], "-", "\[Beta]"}]}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "\[ScriptL]"], "-", 
         FractionBox[
          RowBox[{"\[Beta]", " ", "n"}], "s"]}], ")"}], 
       FractionBox["\[ScriptCapitalN]", 
        RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "d", " ", 
     RowBox[{"(", 
      RowBox[{"d", "+", "\[Beta]"}], ")"}], 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SuperscriptBox["\[Delta]", "2"], " "}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "\[Beta]"}], "-", 
       RowBox[{"d", " ", "\[Delta]"}]}], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"d", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], "2"]}]], "/.",
    "paramSub"}], "]"}]}], "Input",
 CellChangeTimes->{{3.695575513901004*^9, 3.695575535257642*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times", "Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}}],

Cell["\<\
We start the process on the slow manifold at the position z0. We want to know \
what is the probability our mutant reaches fixation (z=\[Xi]), and how long \
this takes.\
\>", "Text",
 CellChangeTimes->{{3.695575671665298*^9, 3.6955757204814034`*^9}, {
  3.695575955351097*^9, 3.695575957543264*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "\[Xi]"}], ",", 
     RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
     RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
     RowBox[{"\[ScriptCapitalB]", ">", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7114461790107317`*^9, 3.71144619107979*^9}, 
   3.71180183199942*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "''"}], "[", "z", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "\[Xi]", "]"}], "\[Equal]", "1"}]}], "}"}], 
     ",", 
     RowBox[{"\[Phi]", "[", "z", "]"}], ",", "z"}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
  3.668667378420467*^9, 3.668667380404291*^9}, {3.677478050979171*^9, 
  3.677478056762979*^9}, {3.677479841931428*^9, 3.677479844971135*^9}, {
  3.677479891641713*^9, 3.677479893152734*^9}, {3.7118018336711206`*^9, 
  3.711801862108934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"t", "''"}], "[", "z", "]"}], "\[Equal]", 
          RowBox[{"-", 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalB]", " ", "z", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
       RowBox[{"t", "[", "z", "]"}], ",", "z"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
  3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
  3.677310575463461*^9}, {3.677478058731037*^9, 3.677478071146494*^9}, {
  3.677479848019381*^9, 3.677479860978179*^9}, {3.6774798953128757`*^9, 
  3.67747989610461*^9}, {3.711446193958865*^9, 3.711446236589654*^9}, {
  3.7116895884815063`*^9, 3.7116895973359127`*^9}, {3.7118018668941402`*^9, 
  3.7118018789658403`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "z", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ScriptCapitalN]", 
               RowBox[{"\[ScriptCapitalB]", " ", "z", 
                RowBox[{"(", 
                 RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
             FractionBox["z", "\[Xi]"]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z"}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
     "First"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox["z", "\[Xi]"]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6774780892498913`*^9, 3.677478122128717*^9}, {
   3.677478699420609*^9, 3.677478708195252*^9}, {3.6774787456502047`*^9, 
   3.677478882276909*^9}, {3.6774798745138483`*^9, 3.677479926748268*^9}, {
   3.695575851969529*^9, 3.695575876821679*^9}, 3.71143416531596*^9, 
   3.711446071763987*^9, {3.7114462444543867`*^9, 3.711446248501293*^9}, {
   3.7114471209442472`*^9, 3.711447128094913*^9}, {3.711689553398097*^9, 
   3.711689559097187*^9}, {3.7116895997446547`*^9, 3.711689600423894*^9}, {
   3.711801889980949*^9, 3.71180191093178*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Second", " ", 
    RowBox[{"moment", ":", " ", 
     RowBox[{"NEW", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "z", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "2"}], 
             FractionBox["\[ScriptCapitalN]", 
              RowBox[{"\[ScriptCapitalB]", " ", "z", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "z"}], ")"}]}]], 
             RowBox[{"(", 
              RowBox[{
               FractionBox["z", "\[Xi]"], 
               FractionBox[
                RowBox[{"\[ScriptCapitalN]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "z"}], ")"}], " ", 
                 RowBox[{"Log", "[", 
                  FractionBox["\[Xi]", 
                   RowBox[{"\[Xi]", "-", "z"}]], "]"}]}], 
                RowBox[{"\[ScriptCapitalB]", " ", "z"}]]}], ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z", ",", 
         RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
     "First"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["sec", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox["z", "\[Xi]"]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.711433975886159*^9, 3.711433991072525*^9}, {
   3.7114340770296164`*^9, 3.711434111260458*^9}, {3.711434202514422*^9, 
   3.7114342913822947`*^9}, 3.7114461142353277`*^9, {3.711446254253386*^9, 
   3.711446262844467*^9}, {3.711446365369894*^9, 3.711446372061371*^9}, {
   3.711446772476375*^9, 3.7114467841630917`*^9}, 3.711447069978993*^9, {
   3.711447133400799*^9, 3.711447160855138*^9}, {3.711452104563302*^9, 
   3.711452109978841*^9}, {3.711689686724687*^9, 3.711689713555806*^9}, {
   3.711801927580529*^9, 3.711801945971114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "with", " ", "my", " ", "simplified", " ", "solution"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["sec", "\[Xi]"], "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        SuperscriptBox["\[ScriptCapitalN]", "2"]}], 
       SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[Xi]", "-", "z"}], "z"], ")"}], " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"\[Xi]", "-", "z"}], "\[Xi]"], "]"}]}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PolyLog", "[", 
           RowBox[{"2", ",", "1"}], "]"}], "-", 
          RowBox[{"PolyLog", "[", 
           RowBox[{"2", ",", 
            FractionBox["z", "\[Xi]"]}], "]"}]}], ")"}]}], " ", ")"}]}], " ", 
     ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711690581669384*^9, 3.711690679833262*^9}, {
  3.711794512098901*^9, 3.7117945152021313`*^9}, {3.711801952812492*^9, 
  3.7118019601232243`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times to \[Sigma]-level of chimerism", \
"Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}, {
  3.6779157947628508`*^9, 3.6779157995863657`*^9}}],

Cell["\<\
If we want to know if our mutant reaches a given level of clonality/chimerism \
(\[Sigma]), we need to modify the boundary conditions.\
\>", "Text",
 CellChangeTimes->{{3.69557591333808*^9, 3.695575967335421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "\[Xi]"}], ",", 
     RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
     RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
     RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.711447104629136*^9, 3.711447106889133*^9}, 
   3.7118019724017467`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "''"}], "[", "z", "]"}], "\[Equal]", "0"}], ",", 
         
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "1"}]}], 
        "}"}], ",", 
       RowBox[{"\[Phi]", "[", "z", "]"}], ",", "z"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
  3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
  3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
  3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
  3.6774799842536983`*^9}, {3.6774800356605387`*^9, 3.6774800392434473`*^9}, {
  3.677480074587178*^9, 3.677480076602214*^9}, {3.6774802739161453`*^9, 
  3.677480336530141*^9}, {3.677909832830461*^9, 3.677909863652874*^9}, {
  3.684146409670973*^9, 3.684146434701337*^9}, {3.711447220756666*^9, 
  3.711447222222681*^9}, {3.7118019748657703`*^9, 3.711801981001243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"t", "''"}], "[", "z", "]"}], "\[Equal]", 
          RowBox[{"-", 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalB]", " ", "z", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"t", "[", "z", "]"}], ",", "z", ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}, {3.6779098801164293`*^9, 
   3.677909880700451*^9}, {3.677909960626295*^9, 3.677909965841529*^9}, 
   3.684146447405238*^9, {3.684146492323386*^9, 3.684146494403393*^9}, {
   3.711447228461125*^9, 3.7114472451694*^9}, {3.7116897608183203`*^9, 
   3.7116897715136337`*^9}, {3.7118019856903267`*^9, 
   3.7118019934419823`*^9}, {3.711802071294606*^9, 3.7118020720144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "z", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ScriptCapitalN]", 
               RowBox[{"\[ScriptCapitalB]", " ", "z", 
                RowBox[{"(", 
                 RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
             FractionBox["z", 
              RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z", ",", 
         RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
     "First"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox["z", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
  3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
  3.677480721756995*^9}, {3.67791581711384*^9, 3.6779158178977127`*^9}, {
  3.677915853481181*^9, 3.6779158809995203`*^9}, {3.6779292242820187`*^9, 
  3.677929225657383*^9}, {3.684146516883525*^9, 3.684146606839511*^9}, {
  3.6900208683919277`*^9, 3.69002087263065*^9}, {3.695575983538888*^9, 
  3.695576000088818*^9}, {3.71144182527181*^9, 3.71144182969525*^9}, {
  3.711447271298683*^9, 3.71144728250486*^9}, {3.711689779185422*^9, 
  3.711689794168777*^9}, {3.711802082031295*^9, 3.711802101486642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "my", " ", "simplified", " ", "form"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
     
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Xi]", "-", "z"}], "z"], 
          RowBox[{"Log", "[", 
           FractionBox["\[Xi]", 
            RowBox[{"\[Xi]", "-", "z"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "\[Sigma]"}], "]"}]}]}], ")"}]}], ")"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711447339417123*^9, 3.711447432439258*^9}, {
  3.711689809584949*^9, 3.71168983582344*^9}, {3.7116898795977697`*^9, 
  3.711689893637302*^9}, {3.711690268247616*^9, 3.711690299654394*^9}, {
  3.7116903338371277`*^9, 3.711690434233481*^9}, {3.711802143804035*^9, 
  3.711802149293062*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Second", " ", 
    RowBox[{"moment", ":", " ", 
     RowBox[{"NEW", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"DSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "''"}], "[", "z", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "2"}], 
            FractionBox["\[ScriptCapitalN]", 
             RowBox[{"\[ScriptCapitalB]", " ", "z", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}]], 
            RowBox[{"(", 
             RowBox[{
              FractionBox["z", 
               RowBox[{"\[Sigma]", " ", "\[Xi]"}]], 
              FractionBox["\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{"\[Xi]", "-", "z"}], "z"], 
                 RowBox[{"Log", "[", 
                  FractionBox["\[Xi]", 
                   RowBox[{"\[Xi]", "-", "z"}]], "]"}]}], "+", 
                RowBox[{
                 FractionBox["1", "\[Sigma]"], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Sigma]"}], ")"}], 
                 RowBox[{"Log", "[", 
                  RowBox[{"1", "-", "\[Sigma]"}], "]"}]}]}], ")"}]}], 
             ")"}]}]}], ",", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"\[Theta]", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], 
         "}"}], ",", 
        RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z", ",", 
        RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
    "First"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["sec", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox["z", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.711447452655299*^9, 3.7114474791078033`*^9}, {
   3.711447585073863*^9, 3.71144761197608*^9}, {3.711447926581849*^9, 
   3.7114479802450027`*^9}, {3.711448096579438*^9, 3.711448099591017*^9}, {
   3.71145216604856*^9, 3.711452174719803*^9}, {3.711689845278886*^9, 
   3.711689854238624*^9}, 3.7116899089981413`*^9, 3.7116913106750603`*^9, {
   3.711802165660874*^9, 3.711802190002701*^9}}],

Cell[CellGroupData[{

Cell["Manual calculation to avoid imaginary numbers", "Subsubsection",
 CellChangeTimes->{{3.711449124909853*^9, 3.711449134375198*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.71144818895875*^9, 3.711448190060421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Integrating", " ", "the", " ", 
     RowBox[{"\[Theta]", "''"}], " ", "equation", " ", "gives", " ", "the", 
     " ", "following", " ", "solution"}], ",", " ", 
    RowBox[{
    "from", " ", "which", " ", "we", " ", "can", " ", "determine", " ", "the",
      " ", "integration", " ", "constants", " ", "c1", " ", "and", " ", 
     "c2"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "z_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     FractionBox[
      SuperscriptBox["\[ScriptCapitalN]", "2"], 
      RowBox[{
       SuperscriptBox["\[ScriptCapitalB]", "2"], " ", "\[Sigma]", " ", 
       "\[Xi]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "z"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}], 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"\[Xi]", "-", "z"}], "\[Xi]"], "]"}]}], "+", 
       RowBox[{"z", " ", 
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          FractionBox["z", "\[Xi]"]}], "]"}]}], "-", 
       RowBox[{
        FractionBox["1", "\[Sigma]"], 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Sigma]"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "\[Sigma]"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Log", "[", 
           RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"c1", " ", "z"}], "+", "c2"}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"c", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", "c2"}], "}"}]}], "]"}], "//", 
     "First"}]}]}]}]], "Input",
 CellChangeTimes->{{3.711445759906762*^9, 3.7114459039939747`*^9}, {
  3.7114481807497463`*^9, 3.711448187500297*^9}, {3.711448291873681*^9, 
  3.7114483387272987`*^9}, {3.711690485711801*^9, 3.711690523510222*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"f", "[", "z", "]"}], "/.", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.711445907982535*^9, 3.711445914552537*^9}, 
   3.71144820451572*^9, 3.711448429868924*^9, 3.7118022172256517`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Test", " ", "with", " ", "second", " ", "moment", " ", "of", " ", 
   "fixation", " ", "time", " ", 
   RowBox[{"(", 
    RowBox[{"\[Sigma]", "=", "1"}], ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.711449155603196*^9, 3.711449178707427*^9}, {
  3.711690149355753*^9, 3.711690154499402*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"f", "[", "z", "]"}], "/.", "c"}], 
      FractionBox["z", 
       RowBox[{"\[Sigma]", " ", "\[Xi]"}]]], ",", 
     RowBox[{"\[Sigma]", "\[Rule]", "1"}]}], "]"}], "-", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       SuperscriptBox["\[ScriptCapitalN]", "2"]}], 
      SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"\[Xi]", "-", "z"}], "z"], ")"}], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"\[Xi]", "-", "z"}], "\[Xi]"], "]"}]}], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "-", 
         RowBox[{"PolyLog", "[", 
          RowBox[{"2", ",", 
           FractionBox["z", "\[Xi]"]}], "]"}]}], ")"}]}], " ", ")"}]}], " ", 
    ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711445989071352*^9, 3.7114459989022217`*^9}, {
   3.7114483635740232`*^9, 3.711448365213818*^9}, {3.711449181611537*^9, 
   3.711449249217004*^9}, 3.711690816781085*^9, {3.711794622086344*^9, 
   3.7117946244224043`*^9}, {3.711802232361259*^9, 3.71180224227308*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Check", " ", "my", " ", "simplified", " ", 
   RowBox[{"(", "rewritten", ")"}], " ", "solution"}], "*)"}]], "Input",
 CellChangeTimes->{{3.711690948125101*^9, 3.711690977173394*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gg", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ScriptCapitalN]", "2"]}], 
     SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"\[Xi]", "-", "z"}], "z"], " ", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"\[Xi]", "-", "z"}], "\[Xi]"], "]"}]}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", "\[Sigma]"}], "]"}], "-", " ", 
        RowBox[{"PolyLog", "[", 
         RowBox[{"2", ",", 
          FractionBox["z", "\[Xi]"]}], "]"}]}], ")"}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "\[Sigma]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Xi]", "-", "z"}], "z"], 
          RowBox[{"Log", "[", 
           FractionBox["\[Xi]", 
            RowBox[{"\[Xi]", "-", "z"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "-", "\[Sigma]"}], "]"}]}], "-", "1"}], ")"}]}]}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"f", "[", "z", "]"}], "/.", "c"}], 
     FractionBox["z", 
      RowBox[{"\[Sigma]", " ", "\[Xi]"}]]], "-", "gg"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.711449318617049*^9, 3.71144938253233*^9}, {
   3.711449441947447*^9, 3.711449463578641*^9}, {3.711449700619499*^9, 
   3.71144984331035*^9}, {3.7114499558912687`*^9, 3.711449969290166*^9}, {
   3.7114503976685333`*^9, 3.711450411778762*^9}, {3.711451309655004*^9, 
   3.711451352675701*^9}, 3.71145138522921*^9, {3.711451426250176*^9, 
   3.7114514327126293`*^9}, {3.711451737824656*^9, 3.7114518070366096`*^9}, {
   3.711691002917303*^9, 3.711691033771359*^9}, {3.7116911019931602`*^9, 
   3.711691194335187*^9}, {3.7118022492485533`*^9, 3.711802264097659*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Advantageous clone", "Section",
 CellChangeTimes->{{3.677323077902556*^9, 3.677323082429555*^9}, {
  3.695576075431119*^9, 3.695576078581169*^9}}],

Cell[CellGroupData[{

Cell["Jacobian and eigensystem of neutral system", "Subsection",
 CellChangeTimes->{{3.668257551026848*^9, 3.668257552191036*^9}, {
  3.668313384779729*^9, 3.668313389091033*^9}, {3.668510030093388*^9, 
  3.6685100351252537`*^9}}],

Cell[TextData[{
 "Writing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], ")"}], "/", "N"}]}], TraditionalForm]]],
 ", the neutral ODEs for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", 
    RowBox[{
     OverscriptBox["x", "\[Rule]"], "/", "dt"}]}], TraditionalForm]]],
 " are given by:"
}], "Text",
 CellChangeTimes->{{3.6955736326165047`*^9, 3.6955736841102343`*^9}, {
  3.6955737872290983`*^9, 3.6955738201183767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesNeutral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], "x3"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x1"}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], "x4"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "x3"}], "+", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "x4"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6682575831991*^9, 3.668257751936234*^9}, {
  3.677308948262648*^9, 3.677308994204137*^9}, {3.677309034596307*^9, 
  3.6773090467222757`*^9}, {3.695576121498086*^9, 3.695576122808425*^9}}],

Cell["\<\
The slow manifold is given by xStar. We then compute the Jacobian of the ODEs \
about this point.\
\>", "Text",
 CellChangeTimes->{{3.695573839219204*^9, 3.695573899281167*^9}, {
  3.695573932972476*^9, 3.69557396597019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", 
        RowBox[{
         FractionBox["\[Beta]", "\[Delta]"], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], ",", 
       RowBox[{"x2", "\[Rule]", 
        RowBox[{
         FractionBox["\[Beta]", "\[Delta]"], "z"}]}], ",", 
       RowBox[{"x3", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
       RowBox[{"x4", "\[Rule]", "z"}]}], "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[Delta]"}], 
        RowBox[{"a", " ", "\[Beta]"}]]}]}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"odesNeutral", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "}"}]}], 
      "]"}], "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "J", "]"}]}], "Input",
 CellChangeTimes->{{3.695573903138708*^9, 3.6955739227886744`*^9}, 
   3.695573970004027*^9, {3.695574000684684*^9, 3.6955740125537252`*^9}, {
   3.695576142641704*^9, 3.695576143935557*^9}, {3.695578047600287*^9, 
   3.695578052638955*^9}, {3.695578126939178*^9, 3.695578132000951*^9}}],

Cell[TextData[{
 "Now we compute the eigenvalues, and right & left eigenvectors of the \
neutral Jacobian, ",
 Cell[BoxData[
  FormBox["J", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.695576180066536*^9, 3.695576197701112*^9}, {
   3.695578033431114*^9, 3.695578042141323*^9}, 3.70893195532397*^9}],

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668257903804352*^9, 3.668257936249565*^9}, {
  3.668258186073648*^9, 3.668258212881054*^9}, {3.668313280711825*^9, 
  3.6683132863668413`*^9}, {3.695578108771305*^9, 3.695578144016879*^9}}],

Cell[BoxData[
 RowBox[{"vLong", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6682578845517*^9, 3.668257886467813*^9}, {
  3.668258005416245*^9, 3.66825803552743*^9}, {3.668313276512781*^9, 
  3.668313290470598*^9}, {3.6955783767347507`*^9, 3.6955783771560183`*^9}}],

Cell[BoxData[
 RowBox[{"uLong", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"Transpose", "[", "J", "]"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668258062573778*^9, 3.668258066404913*^9}, {
   3.668313295630507*^9, 3.668313296054381*^9}, 3.668313396731451*^9, {
   3.695578379148731*^9, 3.6955783796522627`*^9}}],

Cell["\<\
For aesthetics, we make sure z does not appear in the denominator. We also \
normalise the left eigenvectors.\
\>", "Text",
 CellChangeTimes->{{3.695576326838492*^9, 3.695576366127243*^9}}],

Cell[BoxData[
 RowBox[{"vNorm", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"vLong", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"vLong", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "4"}], "]"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"vLong", "[", 
       RowBox[{"[", "2", "]"}], "]"}], 
      RowBox[{"vLong", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]], ",", 
     RowBox[{"z", 
      FractionBox[
       RowBox[{"vLong", "[", 
        RowBox[{"[", "3", "]"}], "]"}], 
       RowBox[{"vLong", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "4"}], "]"}], "]"}]]}], ",", 
     RowBox[{"z", 
      FractionBox[
       RowBox[{"vLong", "[", 
        RowBox[{"[", "4", "]"}], "]"}], 
       RowBox[{"vLong", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "4"}], "]"}], "]"}]]}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.695576261568841*^9, 3.695576296622437*^9}, {
  3.69557817739298*^9, 3.6955781790404053`*^9}, {3.695578264440542*^9, 
  3.695578270526478*^9}, {3.695578388524782*^9, 3.6955783979506197`*^9}}],

Cell[BoxData[
 RowBox[{"uNorm", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"uLong", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{
       RowBox[{"uLong", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"vNorm", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668510555373578*^9, 3.668510577706005*^9}, {
  3.695578181272563*^9, 3.695578186839653*^9}, {3.695578402750791*^9, 
  3.695578405214717*^9}}],

Cell["\<\
The eigenvectors can be compactified further by expressing them in terms of \
the eigenvalues.
Here we check that our shortened forms fit with the solutions above, and that \
they are orthonormal.\
\>", "Text",
 CellChangeTimes->{{3.695576757362596*^9, 3.6955768127917957`*^9}, {
  3.695578340382938*^9, 3.695578347116832*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "\[Beta]"}], "\[Delta]"], ",", 
        FractionBox["\[Beta]", "\[Delta]"], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Beta]", "+", "d"}], "d"], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Beta]", "+", "d"}], "d"]}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["\[Beta]", 
          RowBox[{"d", " ", "\[Delta]"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "\[Beta]"}], "\[Delta]"]}], ")"}], "z"}], ",", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}], ",", "z"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
        RowBox[{
         FractionBox["\[Beta]", 
          RowBox[{"d", " ", "\[Delta]"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "\[Beta]"}], "\[Delta]"]}], ")"}], "z"}], ",", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}], ",", "z"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"d", " ", "\[Delta]"}], 
       RowBox[{"a", " ", "\[Beta]"}]]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "\[Beta]", " ", "\[Delta]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "\[Beta]"}], "-", 
           RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], " ", "z"}], ",", 
         RowBox[{"d", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", " ", "z"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "+", "d"}], ")"}]}], "z"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Beta]", "+", "d"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       FractionBox[
        RowBox[{"a", " ", "d", " ", "\[Beta]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "\[Beta]"}], "-", 
           RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", " ", "z"}], ",", 
         RowBox[{
          RowBox[{"-", "\[Delta]"}], 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", " ", "z"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], " ", "z"}], ",", 
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       FractionBox["a", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "\[Beta]"}], "-", 
           RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "\[Beta]"}], 
            RowBox[{"2", "\[Delta]"}]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Beta]", "+", "d"}], ")"}], "\[Delta]"}], 
            RowBox[{"2", "\[Beta]"}]]}], ")"}]}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", " ", "\[Delta]"}], ",", 
         RowBox[{"d", " ", "\[Delta]"}], ",", 
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
           ")"}]}], ",", 
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
           ")"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       FractionBox["a", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "\[Beta]"}], "-", 
           RowBox[{"d", " ", "\[Delta]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "+", 
           FractionBox[
            RowBox[{"a", " ", "\[Beta]"}], 
            RowBox[{"2", "\[Delta]"}]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Beta]", "+", "d"}], ")"}], "\[Delta]"}], 
            RowBox[{"2", "\[Beta]"}]]}], ")"}]}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"d", " ", "\[Delta]"}], ",", 
         RowBox[{"d", " ", "\[Delta]"}], ",", 
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
           ")"}]}], ",", 
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
           ")"}]}]}], "}"}]}]}], "\[IndentingNewLine]", "}"}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"d", " ", "\[Delta]"}], 
       RowBox[{"a", " ", "\[Beta]"}]]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.695578216015052*^9, 3.695578219544037*^9}, {
  3.6955782788664083`*^9, 3.695578289447497*^9}, {3.6955784132006493`*^9, 
  3.69557841650179*^9}, {3.6955785101605577`*^9, 3.6955785562222424`*^9}}],

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"vNorm", "-", "v"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"uNorm", "-", "u"}], "]"}]}], "Input",
 CellChangeTimes->{{3.668777106989574*^9, 3.66877712233244*^9}, {
  3.695576736979989*^9, 3.69557675121027*^9}, {3.6955782982392406`*^9, 
  3.695578306189044*^9}, {3.695578426035819*^9, 3.6955784314776297`*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ".", 
     RowBox[{"v", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695578367924515*^9, 3.695578370484455*^9}, {
  3.695578437789566*^9, 3.695578440083303*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Drift vector", "Subsection",
 CellChangeTimes->{{3.668663746520438*^9, 3.668663748407606*^9}}],

Cell["\<\
We find that the new drift vector along the slow-subspace satisfies \
\[Epsilon] u1.h, where h is the extra drift on the slow-manifold xStar due to \
the selective effect of \[Epsilon].\
\>", "Text",
 CellChangeTimes->{{3.6955768593447742`*^9, 3.6955769348218327`*^9}, {
  3.6955797589402227`*^9, 3.695579759546625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "\[Gamma]d"}], "+", 
           RowBox[{"\[Beta]", " ", "\[Gamma]\[Beta]"}]}], ")"}], "x4"}], "-", 
        
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Gamma]\[Delta]"}], "+", 
           RowBox[{"a", " ", "\[Gamma]a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x2"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Gamma]d", " ", "x4"}], " ", "+", " ", 
        RowBox[{"a", " ", "\[Gamma]a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}], "/.",
      "xStar"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69557857999722*^9, 3.69557877382694*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ".", "h"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6955787868930264`*^9, 3.695578807730257*^9}, {
  3.6955797815975924`*^9, 3.6955797830754557`*^9}}],

Cell[TextData[{
 "Again this can be written in a more compact form (as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalA]", " ", 
    RowBox[{"z", "(", 
     RowBox[{"\[Xi]", "-", "z"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")."
}], "Text",
 CellChangeTimes->{{3.695577021346534*^9, 3.6955770544799013`*^9}, {
  3.6955772180308437`*^9, 3.695577231548636*^9}, {3.69557893187311*^9, 
  3.6955789346620913`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ".", "h"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"\[Epsilon]", 
      FractionBox[
       RowBox[{"a", " ", "d", " ", 
        SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", " ", "\[Beta]"}], "-", 
          RowBox[{"d", " ", "\[Delta]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", "\[Beta]"}], "+", 
          RowBox[{"d", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Beta]", " ", "\[Delta]"}]}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], ")"}], "-", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]d", "-", "\[Gamma]a"}], ")"}]}], ")"}], "z", 
      RowBox[{"(", 
       RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ")"}]}], "/.", 
   RowBox[{"\[Xi]", "\[Rule]", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"d", " ", "\[Delta]"}], 
      RowBox[{"a", " ", "\[Beta]"}]]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66866397996664*^9, 3.668663997734776*^9}, {
   3.668664220263571*^9, 3.6686643065799837`*^9}, {3.6686644565594673`*^9, 
   3.6686644728698893`*^9}, {3.6955769943784037`*^9, 
   3.6955770066018248`*^9}, {3.6955770865554523`*^9, 3.695577105064086*^9}, {
   3.6955788368183823`*^9, 3.695578860665351*^9}, 3.6955789169282637`*^9, {
   3.695579787988243*^9, 3.695579792643886*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Slow subspace", "Subsection",
 CellChangeTimes->{{3.6685106794869328`*^9, 3.668510691621687*^9}, 
   3.695577381366755*^9}],

Cell[TextData[{
 "Our slow-subspace satisfies the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "~"], "=", 
    RowBox[{
     SuperscriptBox["x", "*"], "+", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"f", "(", "z", ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "z", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is given by:"
}], "Text",
 CellChangeTimes->{{3.6955789929984407`*^9, 3.695579054553976*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"-", "1"}], 
        RowBox[{"\[Lambda]", "[", 
         RowBox[{"[", "k", "]"}], "]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ".", "h"}], ")"}], 
       RowBox[{"v", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"xTilde", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "/.", 
      "xStar"}], ")"}], "+", 
    RowBox[{"\[Epsilon]", " ", "f"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.668777889930395*^9, {3.6687779325037813`*^9, 3.668777938398926*^9}, {
   3.668778011101204*^9, 3.668778061634667*^9}, {3.6955790571381807`*^9, 
   3.695579062234375*^9}, {3.695579113838834*^9, 3.695579140897011*^9}, {
   3.69557918815242*^9, 3.6955791977656403`*^9}, {3.695579306658332*^9, 
   3.6955793099613457`*^9}, 3.695579397791819*^9, {3.695579718438501*^9, 
   3.695579718866437*^9}, {3.6956311541530867`*^9, 3.695631174553863*^9}}],

Cell[CellGroupData[{

Cell["Visualise slow subspace", "Subsubsection",
 CellChangeTimes->{{3.695628924841165*^9, 3.695628929200087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ODE", " ", "solver"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"solveODEs", "[", 
    RowBox[{"params_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paramSub", ",", "initialCondition", ",", "eqs", ",", "dSol"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paramSub", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           FractionBox["sStar", 
            RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"initialCondition", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "sStar"}], ",", 
         RowBox[{
          RowBox[{"s2", "[", "0", "]"}], "\[Equal]", "\[ScriptCapitalS]"}], 
         ",", 
         RowBox[{
          RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "nStar"}], ",", 
         RowBox[{
          RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d1", "+", "\[Beta]1"}], ")"}], 
               RowBox[{"n1", "[", "t", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Delta]1", "+", 
                 RowBox[{"a1", 
                  FractionBox[
                   RowBox[{"\[ScriptCapitalN]", "-", 
                    RowBox[{"n1", "[", "t", "]"}], "-", 
                    RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}],
                 ")"}], 
               RowBox[{"s1", "[", "t", "]"}]}]}]}], " ", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"s2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d2", "+", "\[Beta]2"}], ")"}], 
               RowBox[{"n2", "[", "t", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Delta]2", "+", 
                 RowBox[{"a2", 
                  FractionBox[
                   RowBox[{"\[ScriptCapitalN]", "-", 
                    RowBox[{"n1", "[", "t", "]"}], "-", 
                    RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}],
                 ")"}], 
               RowBox[{"s2", "[", "t", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "d1"}], " ", 
               RowBox[{"n1", "[", "t", "]"}]}], "+", 
              RowBox[{"a1", 
               FractionBox[
                RowBox[{"\[ScriptCapitalN]", "-", 
                 RowBox[{"n1", "[", "t", "]"}], "-", 
                 RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
               RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "d2"}], " ", 
               RowBox[{"n2", "[", "t", "]"}]}], "+", 
              RowBox[{"a2", 
               FractionBox[
                RowBox[{"\[ScriptCapitalN]", "-", 
                 RowBox[{"n1", "[", "t", "]"}], "-", 
                 RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
               RowBox[{"s2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
           "}"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a1", "\[Rule]", "a"}], ",", 
            RowBox[{"d1", "\[Rule]", "d"}], ",", 
            RowBox[{"\[Beta]1", "\[Rule]", "\[Beta]"}], ",", 
            RowBox[{"\[Delta]1", "\[Rule]", "\[Delta]"}], ",", 
            RowBox[{"a2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]a", " ", "\[Epsilon]"}]}], ")"}], "a"}]}], 
            ",", 
            RowBox[{"d2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]d", " ", "\[Epsilon]"}]}], ")"}], "d"}]}], 
            ",", 
            RowBox[{"\[Beta]2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]\[Beta]", " ", "\[Epsilon]"}]}], ")"}], 
              "\[Beta]"}]}], ",", 
            RowBox[{"\[Delta]2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]\[Delta]", " ", "\[Epsilon]"}]}], ")"}], 
              "\[Delta]"}]}]}], "}"}]}], ")"}], "/.", "paramSub"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dSol", "=", 
       RowBox[{
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eqs", "/.", "params"}], ",", 
             RowBox[{"initialCondition", "/.", "params"}]}], "}"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s1", "[", "t", "]"}], ",", 
            RowBox[{"s2", "[", "t", "]"}], ",", 
            RowBox[{"n1", "[", "t", "]"}], ",", 
            RowBox[{"n2", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "dSol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.695629538258133*^9, 3.695629576123612*^9}, {
  3.695629607433374*^9, 3.69562967987818*^9}, {3.695629806801642*^9, 
  3.6956301246791553`*^9}, {3.6956303461026363`*^9, 3.6956303523023252`*^9}, {
  3.695630390125766*^9, 3.6956303984850597`*^9}, {3.6956304376428556`*^9, 
  3.695630467994227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plotting", " ", "function"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"pPlot", "[", 
    RowBox[{"i_", ",", "odeSols_", ",", "paramsTab_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "paramSub", ",", "xTilde", ",", "odeSols\[Section]i", ",", 
       "paramsTab\[Section]i", ",", "n\[Epsilon]", ",", "myCol", ",", 
       "plot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paramSub", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           FractionBox["sStar", 
            RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xTilde", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "z", "-", 
              FractionBox[
               RowBox[{"d", " ", "\[Delta]"}], 
               RowBox[{"a", " ", "\[Beta]"}]], "-", 
              FractionBox[
               RowBox[{"d", " ", "z", " ", "\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Beta]"}], 
                  "+", 
                  RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "d", " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d", "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "3"]}]}], ")"}], " ", 
                "\[Epsilon]"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", " ", "\[Beta]"}], "-", 
                   RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
                 "2"]}]]}], ")"}]}], "\[Delta]"], ",", 
          FractionBox[
           RowBox[{"z", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "d", " ", "\[Beta]", " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "z", " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "z"}], ")"}], " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["a", "2"], " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "z", " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                    RowBox[{"d", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Gamma]a"}],
                     "+", "\[Gamma]d", "-", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]d", "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Gamma]a"}],
                     "+", "\[Gamma]d", "-", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]d", "-", "\[Gamma]\[Beta]", "+", 
                    "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{
                   SuperscriptBox["d", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", " ", "\[Beta]"}], "-", 
                   RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
                 "2"]}]]}], ")"}]}], "\[Delta]"], ",", 
          RowBox[{"1", "-", "z", "-", 
           FractionBox[
            RowBox[{"d", " ", "\[Delta]"}], 
            RowBox[{"a", " ", "\[Beta]"}]], "+", 
           FractionBox[
            RowBox[{"d", " ", "z", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Beta]"}], 
               "+", 
               RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["d", "2"], " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "-", "\[Gamma]\[Beta]", 
                    "+", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                  RowBox[{"d", " ", "\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "-", "\[Gamma]\[Beta]", 
                    "+", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"3", " ", "\[Gamma]d"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
               RowBox[{"a", " ", 
                SuperscriptBox["\[Beta]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                  RowBox[{"d", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                 ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"a", " ", "\[Beta]"}], "-", 
                RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
              "2"]}]]}], ",", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
               "2"], "+", 
              RowBox[{"d", " ", "\[Beta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
               " ", "\[Epsilon]"}], "+", 
              FractionBox[
               RowBox[{"a", " ", "d", " ", "z", " ", "\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"3", " ", "\[Gamma]d"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}], " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}], " ", "\[Delta]"}], "-", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "\[Beta]"}], "-", 
                  RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
            "2"]]}], "}"}], "/.", "paramSub"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"odeSols\[Section]i", "=", 
       RowBox[{"odeSols", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"paramsTab\[Section]i", "=", 
       RowBox[{"paramsTab", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n\[Epsilon]", "=", 
       RowBox[{"Length", "[", "paramsTab\[Section]i", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"myCol", "=", 
       RowBox[{"col", "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"plot", "=", 
       RowBox[{
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", "t", "]"}], ",", 
                  RowBox[{"s2", "[", "t", "]"}]}], "}"}], "/.", 
                RowBox[{"odeSols\[Section]i", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
            RowBox[{"MaxRecursion", "\[Rule]", "15"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"myCol", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}],
             ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], " ", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[ScriptCapitalN]", " ", 
                    RowBox[{"(", 
                    RowBox[{"xTilde", "/.", 
                    RowBox[{"z", "\[Rule]", 
                    RowBox[{
                    FractionBox["nStar", "\[ScriptCapitalN]"], " ", "x"}]}]}],
                     ")"}]}], ")"}], "/.", 
                  RowBox[{"paramsTab\[Section]i", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"myCol", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.02", ",", "0.02"}], "}"}], "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], 
              "]"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
             RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
             RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.1", ",", "0.3"}], "}"}], "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "0.7"}], "}"}], "]"}]}], "}"}], "]"}]}],
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[CurlyEpsilon]\>\"", ",", "labelSize", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
               RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.54", ",", "0.74"}], "}"}], "]"}]}], "]"}], "]"}], 
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Max", "[", "\[Epsilon]Vals", "]"}]}], ")"}], 
                "\[Times]", " ", 
                RowBox[{"sStarVals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Max", "[", "\[Epsilon]Vals", "]"}]}], ")"}], 
                "\[Times]", 
                RowBox[{"sStarVals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(s\), \(2\)]\)\>\"", ",", 
                 "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(s\), \(1\)]\)\>\"", ",", 
                 "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)=\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"sStarVals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", "labelSize",
                  ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], 
              "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"ticksSize", ",", 
             RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"52", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "30"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
        "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.695629538258133*^9, 3.695629580582512*^9}, {
  3.695630150487031*^9, 3.695630181676609*^9}, {3.695631013791443*^9, 
  3.695631114395885*^9}, {3.695631260230754*^9, 3.695631261669949*^9}, {
  3.695631378907044*^9, 3.695631475942564*^9}, {3.695631567267468*^9, 
  3.695631570668131*^9}, {3.695631682351459*^9, 3.695631699935519*^9}, {
  3.695631731078377*^9, 3.695631769860447*^9}, {3.695631804276219*^9, 
  3.695631891312611*^9}, {3.695631969653493*^9, 3.6956322828525267`*^9}, {
  3.695632384248952*^9, 3.695632390143971*^9}, {3.6956324230726337`*^9, 
  3.695632423214795*^9}, {3.6956324840934772`*^9, 3.6956325866485863`*^9}, {
  3.695632640047977*^9, 3.695632640439431*^9}, {3.695632693206221*^9, 
  3.69563275965131*^9}, {3.6956328079392433`*^9, 3.695632896518944*^9}, {
  3.708931541539064*^9, 3.708931541562016*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Determine", " ", "parameters", " ", "and", " ", "evaluate", " ", 
    "trajectories", " ", "from", " ", "ODEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sStarVals", "=", 
     RowBox[{"{", 
      RowBox[{"10", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nS", "=", 
     RowBox[{"Length", "[", "sStarVals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.5", ",", "1.5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"paramsFunc", "[", 
      RowBox[{"\[Section]sStar_", ",", "\[Section]\[Epsilon]_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
       RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
       RowBox[{"nStar", "\[Rule]", "9900"}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"1.", "/", "39"}]}], ",", 
       RowBox[{"\[ScriptCapitalS]", "\[Rule]", "5000"}], ",", 
       RowBox[{"\[ScriptL]", "\[Rule]", 
        FractionBox["3", "1440."]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "\[Section]\[Epsilon]"}], ",", 
       RowBox[{"\[Gamma]\[Beta]", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Gamma]\[Delta]", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Gamma]d", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", "0"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"paramsTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramsFunc", "[", 
          RowBox[{
           RowBox[{"sStarVals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", "3000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odeSols", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"solveODEs", "[", 
          RowBox[{
           RowBox[{"paramsTab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "T"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.677328790399165*^9, 3.6773289187142363`*^9}, {
   3.677329506822762*^9, 3.677329574499803*^9}, {3.677329635978705*^9, 
   3.677329636057755*^9}, {3.6773305896894817`*^9, 3.677330590209255*^9}, {
   3.6773852502724733`*^9, 3.677385267487152*^9}, 3.6773853076062117`*^9, {
   3.6773853748995943`*^9, 3.6773853757313757`*^9}, {3.6773855077028427`*^9, 
   3.677385508054625*^9}, {3.695629369729677*^9, 3.695629377544651*^9}, {
   3.695629416551139*^9, 3.695629455493663*^9}, {3.695630485801869*^9, 
   3.6956305306078377`*^9}, {3.695630632172306*^9, 3.695630634019733*^9}, {
   3.695630978999683*^9, 3.695631001735991*^9}, {3.695631272765643*^9, 
   3.6956313155474977`*^9}, {3.695631578242546*^9, 3.695631578362268*^9}, {
   3.6956322992889423`*^9, 3.6956323203120413`*^9}, {3.695632669363978*^9, 
   3.695632683412003*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Row", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pPlot", "[", 
      RowBox[{"i", ",", "odeSols", ",", "paramsTab", ",", "T"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.677386172076716*^9, 3.677386186149084*^9}, {
   3.6773862583949013`*^9, 3.677386259514772*^9}, {3.6773863749746933`*^9, 
   3.6773863770545893`*^9}, {3.695631457358231*^9, 3.69563151047719*^9}, {
   3.695632449083468*^9, 3.695632454549788*^9}, {3.6956324903220997`*^9, 
   3.695632492466007*^9}, 3.6956326629409943`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Diffusion matrix", "Subsection",
 CellChangeTimes->{{3.668411114600995*^9, 3.668411118287931*^9}}],

Cell["\<\
We assume the diffusion coefficient is unchanged by selection, such that it \
is as described in the neutral case, i.e.\
\>", "Text",
 CellChangeTimes->{{3.6955753909918833`*^9, 3.695575429122048*^9}, {
  3.695579845733582*^9, 3.695579892817384*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BTilde", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", "a", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Beta]"}], ")"}], 
       SuperscriptBox["\[Beta]", "2"], " ", 
       SuperscriptBox["\[Delta]", "2"], " "}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", "\[Beta]"}], "-", 
         RowBox[{"d", " ", "\[Delta]"}]}], ")"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
          RowBox[{"d", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], "2"]}]], 
     "z", 
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"d", " ", "\[Delta]"}], 
       RowBox[{"a", " ", "\[Beta]"}]]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668411453842161*^9, 3.668411548601388*^9}, {
  3.677309765016757*^9, 3.6773097806529016`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times", "Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}}],

Cell[TextData[{
 "We start the process on the slow manifold at the position z0. We want to \
know what is the probability our mutant reaches fixation (z=\[Xi]), and how \
long this takes.\nWe write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{"\[Epsilon]", " ", "\[ScriptCapitalN]", " ", 
     RowBox[{"\[ScriptCapitalA]", "/", "\[ScriptCapitalB]"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (const.)."
}], "Text",
 CellChangeTimes->{{3.695575671665298*^9, 3.6955757204814034`*^9}, {
  3.695575955351097*^9, 3.695575957543264*^9}, {3.695579953476364*^9, 
  3.695580018252986*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "\[Xi]"}], ",", 
     RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
     RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
     RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
     RowBox[{"\[CapitalLambda]", ">", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7114539305683317`*^9, 3.711453967971332*^9}, {
   3.711719551168295*^9, 3.711719551528069*^9}, 3.711802295944006*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"\[Phi]", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "z", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "\[Xi]", "]"}], "\[Equal]", "1"}]}], "}"}], 
       ",", 
       RowBox[{"\[Phi]", "[", "z", "]"}], ",", "z"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
   3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
   3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
   3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
   3.6774799842536983`*^9}, {3.6774800356605387`*^9, 
   3.6774800392434473`*^9}, {3.677480074587178*^9, 3.677480076602214*^9}, {
   3.6774802739161453`*^9, 3.677480336530141*^9}, 3.695580023273849*^9, {
   3.711453945364106*^9, 3.7114539466680803`*^9}, {3.711802302063142*^9, 
   3.711802309062686*^9}, {3.711802555959778*^9, 3.7118025569669857`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"t", "'"}], "[", "z", "]"}]}], "+", " ", 
           RowBox[{
            RowBox[{"t", "''"}], "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"-", 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalB]", " ", "z", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
       RowBox[{"t", "[", "z", "]"}], ",", "z", ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"z", "<", "\[Xi]"}]}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}, {3.7114539744514637`*^9, 
   3.711453977342888*^9}, {3.711691984513385*^9, 3.711691990728565*^9}, 
   3.7117104284338093`*^9, {3.711710486878826*^9, 3.71171049959744*^9}, {
   3.711718851296792*^9, 3.7117188522966022`*^9}, {3.7118025372796793`*^9, 
   3.711802553350588*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "my", " ", "simplified", " ", "solution"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "\[ScriptCapitalN]"}], 
       RowBox[{"\[ScriptCapitalB]", " ", "\[Xi]", " ", "\[CapitalLambda]"}]], 
      
      FractionBox["1", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", "1"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"EulerGamma", "+", 
           RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
           RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", "1"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "z", "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", "1"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], ")"}]}], 
        "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{
           RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], ")"}]}]}], 
       ")"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711718797583435*^9, 3.711718845360715*^9}, {
   3.711718977157139*^9, 3.711718977556601*^9}, {3.7117190347709007`*^9, 
   3.711719035178281*^9}, {3.711719066609761*^9, 3.71171907708154*^9}, {
   3.7117191295764017`*^9, 3.711719136350656*^9}, {3.711719199261949*^9, 
   3.7117192611705236`*^9}, {3.7117211851927013`*^9, 3.711721186911528*^9}, 
   3.71179435096023*^9, {3.711802566046754*^9, 3.711802585421917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "z", "]"}]}], "+", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "z", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ScriptCapitalN]", 
               RowBox[{"\[ScriptCapitalB]", " ", "z", 
                RowBox[{"(", 
                 RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
             FractionBox[
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], 
                "]"}]}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z", ",", 
         RowBox[{"Assumptions", "\[Rule]", 
          RowBox[{"z", "<", "\[Xi]"}]}]}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
     "First"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}]}]]}], 
       ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
   3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
   3.677480721756995*^9}, 3.695580089790978*^9, {3.711454025146639*^9, 
   3.711454031496674*^9}, {3.711454080304988*^9, 3.711454095880385*^9}, {
   3.711718988012644*^9, 3.711718998323813*^9}, {3.711721248838232*^9, 
   3.7117212749924507`*^9}, {3.711722745353842*^9, 3.711722746872964*^9}, {
   3.711802589501871*^9, 3.711802613500725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "my", " ", "simplified", " ", "solution"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[ScriptCapitalN]", 
        RowBox[{" ", 
         RowBox[{
         "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", "\[Xi]"}]}]]}], 
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", "1"}], 
         ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"EulerGamma", "+", 
           RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
           RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "-", 
           RowBox[{"3", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "z", "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{
           RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"2", "\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "-", 
           RowBox[{"2", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}]}], ")"}]}]}],
        ")"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711721338077428*^9, 3.711721525037034*^9}, {
   3.711721622380019*^9, 3.711722198029622*^9}, {3.7117222332462254`*^9, 
   3.7117222476436977`*^9}, {3.71172229786684*^9, 3.71172243316499*^9}, {
   3.711722495085003*^9, 3.7117226451895647`*^9}, {3.7117227363238373`*^9, 
   3.711722794415514*^9}, {3.711787353675005*^9, 3.711787361617683*^9}, 
   3.711788041411483*^9, {3.711802623916852*^9, 3.711802661819579*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times to \[Sigma]-level of chimerism", \
"Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}, {
  3.6779157947628508`*^9, 3.6779157995863657`*^9}}],

Cell["\<\
If we want to know if our mutant reaches a given level of clonality/chimerism \
(\[Sigma]), we need to modify the boundary conditions.\
\>", "Text",
 CellChangeTimes->{{3.695580110885211*^9, 3.695580117009012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "\[Xi]"}], ",", 
     RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
     RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
     RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
     RowBox[{"\[CapitalLambda]", ">", "0"}], ",", 
     RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7114539305683317`*^9, 3.711453967971332*^9}, {
   3.711719551168295*^9, 3.711719551528069*^9}, {3.711792270241007*^9, 
   3.711792277472837*^9}, 3.7118027919588003`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"\[Phi]", "'"}], "[", "z", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "z", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "1"}]}], 
        "}"}], ",", 
       RowBox[{"\[Phi]", "[", "z", "]"}], ",", "z"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
  3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
  3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
  3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
  3.6774799842536983`*^9}, {3.6774800356605387`*^9, 3.6774800392434473`*^9}, {
  3.677480074587178*^9, 3.677480076602214*^9}, {3.6774802739161453`*^9, 
  3.677480336530141*^9}, {3.677909832830461*^9, 3.677909863652874*^9}, {
  3.711792293521365*^9, 3.711792294331448*^9}, {3.711802795678463*^9, 
  3.711802804270112*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"t", "'"}], "[", "z", "]"}]}], "+", " ", 
           RowBox[{
            RowBox[{"t", "''"}], "[", "z", "]"}]}], "\[Equal]", 
          RowBox[{"-", 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalB]", " ", "z", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"t", "[", "z", "]"}], ",", "z", ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"z", "<", "\[Xi]"}]}]}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
   "First"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}, {3.6779098801164293`*^9, 
   3.677909880700451*^9}, {3.677909960626295*^9, 3.677909965841529*^9}, {
   3.71179258116746*^9, 3.7117926281323357`*^9}, {3.7118028084233103`*^9, 
   3.711802823309623*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "my", " ", "simplified", " ", "solution"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"t", "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalB]", " ", "\[Xi]", " ", "\[CapitalLambda]"}]], 
      
      FractionBox["1", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], "]"}], 
        "-", "1"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"EulerGamma", "+", 
           RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
           RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "z", "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
            "]"}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{
           RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}]}], 
          ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Sigma]", "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", "\[Sigma]"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], "]"}],
            "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}]}], ")"}]}]}], " ", ")"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.71179273270306*^9, 3.7117927380977573`*^9}, {
  3.71179286010157*^9, 3.71179287476348*^9}, {3.711793088765439*^9, 
  3.711793698183729*^9}, {3.711793770678022*^9, 3.711793843490971*^9}, {
  3.711793879802306*^9, 3.711793907640511*^9}, {3.711793965247225*^9, 
  3.71179412134614*^9}, {3.711794295899836*^9, 3.711794337090146*^9}, {
  3.7118028349586983`*^9, 3.71180286577273*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "z", "]"}]}], "+", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "z", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ScriptCapitalN]", 
               RowBox[{"\[ScriptCapitalB]", " ", "z", 
                RowBox[{"(", 
                 RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
             FractionBox[
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                 "\[Xi]"}], "]"}]}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z", "]"}], ",", "z", ",", 
         RowBox[{"Assumptions", "\[Rule]", 
          RowBox[{"z", "<", "\[Xi]"}]}]}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}], "//", 
     "First"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
            "\[Xi]"}], "]"}]}]]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", "assumptions"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
   3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
   3.677480721756995*^9}, {3.67791581711384*^9, 3.6779158178977127`*^9}, {
   3.677915853481181*^9, 3.6779158809995203`*^9}, {3.6779292242820187`*^9, 
   3.677929225657383*^9}, 3.6955801371961184`*^9, {3.7117946990703163`*^9, 
   3.711794706908052*^9}, {3.711794744851273*^9, 3.711794765109311*^9}, {
   3.711798282216062*^9, 3.711798283206627*^9}, {3.711802871652638*^9, 
   3.711802895971245*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "my", " ", "simplified", " ", "solution"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z", "]"}], "/.", "%"}], ")"}], "-", 
    "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["\[ScriptCapitalN]", 
       RowBox[{"\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", "\[Xi]"}]], 
      
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], "]"}],
           "-", "1"}], ")"}], " "}]], 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"EulerGamma", "+", 
           RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
           RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "z", "]"}], "-", 
           RowBox[{"Log", "[", 
            RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
            "]"}]}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{"(", 
               RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", "1"}], ")"}]}], "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}]}]}], 
          ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{"\[CapitalLambda]", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}], "-", 
           RowBox[{"ExpIntegralEi", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Xi]", " ", "\[Sigma]"}], 
            "]"}], "-", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
             "]"}], 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
              "\[Xi]"}], "]"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", "\[Sigma]"}], "]"}], "-", 
           RowBox[{"Log", "[", "\[Sigma]", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
            "]"}], "-", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[CapitalLambda]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
            "]"}]}], ")"}]}]}], ")"}]}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711794933011355*^9, 3.711795431421859*^9}, {
   3.711795663821774*^9, 3.711796007866012*^9}, {3.711796042056929*^9, 
   3.7117961914038057`*^9}, {3.71179626220874*^9, 3.7117963378268538`*^9}, {
   3.711796391181549*^9, 3.71179639419615*^9}, {3.711796460082819*^9, 
   3.711796530575186*^9}, {3.711796566461026*^9, 3.7117966239472227`*^9}, {
   3.711796733576836*^9, 3.711796736399743*^9}, {3.711796780837709*^9, 
   3.711796828027297*^9}, {3.711796895689849*^9, 3.71179698172013*^9}, {
   3.711797022493476*^9, 3.7117970738047743`*^9}, {3.711797114606559*^9, 
   3.7117972055688562`*^9}, {3.711797237966177*^9, 3.711797284893052*^9}, {
   3.7117973438260527`*^9, 3.7117973889440813`*^9}, {3.7117974270485153`*^9, 
   3.71179744983817*^9}, {3.711797494541841*^9, 3.711797510780074*^9}, 
   3.7117975602667637`*^9, {3.7117981711080647`*^9, 3.711798215273244*^9}, {
   3.71179826599192*^9, 3.711798300183832*^9}, {3.711802905979841*^9, 
   3.711802944130368*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1 Mathematical analysis of time to clonality (general)", "Chapter",
 CellChangeTimes->{{3.695565335947528*^9, 3.695565371137779*^9}, {
   3.695707687496222*^9, 3.695707688552051*^9}, 3.708097272703266*^9, 
   3.708168154655459*^9, {3.708778080116268*^9, 3.70877808863305*^9}}],

Cell[CellGroupData[{

Cell["Neutral clone", "Section",
 CellChangeTimes->{{3.677308899376074*^9, 3.6773089013112497`*^9}, {
  3.677323066630706*^9, 3.677323068262315*^9}, {3.6955735452611856`*^9, 
  3.6955735491383543`*^9}}],

Cell[CellGroupData[{

Cell["Jacobian and eigensystem", "Subsection",
 CellChangeTimes->{{3.668257551026848*^9, 3.668257552191036*^9}, {
  3.668313384779729*^9, 3.668313389091033*^9}}],

Cell[TextData[{
 "Writing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], ")"}], "/", "N"}]}], TraditionalForm]]],
 ", the neutral ODEs for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", 
    RowBox[{
     OverscriptBox["x", "\[Rule]"], "/", "dt"}]}], TraditionalForm]]],
 " are given by:"
}], "Text",
 CellChangeTimes->{{3.6955736326165047`*^9, 3.6955736841102343`*^9}, {
  3.6955737872290983`*^9, 3.6955738201183767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"odes", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], "x3"}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x1"}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], "x4"}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
         RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x3"}], "+", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
         RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x4"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6682575831991*^9, 3.668257751936234*^9}, {
  3.677308948262648*^9, 3.677308994204137*^9}, {3.677309034596307*^9, 
  3.6773090467222757`*^9}, {3.708158921737846*^9, 3.708158932297564*^9}, {
  3.708171886204314*^9, 3.70817194619341*^9}}],

Cell["\<\
We can find the slow manifold by solving the stationary equations\
\>", "Text",
 CellChangeTimes->{{3.708675407902088*^9, 3.70867542662044*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"odes", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7081594185043507`*^9, 3.7081594698941*^9}, {
  3.708159527284278*^9, 3.708159528491095*^9}, {3.708159586201128*^9, 
  3.708159587097208*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.708159470464953*^9, 3.708159528958619*^9, 
  3.7081595877110567`*^9, 3.708172270675729*^9, 3.7081741044920692`*^9, 
  3.708668715900873*^9, 3.708931830224668*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Check", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", "\[Beta]"}], "-", 
       RowBox[{"a", " ", "x4", " ", "\[Beta]"}], "-", 
       RowBox[{"d", " ", "\[Delta]"}], "-", 
       RowBox[{"a", " ", "\[Alpha]", " ", "\[Delta]"}], "+", 
       RowBox[{"a", " ", "x4", " ", "\[Alpha]", " ", "\[Delta]"}], "-", 
       RowBox[{"\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"]}], "+", 
       RowBox[{"\[Beta]", " ", "\[Delta]", " ", "\[Rho]"}]}], 
      RowBox[{"a", " ", "\[Delta]"}]], "-", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Beta]", "-", 
        RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], 
      RowBox[{"(", 
       RowBox[{"\[Xi]", "-", "x4"}], ")"}]}]}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.708160493380598*^9, 3.7081605539823637`*^9}, {
  3.708172836147911*^9, 3.708172851655463*^9}, {3.708174092479755*^9, 
  3.708174095239358*^9}, {3.708668742130925*^9, 3.708668745106892*^9}}],

Cell["\<\
The slow manifold is given by xStar. We then compute the Jacobian of the ODEs \
about this point.\
\>", "Text",
 CellChangeTimes->{{3.695573839219204*^9, 3.695573899281167*^9}, {
  3.695573932972476*^9, 3.69557396597019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], ",", 
       RowBox[{"x2", "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], "z"}]}], ",", 
       RowBox[{"x3", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
       RowBox[{"x4", "\[Rule]", "z"}]}], "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"odes", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "}"}]}], 
      "]"}], "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "J", "]"}]}], "Input",
 CellChangeTimes->{{3.695573903138708*^9, 3.6955739227886744`*^9}, 
   3.695573970004027*^9, {3.695574000684684*^9, 3.6955740125537252`*^9}, {
   3.7081606836575537`*^9, 3.7081607135213013`*^9}, {3.708172903632111*^9, 
   3.708172905860756*^9}}],

Cell[TextData[{
 "Now we compute the eigenvalues, and right & left eigenvectors of ",
 Cell[BoxData[
  FormBox["J", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.695574046395015*^9, 3.6955740729446774`*^9}}],

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668257903804352*^9, 3.668257936249565*^9}, {
  3.668258186073648*^9, 3.668258212881054*^9}, {3.668313280711825*^9, 
  3.6683132863668413`*^9}}],

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6682578845517*^9, 3.668257886467813*^9}, {
  3.668258005416245*^9, 3.66825803552743*^9}, {3.668313276512781*^9, 
  3.668313290470598*^9}}],

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"Transpose", "[", "J", "]"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668258062573778*^9, 3.668258066404913*^9}, {
   3.668313295630507*^9, 3.668313296054381*^9}, 3.668313396731451*^9}],

Cell[TextData[{
 "Here we extract the first eigenvectors, corresponding to the zero \
eigenvalue. They are rescaled so that they look pretty and so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"v1", "\[CenterDot]", "u1"}], "=", "1"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.695574103410289*^9, 3.6955741242000523`*^9}, {
  3.695574164407937*^9, 3.6955741949756327`*^9}, {3.6955742454087763`*^9, 
  3.6955742621407967`*^9}}],

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{"v", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{"v", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "4"}], "]"}], "]"}]], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"u1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{"u", "[", 
     RowBox[{"[", "1", "]"}], "]"}], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ".", "v1"}]], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"v1", ".", "u1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6683134066592712`*^9, 3.668313409690284*^9}, {
  3.668313471912043*^9, 3.668313526798155*^9}, {3.6685970487541924`*^9, 
  3.668597048962077*^9}, {3.6955742673004913`*^9, 3.695574282255293*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Diffusion matrix", "Subsection",
 CellChangeTimes->{{3.668411114600995*^9, 3.668411118287931*^9}}],

Cell["\<\
By considering the individual-based reactions, we can construct \
multiplicative diffusion matrix for the SDE approximation.
We can then evaluate this on the slow-manifold xStar.\
\>", "Text",
 CellChangeTimes->{{3.6955743245523863`*^9, 3.695574382148737*^9}, {
  3.6955744131777563`*^9, 3.69557444052248*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
         "x3"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x1"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x3"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
         "x4"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x2"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x4"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x3"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", "\[VeryThinSpace] ", "\[Beta]"}], "+", "d", "+", 
           
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x3"}], "+", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", "0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "x4"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", " ", "\[Beta]"}], "+", "d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x4"}], "+", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668598697363703*^9, 3.668598757580647*^9}, {
   3.6685988006357517`*^9, 3.668598857889097*^9}, {3.668598890760662*^9, 
   3.668598934030899*^9}, {3.6773092220441713`*^9, 3.677309229395602*^9}, {
   3.677309485091032*^9, 3.677309649053141*^9}, 3.695574391894211*^9, {
   3.708162138789483*^9, 3.7081621503817368`*^9}, {3.708173443486598*^9, 
   3.708173467389216*^9}, {3.708173568385659*^9, 3.7081735840010633`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"B", "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{{3.668598940890915*^9, 3.668598962368547*^9}, {
   3.668599042323842*^9, 3.668599068434012*^9}, 3.677309716659997*^9, {
   3.695574401061257*^9, 3.6955744017724323`*^9}}],

Cell["\<\
New diffusion coefficient, which is teh diffusion matrix projected onto the \
slow-manifold direction using the leading left eigenvector.\
\>", "Text",
 CellChangeTimes->{{3.695575131328445*^9, 3.695575153934256*^9}, {
  3.6955751842140083`*^9, 3.69557519082962*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"u1", ".", 
   RowBox[{"(", 
    RowBox[{"B", ".", "u1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668411221124408*^9, 3.668411235243884*^9}, {
  3.695575377469091*^9, 3.695575382796157*^9}}],

Cell["Let\[CloseCurlyQuote]s write that in a neater form.", "Text",
 CellChangeTimes->{{3.6955753909918833`*^9, 3.695575429122048*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BTilde", "=", 
   RowBox[{
    RowBox[{"2", 
     FractionBox[
      RowBox[{"\[Beta]", 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
       SuperscriptBox["\[Delta]", "2"], 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{"\[Alpha]", " ", "\[Delta]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], 
      RowBox[{"\[Xi]", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Beta]", " ", "d"}], "+", 
          RowBox[{"d", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", 
             RowBox[{"(", 
              RowBox[{"d", "+", 
               RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
        "2"]}]], "z", 
     RowBox[{"(", 
      RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.668411453842161*^9, 3.668411548601388*^9}, {
   3.677309765016757*^9, 3.6773097806529016`*^9}, 3.708164381702585*^9, 
   3.7081748354314327`*^9, {3.708669034610055*^9, 3.7086690362492657`*^9}, 
   3.708768568945323*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Check", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"u1", ".", 
     RowBox[{"(", 
      RowBox[{"B", ".", "u1"}], ")"}]}], "-", "BTilde"}], "]"}]}]], "Input"],

Cell[TextData[{
 "The coefficient, which we write as \[ScriptCapitalB] in the manuscript, can \
be expressed in terms of the fundamental parameters (",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "\[Beta]", ",", "\[ScriptCapitalN]", ",", "s", ",", "n", ",", 
    "\[ScriptL]"}], TraditionalForm]]],
 ").\nTo this end we solve the expression for s*, n*, and ",
 Cell[BoxData[
  FormBox["\[ScriptL]", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in terms of a, d, and \[Delta]."
}], "Text",
 CellChangeTimes->{{3.695575431707925*^9, 3.695575507043271*^9}, {
  3.708669193435565*^9, 3.708669235449307*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Beta]", "-", 
         RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], "n"}]}], ",", 
     RowBox[{
      RowBox[{"n", "\[Equal]", 
       RowBox[{"\[ScriptCapitalN]", " ", "\[Xi]"}]}], "/.", 
      RowBox[{"\[Xi]", "\[Rule]", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
            RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], ",", 
     RowBox[{"\[ScriptL]", "==", 
      FractionBox["1", 
       RowBox[{"\[Delta]", "+", 
        RowBox[{"a", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"\[ScriptCapitalN]", "-", "n"}], ")"}], 
          "\[ScriptCapitalN]"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "d", ",", "\[Delta]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708669109670816*^9, 3.708669167965024*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paramSub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "\[ScriptL]"], "-", 
         FractionBox[
          RowBox[{"n", " ", "\[Beta]"}], 
          RowBox[{"s", "+", 
           RowBox[{"\[Alpha]", " ", "n"}]}]]}], ")"}], 
       FractionBox["\[ScriptCapitalN]", 
        RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{
       FractionBox["s", 
        RowBox[{"n", " ", "\[ScriptL]"}]], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "n"}], 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}]}]]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.708757026271194*^9, 3.708757087735125*^9}, {
  3.708757125670392*^9, 3.7087571601561213`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]", 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
       SuperscriptBox["\[Delta]", "2"], 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{"\[Alpha]", " ", "\[Delta]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], 
      RowBox[{"\[Xi]", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Beta]", " ", "d"}], "+", 
          RowBox[{"d", " ", "\[Delta]"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", 
             RowBox[{"(", 
              RowBox[{"d", "+", 
               RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
        "2"]}]], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], ")"}], "/.",
    "paramSub"}], "]"}]], "Input",
 CellChangeTimes->{{3.708669305848485*^9, 3.708669318327414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Check", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"n", " ", "\[ScriptCapitalN]", " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", 
        RowBox[{"n", " ", "\[Alpha]"}]}], ")"}], " ", "\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", 
        RowBox[{"n", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{"\[ScriptL]", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"s", "+", 
           RowBox[{"n", " ", "\[Alpha]"}]}], ")"}]}], "-", 
        RowBox[{"n", " ", "s", " ", "\[ScriptL]", " ", "\[Beta]"}]}], ")"}], 
      "2"]], "-", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "n", " ", "\[ScriptCapitalN]", 
      RowBox[{"(", 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}], "-", 
        RowBox[{"n", " ", "\[ScriptL]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "s"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"s", "+", 
           RowBox[{"\[Alpha]", " ", "n"}]}], ")"}]}], "-", 
        RowBox[{"n", " ", "s", " ", "\[ScriptL]", " ", "\[Beta]"}]}], ")"}], 
      "2"]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7086693468567038`*^9, 3.7086694173712893`*^9}}],

Cell[CellGroupData[{

Cell["Visualise", "Subsubsection",
 CellChangeTimes->{{3.7086697335048447`*^9, 3.7086697345920057`*^9}}],

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     FractionBox[
      FractionBox[
       RowBox[{"\[Beta]", " ", "n", " ", "\[ScriptCapitalN]", 
        RowBox[{"(", 
         RowBox[{"s", "+", 
          RowBox[{"\[Alpha]", " ", "n"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"s", "+", 
          RowBox[{"\[Alpha]", " ", "n"}], "-", 
          RowBox[{"n", " ", "\[ScriptL]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"s", "+", 
             RowBox[{"\[Alpha]", " ", "n"}]}], ")"}]}], "-", 
          RowBox[{"n", " ", "s", " ", "\[ScriptL]", " ", "\[Beta]"}]}], ")"}],
         "2"]], 
      FractionBox[
       RowBox[{"\[Beta]", " ", "n", " ", "\[ScriptCapitalN]", 
        RowBox[{"(", 
         RowBox[{"s", "+", 
          RowBox[{"0", "\[Alpha]", " ", "n"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"s", "+", 
          RowBox[{"0", "\[Alpha]", " ", "n"}], "-", 
          RowBox[{"n", " ", "\[ScriptL]", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"0", "\[Rho]"}]}], ")"}], "\[Beta]"}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "+", "s"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"s", "+", 
             RowBox[{"0", "\[Alpha]", " ", "n"}]}], ")"}]}], "-", 
          RowBox[{"n", " ", "s", " ", "\[ScriptL]", " ", "\[Beta]"}]}], ")"}],
         "2"]]], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]", "\[Rule]", 
        FractionBox["1.", "39."]}], ",", 
       RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
       RowBox[{"n", "\[Rule]", "9900"}], ",", 
       RowBox[{"s", "\[Rule]", "1"}], ",", 
       RowBox[{"\[ScriptL]", "\[Rule]", 
        FractionBox["5.", "1440."]}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        SuperscriptBox["10", "log\[Alpha]"]}], ",", 
       RowBox[{"\[Rho]", "\[Rule]", 
        SuperscriptBox["10", "log\[Rho]"]}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"log\[Alpha]", ",", 
     RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"log\[Rho]", ",", 
     RowBox[{"-", "4"}], ",", "0"}], "}"}], ",", 
   RowBox[{"Contours", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.5", "i"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "20"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7086697420952253`*^9, 3.708669840017688*^9}, {
   3.708669876108239*^9, 3.708670016304015*^9}, {3.708670992654117*^9, 
   3.708671015436564*^9}, 3.7086710549556837`*^9, {3.7086710936257477`*^9, 
   3.708671144222994*^9}, {3.7086712520691633`*^9, 3.7086712535880823`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times to \[Sigma]-level of chimerism", \
"Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}, {
  3.6779157947628508`*^9, 3.6779157995863657`*^9}}],

Cell["\<\
If we want to know if our mutant reaches a given level of clonality/chimerism \
(\[Sigma]), we need to modify the boundary conditions.\
\>", "Text",
 CellChangeTimes->{{3.69557591333808*^9, 3.695575967335421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "''"}], "[", "z0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "1"}]}], 
        "}"}], ",", 
       RowBox[{"\[Phi]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
  3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
  3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
  3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
  3.6774799842536983`*^9}, {3.6774800356605387`*^9, 3.6774800392434473`*^9}, {
  3.677480074587178*^9, 3.677480076602214*^9}, {3.6774802739161453`*^9, 
  3.677480336530141*^9}, {3.677909832830461*^9, 3.677909863652874*^9}, {
  3.684146409670973*^9, 3.684146434701337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"t", "''"}], "[", "z0", "]"}], "\[Equal]", 
          RowBox[{
           FractionBox[
            RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
           FractionBox["1", 
            RowBox[{"z0", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"t", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}, {3.6779098801164293`*^9, 
   3.677909880700451*^9}, {3.677909960626295*^9, 3.677909965841529*^9}, 
   3.684146447405238*^9, {3.684146492323386*^9, 3.684146494403393*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Theta]", "''"}], "[", "z0", "]"}], "\[Equal]", 
            RowBox[{
             FractionBox[
              RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
             FractionBox[
              FractionBox["z0", 
               RowBox[{"\[Sigma]", " ", "\[Xi]"}]], 
              RowBox[{"z0", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
          RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
          RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
          RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
          RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}]}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z0", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z0", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox["z0", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
  3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
  3.677480721756995*^9}, {3.67791581711384*^9, 3.6779158178977127`*^9}, {
  3.677915853481181*^9, 3.6779158809995203`*^9}, {3.6779292242820187`*^9, 
  3.677929225657383*^9}, {3.684146516883525*^9, 3.684146606839511*^9}, {
  3.6900208683919277`*^9, 3.69002087263065*^9}, {3.695575983538888*^9, 
  3.695576000088818*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Advantageous clone", "Section",
 CellChangeTimes->{{3.677323077902556*^9, 3.677323082429555*^9}, {
  3.695576075431119*^9, 3.695576078581169*^9}}],

Cell[CellGroupData[{

Cell["Jacobian and eigensystem of neutral system", "Subsection",
 CellChangeTimes->{{3.668257551026848*^9, 3.668257552191036*^9}, {
  3.668313384779729*^9, 3.668313389091033*^9}, {3.668510030093388*^9, 
  3.6685100351252537`*^9}}],

Cell[TextData[{
 "Writing ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[Rule]"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["s", "1"], ",", 
       SubscriptBox["s", "2"], ",", 
       SubscriptBox["n", "1"], ",", 
       SubscriptBox["n", "2"]}], ")"}], "/", "N"}]}], TraditionalForm]]],
 ", the neutral ODEs for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", 
    RowBox[{
     OverscriptBox["x", "\[Rule]"], "/", "dt"}]}], TraditionalForm]]],
 " are given by:"
}], "Text",
 CellChangeTimes->{{3.6955736326165047`*^9, 3.6955736841102343`*^9}, {
  3.6955737872290983`*^9, 3.6955738201183767`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"odesNeutral", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], "x3"}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x1"}]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"d", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], "x4"}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         RowBox[{"a", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], " ", 
       "x2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
         RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x3"}], "+", 
      RowBox[{"a", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x1"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
         RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", "x4"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6682575831991*^9, 3.668257751936234*^9}, {
  3.677308948262648*^9, 3.677308994204137*^9}, {3.677309034596307*^9, 
  3.6773090467222757`*^9}, {3.695576121498086*^9, 3.695576122808425*^9}, {
  3.708675435133224*^9, 3.70867544394044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paramSub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "\[ScriptL]"], "-", 
         FractionBox[
          RowBox[{"n", " ", "\[Beta]"}], 
          RowBox[{"s", "+", 
           RowBox[{"\[Alpha]", " ", "n"}]}]]}], ")"}], 
       FractionBox["\[ScriptCapitalN]", 
        RowBox[{"\[ScriptCapitalN]", "-", "n"}]]}]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{
       FractionBox["s", 
        RowBox[{"n", " ", "\[ScriptL]"}]], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "n"}], 
       RowBox[{"s", "+", 
        RowBox[{"\[Alpha]", " ", "n"}]}]]}]}], "}"}]}], ";"}]], "Input"],

Cell["\<\
The slow manifold is given by xStar. We then compute the Jacobian of the ODEs \
about this point.\
\>", "Text",
 CellChangeTimes->{{3.695573839219204*^9, 3.695573899281167*^9}, {
  3.695573932972476*^9, 3.69557396597019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xStar", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], 
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], ",", 
       RowBox[{"x2", "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], "z"}]}], ",", 
       RowBox[{"x3", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
       RowBox[{"x4", "\[Rule]", "z"}]}], "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"\[Delta]", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}]}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], ")"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"odesNeutral", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "}"}]}], 
      "]"}], "/.", "xStar"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "J", "]"}]}], "Input",
 CellChangeTimes->{{3.695573903138708*^9, 3.6955739227886744`*^9}, 
   3.695573970004027*^9, {3.695574000684684*^9, 3.6955740125537252`*^9}, {
   3.695576142641704*^9, 3.695576143935557*^9}, {3.695578047600287*^9, 
   3.695578052638955*^9}, {3.695578126939178*^9, 3.695578132000951*^9}, {
   3.7086754527236443`*^9, 3.7086754810356283`*^9}}],

Cell[TextData[{
 "Now we compute the eigenvalues, and right & left eigenvectors of the \
neutral Jacobian,",
 Cell[BoxData[
  FormBox["J", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.695576180066536*^9, 3.695576197701112*^9}, {
  3.695578033431114*^9, 3.695578042141323*^9}}],

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668257903804352*^9, 3.668257936249565*^9}, {
  3.668258186073648*^9, 3.668258212881054*^9}, {3.668313280711825*^9, 
  3.6683132863668413`*^9}, {3.695578108771305*^9, 3.695578144016879*^9}}],

Cell[BoxData[
 RowBox[{"vLong", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "J", "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6682578845517*^9, 3.668257886467813*^9}, {
  3.668258005416245*^9, 3.66825803552743*^9}, {3.668313276512781*^9, 
  3.668313290470598*^9}, {3.6955783767347507`*^9, 3.6955783771560183`*^9}}],

Cell[BoxData[
 RowBox[{"uLong", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"Transpose", "[", "J", "]"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", ">", "0"}], ",", 
       RowBox[{"d", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}], ",", 
       RowBox[{"\[Beta]", ">", "0"}], ",", 
       RowBox[{"z", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668258062573778*^9, 3.668258066404913*^9}, {
   3.668313295630507*^9, 3.668313296054381*^9}, 3.668313396731451*^9, {
   3.695578379148731*^9, 3.6955783796522627`*^9}}],

Cell["\<\
For aesthetics, we make sure z does not appear in the denominator. We also \
normalise the left eigenvectors.\
\>", "Text",
 CellChangeTimes->{{3.695576326838492*^9, 3.695576366127243*^9}}],

Cell[BoxData[
 RowBox[{"vNorm", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"vLong", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"vLong", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "4"}], "]"}], "]"}]], ",", 
     FractionBox[
      RowBox[{"vLong", "[", 
       RowBox[{"[", "2", "]"}], "]"}], 
      RowBox[{"vLong", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "4"}], "]"}], "]"}]], ",", 
     RowBox[{"z", 
      FractionBox[
       RowBox[{"vLong", "[", 
        RowBox[{"[", "3", "]"}], "]"}], 
       RowBox[{"vLong", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "4"}], "]"}], "]"}]]}], ",", 
     RowBox[{"z", 
      FractionBox[
       RowBox[{"vLong", "[", 
        RowBox[{"[", "4", "]"}], "]"}], 
       RowBox[{"vLong", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "4"}], "]"}], "]"}]]}]}], "}"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.695576261568841*^9, 3.695576296622437*^9}, {
  3.69557817739298*^9, 3.6955781790404053`*^9}, {3.695578264440542*^9, 
  3.695578270526478*^9}, {3.695578388524782*^9, 3.6955783979506197`*^9}}],

Cell[BoxData[
 RowBox[{"uNorm", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"uLong", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{
       RowBox[{"uLong", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"vNorm", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668510555373578*^9, 3.668510577706005*^9}, {
  3.695578181272563*^9, 3.695578186839653*^9}, {3.695578402750791*^9, 
  3.695578405214717*^9}, {3.7086756417020273`*^9, 3.708675662376093*^9}}],

Cell["\<\
The eigenvectors can be compactified further by expressing them in terms of \
the eigenvalues.
Here we check that our shortened forms fit with the solutions above, and that \
they are orthonormal.\
\>", "Text",
 CellChangeTimes->{{3.695576757362596*^9, 3.6955768127917957`*^9}, {
  3.695578340382938*^9, 3.695578347116832*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"]}], ",", 
         FractionBox[
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], "\[Delta]"], ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"d", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], 
           RowBox[{
            RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}]]}], ",", 
         FractionBox[
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], 
          RowBox[{
           RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", "d", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}]], ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], 
           RowBox[{"\[Delta]", "+", 
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]], 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
         RowBox[{
          FractionBox["\[Beta]", 
           RowBox[{"d", " ", "\[Delta]"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            FractionBox[
             RowBox[{"a", " ", "\[Beta]"}], "\[Delta]"]}], ")"}], "z"}], ",", 
         
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}], ",", "z"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], 
           RowBox[{"\[Delta]", "+", 
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]], 
          RowBox[{"(", 
           RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ",", 
         RowBox[{
          FractionBox["\[Beta]", 
           RowBox[{"d", " ", "\[Delta]"}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", 
            FractionBox[
             RowBox[{"a", " ", "\[Beta]"}], "\[Delta]"]}], ")"}], "z"}], ",", 
         
         RowBox[{"(", 
          RowBox[{"\[Xi]", "-", "z"}], ")"}], ",", "z"}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"\[Delta]", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}]}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"u", "=", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "\[Beta]", " ", "\[Delta]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "\[Beta]"}], "-", 
            RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "d"}], " ", "z"}], ",", 
          RowBox[{"d", 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "-", " ", "z"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", "d"}], ")"}]}], "z"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Beta]", "+", "d"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         RowBox[{"a", " ", "d", " ", "\[Beta]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "\[Beta]"}], "-", 
            RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Delta]", " ", "z"}], ",", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "-", " ", "z"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"-", "\[Beta]"}], " ", "z"}], ",", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"\[Xi]", "-", "z"}], ")"}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        FractionBox["a", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "\[Beta]"}], "-", 
            RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", 
            FractionBox[
             RowBox[{"a", " ", "\[Beta]"}], 
             RowBox[{"2", "\[Delta]"}]], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Beta]", "+", "d"}], ")"}], "\[Delta]"}], 
             RowBox[{"2", "\[Beta]"}]]}], ")"}]}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", " ", "\[Delta]"}], ",", 
          RowBox[{"d", " ", "\[Delta]"}], ",", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "+", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
            ")"}]}], ",", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "+", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
            ")"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox["a", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "\[Beta]"}], "-", 
            RowBox[{"d", " ", "\[Delta]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Lambda]", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", 
            FractionBox[
             RowBox[{"a", " ", "\[Beta]"}], 
             RowBox[{"2", "\[Delta]"}]], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Beta]", "+", "d"}], ")"}], "\[Delta]"}], 
             RowBox[{"2", "\[Beta]"}]]}], ")"}]}]], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"d", " ", "\[Delta]"}], ",", 
          RowBox[{"d", " ", "\[Delta]"}], ",", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
            ")"}]}], ",", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Lambda]", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{
              FractionBox[
               RowBox[{"\[Beta]", "+", "d"}], "\[Beta]"], "\[Delta]"}]}], 
            ")"}]}]}], "}"}]}]}], "\[IndentingNewLine]", "}"}], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"\[Delta]", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}]}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.695578216015052*^9, 3.695578219544037*^9}, {
  3.6955782788664083`*^9, 3.695578289447497*^9}, {3.6955784132006493`*^9, 
  3.69557841650179*^9}, {3.6955785101605577`*^9, 3.6955785562222424`*^9}, {
  3.7086757226033287`*^9, 3.7086757301963053`*^9}, {3.708675897236945*^9, 
  3.708675977579815*^9}, {3.708676370453308*^9, 3.708676374453003*^9}, {
  3.7087637895591497`*^9, 3.7087637934454613`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"vNorm", "-", "v"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"uNorm", "-", "u"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.668777106989574*^9, 3.66877712233244*^9}, {
  3.695576736979989*^9, 3.69557675121027*^9}, {3.6955782982392406`*^9, 
  3.695578306189044*^9}, {3.695578426035819*^9, 3.6955784314776297`*^9}, {
  3.7087638147034273`*^9, 3.70876381683635*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{"v", "[", 
       RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.695578367924515*^9, 3.695578370484455*^9}, {
  3.695578437789566*^9, 3.695578440083303*^9}, {3.708763822933114*^9, 
  3.708763824508091*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", "uNorm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "vNorm"}], ";"}]}], "Input",
 CellChangeTimes->{{3.708676624608357*^9, 3.708676630378564*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Drift vector", "Subsection",
 CellChangeTimes->{{3.668663746520438*^9, 3.668663748407606*^9}}],

Cell["\<\
We find that the new drift vector along the slow-subspace satisfies \
\[Epsilon] u1.h, where h is the extra drift on the slow-manifold xStar due to \
the selective effect of \[Epsilon].\
\>", "Text",
 CellChangeTimes->{{3.6955768593447742`*^9, 3.6955769348218327`*^9}, {
  3.6955797589402227`*^9, 3.695579759546625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "\[Gamma]d"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]", " ", 
            "\[Gamma]\[Beta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]", " ", "\[Gamma]\[Rho]"}]}], ")"}],
          "x4"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Gamma]\[Delta]"}], "+", 
           RowBox[{"a", " ", "\[Gamma]a", 
            RowBox[{"(", 
             RowBox[{"1", "-", "x3", "-", "x4"}], ")"}]}]}], ")"}], "x2"}]}], 
       ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", " ", "\[Beta]", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]\[Rho]", "+", "\[Gamma]\[Beta]"}], ")"}]}], "-", 
           RowBox[{"d", " ", "\[Gamma]d"}], " ", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]", " ", "\[Gamma]\[Delta]"}]}], 
          ")"}], "x4"}], " ", "+", " ", 
        RowBox[{"a", " ", "\[Gamma]a", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x3", "-", "x4"}], ")"}], "x2"}]}]}], "}"}], "/.",
      "xStar"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69557857999722*^9, 3.69557877382694*^9}, {
  3.708678722756461*^9, 3.708678795992886*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ".", "h"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6955787868930264`*^9, 3.695578807730257*^9}, {
  3.6955797815975924`*^9, 3.6955797830754557`*^9}}],

Cell[TextData[{
 "Again this can be written in a more compact form (as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalA]", " ", 
    RowBox[{"z", "(", 
     RowBox[{"\[Xi]", "-", "z"}], ")"}]}], TraditionalForm]]],
 ")."
}], "Text",
 CellChangeTimes->{{3.695577021346534*^9, 3.6955770544799013`*^9}, {
  3.6955772180308437`*^9, 3.695577231548636*^9}, {3.69557893187311*^9, 
  3.6955789346620913`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Check", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ".", "h"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", 
       FractionBox[
        RowBox[{"\[Delta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]a", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "-", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"d", "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
              RowBox[{"\[Beta]", " ", "\[Rho]"}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]d", " ", "d", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "-", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]\[Beta]", " ", "\[Beta]", 
            RowBox[{"(", 
             RowBox[{"d", "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]", 
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]\[Delta]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", " ", "\[Beta]"}], "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "-", 
                 RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "-", 
              RowBox[{"\[Beta]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"\[Gamma]\[Rho]", " ", "\[Rho]", " ", "\[Beta]", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "-", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"\[Xi]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
           RowBox[{"\[Beta]", " ", "d"}], "+", 
           RowBox[{"d", " ", "\[Delta]"}], "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "-", 
              RowBox[{"(", 
               RowBox[{"d", "+", 
                RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], 
           "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]], 
       "z", 
       RowBox[{"(", 
        RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ")"}]}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"\[Delta]", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}]}], 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.708680905761292*^9, 3.708680931831439*^9}, 
   3.708680989669476*^9, {3.708681858713623*^9, 3.7086819024465733`*^9}, {
   3.708681966942327*^9, 3.70868196920496*^9}, {3.708756567394302*^9, 
   3.7087565677215433`*^9}, {3.708756620519712*^9, 3.70875662199262*^9}, {
   3.7087640176224127`*^9, 3.708764020933551*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Delta]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]a", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
            RowBox[{"\[Beta]", " ", "\[Rho]"}]}], ")"}]}], "-", 
         RowBox[{"\[Gamma]d", " ", "d", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "+", 
         RowBox[{"\[Gamma]\[Beta]", " ", "\[Beta]", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"\[Alpha]", " ", "\[Delta]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"\[Gamma]\[Delta]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", " ", "\[Beta]"}], "+", 
            RowBox[{"\[Alpha]", " ", "\[Delta]", 
             RowBox[{"(", 
              RowBox[{"\[Beta]", "-", 
               RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "-", 
            RowBox[{"\[Beta]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", 
               RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"\[Gamma]\[Rho]", " ", "\[Rho]", " ", "\[Beta]", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"\[Xi]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
         RowBox[{"\[Beta]", " ", "d"}], "+", 
         RowBox[{"d", " ", "\[Delta]"}], "+", 
         RowBox[{"\[Alpha]", " ", "\[Delta]", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"(", 
             RowBox[{"d", "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], "-", 
         
         RowBox[{"\[Rho]", " ", "\[Beta]", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]], "/.", 
     RowBox[{"\[Xi]", "\[Rule]", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"\[Delta]", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}]}], 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708757840634263*^9, 3.708757869211707*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Slow subspace (for \[Alpha]=\[Rho]=0)", "Subsection",
 CellChangeTimes->{{3.6685106794869328`*^9, 3.668510691621687*^9}, 
   3.695577381366755*^9, {3.708767592489502*^9, 3.70876759986445*^9}}],

Cell[TextData[{
 "Our slow-subspace satisfies the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "~"], "=", 
    RowBox[{
     SuperscriptBox["x", "*"], "+", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"f", "(", "z", ")"}]}]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", "z", ")"}], TraditionalForm]]],
 " is given by:"
}], "Text",
 CellChangeTimes->{{3.6955789929984407`*^9, 3.695579054553976*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], 
          RowBox[{"\[Lambda]", "[", 
           RowBox[{"[", "k", "]"}], "]"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ".", "h"}], ")"}], 
         RowBox[{"v", "[", 
          RowBox[{"[", "k", "]"}], "]"}]}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"xTilde", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], "/.", 
        "xStar"}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}], ")"}], "+", 
    RowBox[{"\[Epsilon]", " ", "f"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.668777889930395*^9, {3.6687779325037813`*^9, 3.668777938398926*^9}, {
   3.668778011101204*^9, 3.668778061634667*^9}, {3.6955790571381807`*^9, 
   3.695579062234375*^9}, {3.695579113838834*^9, 3.695579140897011*^9}, {
   3.69557918815242*^9, 3.6955791977656403`*^9}, {3.695579306658332*^9, 
   3.6955793099613457`*^9}, 3.695579397791819*^9, {3.695579718438501*^9, 
   3.695579718866437*^9}, {3.6956311541530867`*^9, 3.695631174553863*^9}, {
   3.708767065859632*^9, 3.708767110689659*^9}}],

Cell[CellGroupData[{

Cell["Visualise slow subspace", "Subsubsection",
 CellChangeTimes->{{3.695628924841165*^9, 3.695628929200087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ODE", " ", "solver"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"solveODEs", "[", 
    RowBox[{"params_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paramSub", ",", "initialCondition", ",", "eqs", ",", "dSol"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paramSub", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           FractionBox["sStar", 
            RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"initialCondition", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "sStar"}], ",", 
         RowBox[{
          RowBox[{"s2", "[", "0", "]"}], "\[Equal]", "\[ScriptCapitalS]"}], 
         ",", 
         RowBox[{
          RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "nStar"}], ",", 
         RowBox[{
          RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"eqs", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d1", "+", "\[Beta]1"}], ")"}], 
               RowBox[{"n1", "[", "t", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Delta]1", "+", 
                 RowBox[{"a1", 
                  FractionBox[
                   RowBox[{"\[ScriptCapitalN]", "-", 
                    RowBox[{"n1", "[", "t", "]"}], "-", 
                    RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}],
                 ")"}], 
               RowBox[{"s1", "[", "t", "]"}]}]}]}], " ", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"s2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d2", "+", "\[Beta]2"}], ")"}], 
               RowBox[{"n2", "[", "t", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Delta]2", "+", 
                 RowBox[{"a2", 
                  FractionBox[
                   RowBox[{"\[ScriptCapitalN]", "-", 
                    RowBox[{"n1", "[", "t", "]"}], "-", 
                    RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}],
                 ")"}], 
               RowBox[{"s2", "[", "t", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "d1"}], " ", 
               RowBox[{"n1", "[", "t", "]"}]}], "+", 
              RowBox[{"a1", 
               FractionBox[
                RowBox[{"\[ScriptCapitalN]", "-", 
                 RowBox[{"n1", "[", "t", "]"}], "-", 
                 RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
               RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "d2"}], " ", 
               RowBox[{"n2", "[", "t", "]"}]}], "+", 
              RowBox[{"a2", 
               FractionBox[
                RowBox[{"\[ScriptCapitalN]", "-", 
                 RowBox[{"n1", "[", "t", "]"}], "-", 
                 RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
               RowBox[{"s2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
           "}"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a1", "\[Rule]", "a"}], ",", 
            RowBox[{"d1", "\[Rule]", "d"}], ",", 
            RowBox[{"\[Beta]1", "\[Rule]", "\[Beta]"}], ",", 
            RowBox[{"\[Delta]1", "\[Rule]", "\[Delta]"}], ",", 
            RowBox[{"a2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]a", " ", "\[Epsilon]"}]}], ")"}], "a"}]}], 
            ",", 
            RowBox[{"d2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]d", " ", "\[Epsilon]"}]}], ")"}], "d"}]}], 
            ",", 
            RowBox[{"\[Beta]2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]\[Beta]", " ", "\[Epsilon]"}]}], ")"}], 
              "\[Beta]"}]}], ",", 
            RowBox[{"\[Delta]2", "\[Rule]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"\[Gamma]\[Delta]", " ", "\[Epsilon]"}]}], ")"}], 
              "\[Delta]"}]}]}], "}"}]}], ")"}], "/.", "paramSub"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dSol", "=", 
       RowBox[{
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eqs", "/.", "params"}], ",", 
             RowBox[{"initialCondition", "/.", "params"}]}], "}"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s1", "[", "t", "]"}], ",", 
            RowBox[{"s2", "[", "t", "]"}], ",", 
            RowBox[{"n1", "[", "t", "]"}], ",", 
            RowBox[{"n2", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "dSol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.695629538258133*^9, 3.695629576123612*^9}, {
  3.695629607433374*^9, 3.69562967987818*^9}, {3.695629806801642*^9, 
  3.6956301246791553`*^9}, {3.6956303461026363`*^9, 3.6956303523023252`*^9}, {
  3.695630390125766*^9, 3.6956303984850597`*^9}, {3.6956304376428556`*^9, 
  3.695630467994227*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plotting", " ", "function"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"pPlot", "[", 
    RowBox[{"i_", ",", "odeSols_", ",", "paramsTab_", ",", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "paramSub", ",", "xTilde", ",", "odeSols\[Section]i", ",", 
       "paramsTab\[Section]i", ",", "n\[Epsilon]", ",", "myCol", ",", 
       "plot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paramSub", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           FractionBox["sStar", 
            RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xTilde", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "z", "-", 
              FractionBox[
               RowBox[{"d", " ", "\[Delta]"}], 
               RowBox[{"a", " ", "\[Beta]"}]], "-", 
              FractionBox[
               RowBox[{"d", " ", "z", " ", "\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Beta]"}], 
                  "+", 
                  RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "d", " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d", "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"a", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "3"]}]}], ")"}], " ", 
                "\[Epsilon]"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", " ", "\[Beta]"}], "-", 
                   RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
                 "2"]}]]}], ")"}]}], "\[Delta]"], ",", 
          FractionBox[
           RowBox[{"z", " ", "\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "d", " ", "\[Beta]", " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "z", " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "z"}], ")"}], " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}]}], "+", 
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["a", "2"], " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", "z", " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                    RowBox[{"d", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Gamma]a"}],
                     "+", "\[Gamma]d", "-", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]d", "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Gamma]a"}],
                     "+", "\[Gamma]d", "-", 
                    RowBox[{"z", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]d", "-", "\[Gamma]\[Beta]", "+", 
                    "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "-", 
                  RowBox[{
                   SuperscriptBox["d", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "3"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", " ", "\[Beta]"}], "-", 
                   RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
                 "2"]}]]}], ")"}]}], "\[Delta]"], ",", 
          RowBox[{"1", "-", "z", "-", 
           FractionBox[
            RowBox[{"d", " ", "\[Delta]"}], 
            RowBox[{"a", " ", "\[Beta]"}]], "+", 
           FractionBox[
            RowBox[{"d", " ", "z", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", "\[Beta]"}], 
               "+", 
               RowBox[{"d", " ", "\[Delta]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Delta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["d", "2"], " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "-", "\[Gamma]\[Beta]", 
                    "+", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                  RowBox[{"d", " ", "\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "-", "\[Gamma]\[Beta]", 
                    "+", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], " ", "\[Gamma]a"}], "+", 
                    RowBox[{"3", " ", "\[Gamma]d"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}]}], 
                    ")"}], " ", "\[Delta]"}], "-", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                   SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
               RowBox[{"a", " ", 
                SuperscriptBox["\[Beta]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Beta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                  RowBox[{"d", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                 ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"a", " ", "\[Beta]"}], "-", 
                RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
              "2"]}]]}], ",", 
          FractionBox[
           RowBox[{"z", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
               "2"], "+", 
              RowBox[{"d", " ", "\[Beta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Beta]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "\[Gamma]\[Beta]"}], "+", 
                    "\[Gamma]\[Delta]"}], ")"}], " ", "\[Delta]"}], "+", 
                 RowBox[{"d", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
               " ", "\[Epsilon]"}], "+", 
              FractionBox[
               RowBox[{"a", " ", "d", " ", "z", " ", "\[Beta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    SuperscriptBox["\[Beta]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}], "+", 
                    RowBox[{"d", " ", "\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"3", " ", "\[Gamma]d"}], "+", 
                    RowBox[{"2", " ", "\[Gamma]\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]\[Delta]"}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Gamma]a"}], "-", 
                    RowBox[{"2", " ", "\[Gamma]d"}], "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}]}]}], ")"}], " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"d", "+", "\[Beta]"}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Gamma]a", "-", "\[Gamma]d", "+", "\[Gamma]\[Beta]", 
                    "-", "\[Gamma]\[Delta]"}], ")"}], " ", 
                    SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], "+", 
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[Beta]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]"}], 
                    ")"}], " ", "\[Delta]"}], "-", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Gamma]a", "-", "\[Gamma]d"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", "\[Epsilon]"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", "\[Beta]"}], "-", 
                  RowBox[{"d", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
              RowBox[{"d", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}], 
            "2"]]}], "}"}], "/.", "paramSub"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"odeSols\[Section]i", "=", 
       RowBox[{"odeSols", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"paramsTab\[Section]i", "=", 
       RowBox[{"paramsTab", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n\[Epsilon]", "=", 
       RowBox[{"Length", "[", "paramsTab\[Section]i", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"myCol", "=", 
       RowBox[{"col", "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"plot", "=", 
       RowBox[{
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", "t", "]"}], ",", 
                  RowBox[{"s2", "[", "t", "]"}]}], "}"}], "/.", 
                RowBox[{"odeSols\[Section]i", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
            RowBox[{"MaxRecursion", "\[Rule]", "15"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"myCol", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}],
             ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], " ", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ParametricPlot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[ScriptCapitalN]", " ", 
                    RowBox[{"(", 
                    RowBox[{"xTilde", "/.", 
                    RowBox[{"z", "\[Rule]", 
                    RowBox[{
                    FractionBox["nStar", "\[ScriptCapitalN]"], " ", "x"}]}]}],
                     ")"}]}], ")"}], "/.", 
                  RowBox[{"paramsTab\[Section]i", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "[", 
                RowBox[{"[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"myCol", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                  RowBox[{"{", 
                   RowBox[{"0.02", ",", "0.02"}], "}"}], "]"}], ",", 
                 RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], 
              "]"}]}]}], " ", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
             RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
             RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.1", ",", "0.3"}], "}"}], "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "0.7"}], "}"}], "]"}]}], "}"}], "]"}]}],
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[CurlyEpsilon]\>\"", ",", "labelSize", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
               RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}], ",", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{"0.54", ",", "0.74"}], "}"}], "]"}]}], "]"}], "]"}], 
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Max", "[", "\[Epsilon]Vals", "]"}]}], ")"}], 
                "\[Times]", " ", 
                RowBox[{"sStarVals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"Max", "[", "\[Epsilon]Vals", "]"}]}], ")"}], 
                "\[Times]", 
                RowBox[{"sStarVals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(s\), \(2\)]\)\>\"", ",", 
                 "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               "None"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(s\), \(1\)]\)\>\"", ",", 
                 "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)=\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"sStarVals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", "labelSize",
                  ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], 
              "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"ticksSize", ",", 
             RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"56", ",", "15"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "30"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
        "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvcDJY86tjteOHxZPWgiiD009/wJEn1i29Q2Ibgje
GXIbSIuv9kkE0WFJ7cUg2rJgK5huZIttAtE1mnV9IFqy/8VMEB2SGDoLRKvb
e68A0cfe164C0QJNSetA9IkO680g+uS1ju0g+iVD1iEQnfXS5AyIfuYe/RnM
/87OcAdIZ84+AqZZgh+xgOhZ95+B6SN/m3hAtMXBEEkQzd7JqACiL/HzgenY
mcvUQHTH9S96INqD758JiDaYLeAAomUasva/XAj0f/lXMC3MkH0ERMsp3T0K
orf5Pz8FoquVH5wG0QCeUa5Q
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Determine", " ", "parameters", " ", "and", " ", "evaluate", " ", 
    "trajectories", " ", "from", " ", "ODEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sStarVals", "=", 
     RowBox[{"{", 
      RowBox[{"10", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nS", "=", 
     RowBox[{"Length", "[", "sStarVals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.5", ",", "1.5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"paramsFunc", "[", 
      RowBox[{"\[Section]sStar_", ",", "\[Section]\[Epsilon]_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
       RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
       RowBox[{"nStar", "\[Rule]", "9900"}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"1.", "/", "39"}]}], ",", 
       RowBox[{"\[ScriptCapitalS]", "\[Rule]", "5000"}], ",", 
       RowBox[{"\[ScriptL]", "\[Rule]", 
        FractionBox["3", "1440."]}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "\[Section]\[Epsilon]"}], ",", 
       RowBox[{"\[Gamma]\[Beta]", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Gamma]\[Delta]", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Gamma]d", "\[Rule]", "0"}], ",", 
       RowBox[{"\[Gamma]a", "\[Rule]", "0"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"paramsTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramsFunc", "[", 
          RowBox[{
           RowBox[{"sStarVals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", "3000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odeSols", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"solveODEs", "[", 
          RowBox[{
           RowBox[{"paramsTab", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "T"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.677328790399165*^9, 3.6773289187142363`*^9}, {
   3.677329506822762*^9, 3.677329574499803*^9}, {3.677329635978705*^9, 
   3.677329636057755*^9}, {3.6773305896894817`*^9, 3.677330590209255*^9}, {
   3.6773852502724733`*^9, 3.677385267487152*^9}, 3.6773853076062117`*^9, {
   3.6773853748995943`*^9, 3.6773853757313757`*^9}, {3.6773855077028427`*^9, 
   3.677385508054625*^9}, {3.695629369729677*^9, 3.695629377544651*^9}, {
   3.695629416551139*^9, 3.695629455493663*^9}, {3.695630485801869*^9, 
   3.6956305306078377`*^9}, {3.695630632172306*^9, 3.695630634019733*^9}, {
   3.695630978999683*^9, 3.695631001735991*^9}, {3.695631272765643*^9, 
   3.6956313155474977`*^9}, {3.695631578242546*^9, 3.695631578362268*^9}, {
   3.6956322992889423`*^9, 3.6956323203120413`*^9}, {3.695632669363978*^9, 
   3.695632683412003*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Row", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pPlot", "[", 
      RowBox[{"i", ",", "odeSols", ",", "paramsTab", ",", "T"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.677386172076716*^9, 3.677386186149084*^9}, {
   3.6773862583949013`*^9, 3.677386259514772*^9}, {3.6773863749746933`*^9, 
   3.6773863770545893`*^9}, {3.695631457358231*^9, 3.69563151047719*^9}, {
   3.695632449083468*^9, 3.695632454549788*^9}, {3.6956324903220997`*^9, 
   3.695632492466007*^9}, 3.6956326629409943`*^9, {3.708767807449526*^9, 
   3.708767817384988*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Diffusion matrix", "Subsection",
 CellChangeTimes->{{3.668411114600995*^9, 3.668411118287931*^9}}],

Cell["\<\
We assume the diffusion coefficient is unchanged by selection, such that it \
is as described in the neutral case, i.e.\
\>", "Text",
 CellChangeTimes->{{3.6955753909918833`*^9, 3.695575429122048*^9}, {
  3.695579845733582*^9, 3.695579892817384*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BTilde", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", 
      FractionBox[
       RowBox[{"\[Beta]", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
        SuperscriptBox["\[Delta]", "2"], 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Xi]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
           RowBox[{"\[Beta]", " ", "d"}], "+", 
           RowBox[{"d", " ", "\[Delta]"}], "+", 
           RowBox[{"\[Alpha]", " ", "\[Delta]", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "-", 
              RowBox[{"(", 
               RowBox[{"d", "+", 
                RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], 
           "-", 
           RowBox[{"\[Rho]", " ", "\[Beta]", 
            RowBox[{"(", 
             RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
         "2"]}]], "z", 
      RowBox[{"(", 
       RowBox[{"\[Xi]", "-", "z"}], ")"}]}], ")"}], "/.", 
    RowBox[{"\[Xi]", "\[Rule]", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
          RowBox[{"\[Rho]", " ", "\[Beta]"}]}], ")"}], " ", "\[Delta]"}], 
       RowBox[{"a", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]]}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.668411453842161*^9, 3.668411548601388*^9}, {
  3.677309765016757*^9, 3.6773097806529016`*^9}, {3.708768587872257*^9, 
  3.7087686163737497`*^9}}],

Cell[TextData[{
 "The fixation dynamics is dependent on the folloing parameter combination ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{"\[Epsilon]", " ", "\[ScriptCapitalN]", " ", 
     RowBox[{"\[ScriptCapitalA]", "/", "\[ScriptCapitalB]"}]}]}], 
   TraditionalForm]]],
 " (const.)."
}], "Text",
 CellChangeTimes->{{3.7087758918242407`*^9, 3.708775907571931*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalA]", "=", 
   FractionBox[
    RowBox[{"\[Delta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]a", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}], "-", 
          RowBox[{"\[Beta]", " ", "\[Rho]"}]}], ")"}]}], "-", 
       RowBox[{"\[Gamma]d", " ", "d", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]\[Beta]", " ", "\[Beta]", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"\[Gamma]\[Delta]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", "\[Beta]"}], "+", 
          RowBox[{"\[Alpha]", " ", "\[Delta]", 
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], "-", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Rho]", " ", "\[Beta]"}], "-", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"\[Gamma]\[Rho]", " ", "\[Rho]", " ", "\[Beta]", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"\[Xi]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
       RowBox[{"\[Beta]", " ", "d"}], "+", 
       RowBox[{"d", " ", "\[Delta]"}], "+", 
       RowBox[{"\[Alpha]", " ", "\[Delta]", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], "-", 
       RowBox[{"\[Rho]", " ", "\[Beta]", 
        RowBox[{"(", 
         RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
          RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalB]", "=", 
   FractionBox[
    RowBox[{"\[Beta]", 
     RowBox[{"(", 
      RowBox[{"d", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Beta]"}]}], ")"}], 
     SuperscriptBox["\[Delta]", "2"], 
     RowBox[{"(", 
      RowBox[{"d", "+", 
       RowBox[{"\[Alpha]", " ", "\[Delta]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Rho]"}], ")"}]}]}], ")"}]}], 
    RowBox[{"\[Xi]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "\[Delta]"}], "+", 
        RowBox[{"\[Beta]", " ", "d"}], "+", 
        RowBox[{"d", " ", "\[Delta]"}], "+", 
        RowBox[{"\[Alpha]", " ", "\[Delta]", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "-", 
           RowBox[{"(", 
            RowBox[{"d", "+", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}], ")"}]}], "-", 
        RowBox[{"\[Rho]", " ", "\[Beta]", 
         RowBox[{"(", 
          RowBox[{"\[Beta]", "+", "\[Delta]", "-", 
           RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}]}]}], ")"}], 
      "2"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708775942250391*^9, 3.708775944635261*^9}, {
  3.708776007313987*^9, 3.7087760178244267`*^9}}],

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"\[Epsilon]", " ", "\[ScriptCapitalN]", " ", "\[ScriptCapitalA]"}],
    "\[ScriptCapitalB]"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"%", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.708775967404716*^9, 3.708776084446083*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[ScriptCapitalB]", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7087761799741697`*^9, 3.708776189107669*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times", "Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}}],

Cell[TextData[{
 "We start the process on the slow manifold at the position z0. We want to \
know what is the probability our mutant reaches fixation (z=\[Xi]), and how \
long this takes.\nWe write ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalLambda]", "=", 
    RowBox[{"\[Epsilon]", " ", "\[ScriptCapitalN]", " ", 
     RowBox[{"\[ScriptCapitalA]", "/", "\[ScriptCapitalB]"}]}]}], 
   TraditionalForm]]],
 " (const.)."
}], "Text",
 CellChangeTimes->{{3.695575671665298*^9, 3.6955757204814034`*^9}, {
  3.695575955351097*^9, 3.695575957543264*^9}, {3.695579953476364*^9, 
  3.695580018252986*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"\[Phi]", "'"}], "[", "z0", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "z0", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "\[Xi]", "]"}], "\[Equal]", "1"}]}], "}"}], 
       ",", 
       RowBox[{"\[Phi]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
   3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
   3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
   3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
   3.6774799842536983`*^9}, {3.6774800356605387`*^9, 
   3.6774800392434473`*^9}, {3.677480074587178*^9, 3.677480076602214*^9}, {
   3.6774802739161453`*^9, 3.677480336530141*^9}, 3.695580023273849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"t", "'"}], "[", "z0", "]"}]}], "+", " ", 
           RowBox[{
            RowBox[{"t", "''"}], "[", "z0", "]"}]}], "\[Equal]", 
          RowBox[{
           FractionBox[
            RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
           FractionBox["1", 
            RowBox[{"z0", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
       RowBox[{"t", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "z0", "]"}]}], "+", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "z0", "]"}]}], "\[Equal]", 
            RowBox[{
             FractionBox[
              RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
             FractionBox[
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}]}]], 
              RowBox[{"z0", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "\[Xi]", "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
          RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
          RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
          RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
          RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z0", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z0", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}]}]]}], 
       ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
   3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
   3.677480721756995*^9}, 3.695580089790978*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixation probability and times to \[Sigma]-level of chimerism", \
"Subsection",
 CellChangeTimes->{{3.6684142956703157`*^9, 3.668414301373425*^9}, {
  3.6779157947628508`*^9, 3.6779157995863657`*^9}}],

Cell["\<\
If we want to know if our mutant reaches a given level of clonality/chimerism \
(\[Sigma]), we need to modify the boundary conditions.\
\>", "Text",
 CellChangeTimes->{{3.695580110885211*^9, 3.695580117009012*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fixation", " ", "Probability"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"\[Phi]", "'"}], "[", "z0", "]"}]}], "+", 
           RowBox[{
            RowBox[{"\[Phi]", "''"}], "[", "z0", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "1"}]}], 
        "}"}], ",", 
       RowBox[{"\[Phi]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}], ",", 
        RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422528125231*^9, 3.66842258248514*^9}, {
  3.668667378420467*^9, 3.668667380404291*^9}, {3.677406709476321*^9, 
  3.6774067219832897`*^9}, {3.677406764514456*^9, 3.677406783248962*^9}, {
  3.6774068183275948`*^9, 3.677406827751631*^9}, {3.6774799488636217`*^9, 
  3.6774799842536983`*^9}, {3.6774800356605387`*^9, 3.6774800392434473`*^9}, {
  3.677480074587178*^9, 3.677480076602214*^9}, {3.6774802739161453`*^9, 
  3.677480336530141*^9}, {3.677909832830461*^9, 3.677909863652874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "unconditional", " ", "fixation", " ", "time"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"DSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalLambda]", " ", 
            RowBox[{
             RowBox[{"t", "'"}], "[", "z0", "]"}]}], "+", " ", 
           RowBox[{
            RowBox[{"t", "''"}], "[", "z0", "]"}]}], "\[Equal]", 
          RowBox[{
           FractionBox[
            RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
           FractionBox["1", 
            RowBox[{"z0", 
             RowBox[{"(", 
              RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
         RowBox[{
          RowBox[{"t", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
        "}"}], ",", 
       RowBox[{"t", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}], ",", 
        RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668422592573616*^9, 3.668422633149439*^9}, {
   3.668422721553232*^9, 3.66842277322266*^9}, {3.677310564652866*^9, 
   3.677310575463461*^9}, 3.67740691974185*^9, {3.677407222418562*^9, 
   3.677407223758267*^9}, {3.67740810744318*^9, 3.677408117362837*^9}, {
   3.677480131993122*^9, 3.677480186512088*^9}, {3.677480228061646*^9, 
   3.6774802445485077`*^9}, {3.677480373431834*^9, 3.6774803842953978`*^9}, {
   3.6774806819737186`*^9, 3.6774806828287992`*^9}, {3.6779098801164293`*^9, 
   3.677909880700451*^9}, {3.677909960626295*^9, 3.677909965841529*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mean", " ", "conditional", " ", "fixation", " ", "time"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"DSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalLambda]", " ", 
              RowBox[{
               RowBox[{"\[Theta]", "'"}], "[", "z0", "]"}]}], "+", " ", 
             RowBox[{
              RowBox[{"\[Theta]", "''"}], "[", "z0", "]"}]}], "\[Equal]", 
            RowBox[{
             FractionBox[
              RowBox[{"-", "\[ScriptCapitalN]"}], "\[ScriptCapitalB]"], 
             FractionBox[
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                  "\[Xi]"}], "]"}]}]], 
              RowBox[{"z0", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]]}]}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"\[Sigma]", " ", "\[Xi]"}], "]"}], "\[Equal]", "0"}]}], 
          "}"}], ",", 
         RowBox[{"\[Theta]", "[", "z0", "]"}], ",", "z0"}], "]"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
          RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
          RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
          RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
          RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}], ",", 
          RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
      "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["t", "\[Xi]"], "[", "z0", "]"}], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]", "[", "z0", "]"}], "/.", "%"}], ")"}], "/", 
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
            "\[Xi]"}], "]"}]}]]}], ")"}]}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "z0", "\[LessEqual]", "\[Xi]"}], ",", 
        RowBox[{"0", "<", "\[Xi]", "<", "1"}], ",", 
        RowBox[{"\[ScriptCapitalN]", ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalB]", ">", "0"}], ",", 
        RowBox[{"0", "<", "\[Sigma]", "\[LessEqual]", "1"}], ",", 
        RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6774804062952137`*^9, 3.677480412966385*^9}, {
   3.677480579456427*^9, 3.677480592680192*^9}, {3.677480623998776*^9, 
   3.677480721756995*^9}, {3.67791581711384*^9, 3.6779158178977127`*^9}, {
   3.677915853481181*^9, 3.6779158809995203`*^9}, {3.6779292242820187`*^9, 
   3.677929225657383*^9}, 3.6955801371961184`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Clonal dominance in mice", "Chapter",
 CellChangeTimes->{{3.6955802354307213`*^9, 3.695580252508171*^9}, {
  3.695588653717609*^9, 3.695588653949535*^9}, {3.695707689871997*^9, 
  3.695707690279904*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.6955803295626802`*^9, 3.695580331136545*^9}}],

Cell[CellGroupData[{

Cell["Data analysis", "Subsection",
 CellChangeTimes->{{3.695580338586547*^9, 3.6955803400482903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPars", "[", "dir_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "i", ",", "data", ",", "parsBase", ",", 
      "parsPars", ",", "parsSel", ",", "pars"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.dat\>\"", ",", "dir"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"parsBase", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"sStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"nStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[ScriptL]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[ScriptCapitalS]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "5"}], "]"}], "]"}]}]}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"\[Alpha]", "\[Rule]", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "6"}], "]"}], "]"}]}]}], "*)"}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"parsPars", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Delta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"a", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"d", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"parsSel", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]\[Beta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]\[Delta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]a", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]d", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "5"}], "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"parsBase", ",", "parsPars", ",", "parsSel"}], "}"}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pars", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695583714787603*^9, 3.695583723715773*^9}, {
  3.695583954441474*^9, 3.6955840232506523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getClonalData", "[", 
   RowBox[{"dir_", ",", "totalRuns_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "data", ",", "nSample", ",", "index", ",", 
      "i", ",", "timeDist", ",", "fixProb"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.dat\>\"", ",", "dir"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeDist", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fixProb", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"data", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nSample", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"index", " ", "=", 
         RowBox[{"Unitize", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "data", "]"}], "[", 
           RowBox[{"[", "nSample", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fixProb", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"N", "[", 
          FractionBox[
           RowBox[{"Total", "[", "index", "]"}], 
           RowBox[{"totalRuns", "[", 
            RowBox[{"[", "i", "]"}], "]"}]], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"index", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"index", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"timeDist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", "index", "]"}], "]"}], " ", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"fixProb", ",", "timeDist"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.690446299808317*^9, 3.69044630231957*^9}, {
  3.6904463735732203`*^9, 3.690446521896121*^9}, {3.6904483112494497`*^9, 
  3.690448323265708*^9}, {3.6955835118111897`*^9, 3.6955835566474743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractClonalStats", "[", 
   RowBox[{"dir_", ",", "totalRuns_", ",", "clonalLevels_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fixProb", ",", "timeDist", ",", "nFiles", ",", "i", ",", "means", ",", 
      "stds", ",", "nSample"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fixProb", ",", "timeDist"}], "}"}], "=", 
      RowBox[{"getClonalData", "[", 
       RowBox[{"dir", ",", "totalRuns"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "fixProb", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"means", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stds", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nSample", "=", 
      RowBox[{"Length", "[", "clonalLevels", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"means", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"clonalLevels", "[", 
              RowBox[{"[", "\[Sigma]", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"timeDist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Sigma]"}], "]"}], "]"}], " ", "]"}], 
              "/", "365.25"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "1", ",", "nSample"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stds", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"clonalLevels", "[", 
              RowBox[{"[", "\[Sigma]", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"timeDist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "\[Sigma]"}], "]"}], "]"}], " ", "]"}], 
              "/", "365.25"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "1", ",", "nSample"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"means", ",", "stds"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6955833731883802`*^9, 3.69558337982714*^9}, {
  3.6955835278632402`*^9, 3.695583533847715*^9}, {3.695583587473938*^9, 
  3.695583637887233*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getIncidenceCurve", "[", 
   RowBox[{"timeData_", ",", "tMin_", ",", "tMax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "timeDataSorted", ",", "curve", ",", "i"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "timeData", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"timeDataSorted", "=", 
      RowBox[{"Sort", "[", "timeData", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"curve", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tMin", ",", "0"}], "}"}]}], "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "Second", " ", "point", " ", "useful", " ", "for", " ", "LogLinear", 
       " ", "plots"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"curve", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"timeDataSorted", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"i", "-", "1"}], "n"], "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"curve", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"timeDataSorted", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"N", "[", 
             FractionBox["i", "n"], "]"}]}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"curve", ",", 
       RowBox[{"{", 
        RowBox[{"tMax", ",", "1"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "curve", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7119547312678127`*^9, 3.7119549140630913`*^9}, {
  3.711954991541135*^9, 3.711955005740019*^9}, {3.711955057084046*^9, 
  3.7119550753375883`*^9}, {3.711955626312023*^9, 3.711955633814839*^9}, {
  3.71196565254536*^9, 3.711965659121073*^9}, {3.711969515944789*^9, 
  3.711969546886364*^9}, {3.7119704012737303`*^9, 3.711970414488447*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Analytical results", "Subsection",
 CellChangeTimes->{{3.695588617015256*^9, 3.69558861988592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getZ0", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "z0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"z0", "=", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"a", 
          FractionBox[
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
           "\[ScriptCapitalN]"]}], 
         RowBox[{"\[Delta]", "+", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
            "\[ScriptCapitalN]"]}]}]], 
        FractionBox["1", "\[ScriptCapitalN]"]}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "z0", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.668841539600287*^9, 3.668841561906837*^9}, {
   3.668841616682199*^9, 3.668841619345768*^9}, {3.668841746797442*^9, 
   3.668841752108912*^9}, 3.66884188208971*^9, {3.668842044618889*^9, 
   3.668842049849934*^9}, {3.6688420839213943`*^9, 3.6688422549568567`*^9}, {
   3.67749076451233*^9, 3.677490781687209*^9}, {3.677490828637987*^9, 
   3.677490828927264*^9}, {3.677490875829639*^9, 3.6774908779562693`*^9}, {
   3.677490928098897*^9, 3.677490968104032*^9}, {3.677492918547641*^9, 
   3.6774929346022387`*^9}, {3.695584308088787*^9, 3.6955843251507587`*^9}, {
   3.695584381989959*^9, 3.695584398074939*^9}, {3.695584451565102*^9, 
   3.6955845298680887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalProb", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "prob"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"prob", "=", 
        FractionBox["z0", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"prob", "=", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
             "\[Xi]"}], "]"}]}]], ")"}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695586504409417*^9, 3.6955866467615223`*^9}, {
   3.695586702077282*^9, 3.695586720452691*^9}, {3.711889333614003*^9, 
   3.711889368398201*^9}, 3.7118895614805183`*^9, {3.711889593406344*^9, 
   3.711889678475431*^9}, {3.7118897960392103`*^9, 3.7118899657300158`*^9}, {
   3.71189003902357*^9, 3.7118900407838087`*^9}, {3.711890092901648*^9, 
   3.711890164562224*^9}, {3.711890203186524*^9, 3.711890261958644*^9}, 
   3.711890297310302*^9, 3.7118903452206783`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalTime", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "time"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Sigma]"}], ")"}], "z0"}], 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]], 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}]}]}], ")"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Section]\[ScriptCapitalN]", 
                RowBox[{" ", 
                 RowBox[{
                 "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", 
                  "\[Xi]"}]}]]}], 
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                  "1"}], ")"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "-", 
                   
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"2", "\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                   "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "-", 
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[Section]\[ScriptCapitalN]", 
               RowBox[{
               "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", "\[Xi]"}]], 
              
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                   "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], "]"}],
                   "-", "1"}], ")"}], " "}]], 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                   "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", "1"}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "+", 
                   
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], 
                    "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}], 
                    " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "-", 
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Xi]", " ", "\[Sigma]"}], 
                    "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Sigma]"}], "]"}], "-", 
                   RowBox[{"Log", "[", "\[Sigma]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"time", "/", "365.25"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69558468484597*^9, 3.695584718769825*^9}, {
   3.6955848037398043`*^9, 3.695584899448827*^9}, {3.695584955617128*^9, 
   3.695584980574943*^9}, {3.6955852085987377`*^9, 3.6955852577202473`*^9}, {
   3.6955852985182047`*^9, 3.6955854012801228`*^9}, {3.695585492999866*^9, 
   3.695585494576703*^9}, {3.6955855448124933`*^9, 3.6955855695475492`*^9}, {
   3.6955856712545137`*^9, 3.695585707584066*^9}, 3.695585763156383*^9, {
   3.6955858753117113`*^9, 3.695585879204714*^9}, {3.71179422580057*^9, 
   3.7117942529755573`*^9}, {3.7117943741420517`*^9, 3.711794375703191*^9}, {
   3.711794414425766*^9, 3.711794435872561*^9}, {3.7117976755762863`*^9, 
   3.7117977025990257`*^9}, {3.711797775887155*^9, 3.71179777938892*^9}, 
   3.711798326498131*^9, {3.711798520250523*^9, 3.711798530086753*^9}, {
   3.7118026866630583`*^9, 3.711802713019799*^9}, {3.711802966435885*^9, 
   3.7118029825063972`*^9}, {3.711890362280406*^9, 3.711890510761325*^9}, 
   3.7118906265092897`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"variance", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "sec", ",", "var", ",", "sol", ",", 
      "\[CapitalDelta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "1"}], "]"}], "-", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}]}], ")"}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "\[Sigma]"}], "]"}], "-", " ", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
                  RowBox[{"Log", "[", 
                   FractionBox["\[Xi]", 
                    RowBox[{"\[Xi]", "-", "z0"}]], "]"}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Sigma]"}], "]"}]}], "-", "1"}], 
                ")"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{"Requires", " ", "numerical", " ", "solution", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "here", " ", "we", " ", "solve", " ", "the", " ", "first", " ", 
            "and", " ", "second", " ", "moments"}], ",", " ", 
           RowBox[{"because", " ", "we", " ", "can"}]}], ")"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", 
         SuperscriptBox["10.", 
          RowBox[{"-", "10"}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Move", " ", "away", " ", "from", " ", "the", " ", "singular", " ", 
           
           RowBox[{"boundaries", ".", " ", "Not"}], " ", "perfect"}], ",", 
          " ", 
          RowBox[{"but", " ", "good", " ", "enough"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]1", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Section]\[ScriptCapitalN]", 
                  RowBox[{"\[ScriptCapitalB]", " ", "z", 
                   RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
                FractionBox[
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]2", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", "2"}], 
                FractionBox["\[Section]\[ScriptCapitalN]", 
                 RowBox[{"\[ScriptCapitalB]", " ", "z", 
                  RowBox[{"(", 
                   RowBox[{"\[Xi]", "-", "z"}], ")"}]}]], 
                RowBox[{"\[Theta]1", "[", "z", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "z", "]"}], ",", 
              RowBox[{"\[Theta]2", "[", "z", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", "\[CapitalDelta]", ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}]}], "}"}], 
            ",", 
            RowBox[{"MaxSteps", "\[Rule]", "100000"}]}], "]"}], "//", 
          "First"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sec", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "z", "]"}], "/.", "sol"}], ")"}], "/", 
            FractionBox[
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                "\[Xi]"}], "]"}]}]]}], ")"}], "/.", 
          RowBox[{"z", "\[Rule]", "z0"}]}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"var", "=", 
      RowBox[{
       FractionBox["sec", 
        SuperscriptBox["365.25", "2"]], "-", 
       SuperscriptBox[
        RowBox[{"conditionalTime", "[", 
         RowBox[{"z0", ",", "\[Sigma]", ",", "params"}], "]"}], "2"]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "var", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711446478802761*^9, 3.7114465828170633`*^9}, {
   3.711446738841564*^9, 3.711446754720251*^9}, {3.711446813086996*^9, 
   3.71144690628032*^9}, {3.711446950281795*^9, 3.711446957173641*^9}, {
   3.711446993336164*^9, 3.711447046956019*^9}, 3.7114472068375797`*^9, {
   3.711451969649268*^9, 3.711452022357366*^9}, {3.711452256222262*^9, 
   3.711452300180933*^9}, {3.711453174625086*^9, 3.711453183174818*^9}, {
   3.711691724516521*^9, 3.7116917550179987`*^9}, {3.7116917981043873`*^9, 
   3.711691841087152*^9}, {3.711791758524539*^9, 3.711791795956662*^9}, {
   3.711791832882471*^9, 3.71179184631597*^9}, {3.711791893385562*^9, 
   3.71179194199135*^9}, {3.711791980213264*^9, 3.711791982429175*^9}, {
   3.71179206230791*^9, 3.711792076293066*^9}, {3.711797868947214*^9, 
   3.711797871207541*^9}, {3.711797992683066*^9, 3.7117980978311787`*^9}, {
   3.711798133473428*^9, 3.711798136936211*^9}, 3.711798555304923*^9, {
   3.711798599536109*^9, 3.7117986057742977`*^9}, {3.711798649531909*^9, 
   3.71179870357178*^9}, {3.711798840278583*^9, 3.7117988601097317`*^9}, {
   3.7117997785339823`*^9, 3.711799820412499*^9}, {3.711799857445311*^9, 
   3.711799863227083*^9}, 3.711801078316558*^9, {3.711801184759046*^9, 
   3.7118011875418673`*^9}, {3.711801543986307*^9, 3.7118015820914717`*^9}, 
   3.711802735430949*^9, 3.711802995694175*^9, {3.7118031064862633`*^9, 
   3.711803110825198*^9}, {3.711803145124913*^9, 3.711803145300867*^9}, {
   3.7118033282869062`*^9, 3.711803353764391*^9}, {3.7118033937330112`*^9, 
   3.711803394187455*^9}, {3.711803519943961*^9, 3.7118035203192873`*^9}, {
   3.71180355765485*^9, 3.711803558062118*^9}, {3.7118064756926928`*^9, 
   3.7118065668481092`*^9}, {3.711806621895279*^9, 3.711806752579093*^9}, {
   3.711806804063676*^9, 3.711806804246913*^9}, {3.711806953941045*^9, 
   3.7118069827051773`*^9}, {3.711807325335123*^9, 3.71180735507304*^9}, {
   3.711863849056623*^9, 3.71186384956861*^9}, {3.711864018088746*^9, 
   3.711864034290105*^9}, {3.711865004863596*^9, 3.711865005817881*^9}, {
   3.7118652527947893`*^9, 3.711865252882113*^9}, 3.711865445012985*^9, {
   3.71186580456024*^9, 3.7118658051587563`*^9}, {3.711865921834813*^9, 
   3.711865923354885*^9}, {3.7118659856665983`*^9, 3.711866002594029*^9}, {
   3.7118906077837353`*^9, 3.7118907092501287`*^9}, {3.7118907685173903`*^9, 
   3.7118908465632257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findTimeRoot", "[", 
   RowBox[{"t_", ",", "z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalDelta]", ",", "\[Xi]", ",", "\[Xi]Prime", ",", "p", ",", 
      "pLeft", ",", "pRight", ",", "count", ",", "threshold"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalDelta]", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", "3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Xi]Prime", "=", 
      RowBox[{"\[Xi]", "+", "\[CapitalDelta]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"count", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"threshold", "=", 
      SuperscriptBox["10.", 
       RowBox[{"-", "5"}]]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"\[Xi]", "-", "\[Xi]Prime"}], "]"}], ">", "threshold"}], "&&", 
        RowBox[{"count", "<", "1000"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Xi]", "=", "\[Xi]Prime"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"params", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", "\[Xi]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pLeft", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"params", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "-", 
              FractionBox["\[CapitalDelta]", "2"]}], ")"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pRight", "=", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"params", ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{"\[Xi]", "+", 
              FractionBox["\[CapitalDelta]", "2"]}], ")"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Xi]Prime", "=", 
         RowBox[{"\[Xi]", "-", 
          RowBox[{"0.01", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"conditionalTime", "[", 
               RowBox[{"z0", ",", "\[Sigma]", ",", "p"}], "]"}], "-", "t"}], 
             ")"}], 
            FractionBox[
             RowBox[{
              RowBox[{"conditionalTime", "[", 
               RowBox[{"z0", ",", "\[Sigma]", ",", "pRight"}], "]"}], "-", 
              RowBox[{"conditionalTime", "[", 
               RowBox[{"z0", ",", "\[Sigma]", ",", "pLeft"}], "]"}]}], 
             "\[CapitalDelta]"]]}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Xi]Prime", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.696067464412537*^9, 3.696067469476931*^9}, {
   3.6960678188286657`*^9, 3.696067880924098*^9}, {3.69606798871157*^9, 
   3.696068082440867*^9}, {3.696068118340144*^9, 3.696068367372038*^9}, {
   3.6960684134939547`*^9, 3.69606847895475*^9}, {3.696068511988678*^9, 
   3.696068532688129*^9}, {3.696068585645465*^9, 3.696068623926529*^9}, {
   3.696068883960189*^9, 3.696068920069503*^9}, {3.696143563269869*^9, 
   3.69614366931413*^9}, 3.696143741007523*^9, {3.696153536017632*^9, 
   3.6961536169110394`*^9}, {3.6961536738219*^9, 3.696153677340273*^9}, {
   3.696153777489009*^9, 3.696153777760638*^9}, {3.6961538771015244`*^9, 
   3.69615389937239*^9}, {3.6961539374279118`*^9, 3.696153939218893*^9}, {
   3.696154117877655*^9, 3.6961541182525387`*^9}, {3.6961542967506657`*^9, 
   3.69615432841332*^9}, {3.696154367580779*^9, 3.696154367939975*^9}, {
   3.696154428610166*^9, 3.696154438289575*^9}, {3.696154517118348*^9, 
   3.696154553309376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getVarianceSigma", "[", 
   RowBox[{"z0_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", "mean", ",", "var", ",", "list"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Sigma]", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SuperscriptBox["10", "log\[Sigma]"], ",", 
          RowBox[{"{", 
           RowBox[{"log\[Sigma]", ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", "0.1"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0.15", ",", "1", ",", "0.05"}], "}"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"mean", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"conditionalTime", "[", 
         RowBox[{"z0", ",", 
          RowBox[{"\[Sigma]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "params"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Sigma]", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"var", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"variance", "[", 
         RowBox[{"z0", ",", 
          RowBox[{"\[Sigma]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "params"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Sigma]", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"list", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "mean", ",", "var"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711798889497107*^9, 3.7117989072489433`*^9}, {
  3.711799836400743*^9, 3.711799837656825*^9}, {3.711799926349678*^9, 
  3.711799940125153*^9}, {3.7118000930159073`*^9, 3.7118001556843243`*^9}, {
  3.711800186564823*^9, 3.711800232866934*^9}, {3.711800271002863*^9, 
  3.711800419396741*^9}, {3.711800532593895*^9, 3.711800679556037*^9}, {
  3.711800737450513*^9, 3.7118007998164473`*^9}, {3.711800848591629*^9, 
  3.711800892181364*^9}, {3.711807010143469*^9, 3.711807028710737*^9}, {
  3.7118074625770693`*^9, 3.711807562260868*^9}, {3.711807811501432*^9, 
  3.711807878338676*^9}, {3.711808196185423*^9, 3.7118082639336767`*^9}, {
  3.711808762773573*^9, 3.711808765717329*^9}, {3.711858081753467*^9, 
  3.711858130483636*^9}, {3.711858188113412*^9, 3.711858234695434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getVarianceEpsilon", "[", 
   RowBox[{"z0_", ",", "params_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]Vals", ",", "paramList", ",", "mean", ",", "var", ",", 
      "list"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]Vals", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"\[Epsilon]", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "5", ",", "0.1"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"paramList", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"params", ",", 
          RowBox[{"\[Epsilon]", "\[Rule]", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"mean", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"conditionalTime", "[", 
         RowBox[{"z0", ",", "\[Sigma]", ",", 
          RowBox[{"paramList", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"var", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"variance", "[", 
         RowBox[{"z0", ",", "\[Sigma]", ",", 
          RowBox[{"paramList", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"list", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]Vals", ",", "mean", ",", "var"}], "}"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7ftC/+zG5a8dI76nnwfRjy/1OG8C0ttYtoLpCQan
/UC0I2NLAIgOaFqQDKL/PC3NBtEcwkH5IPrNXulSEF0i/qASREttyukB0QaM
k2eBaL7TH9eA6FlZeltAdJjCr90gesE7oUMges/Z1uMg2me6y5GtQDpm37Rj
IDqq/NIfEM0R6cG5DUjv5i7QANH5104ZgOg/71ojQPS6B38TQLTMwYj5IDrm
yzYwnS5jseUckP5U6b8LRAstbD4Iov87hB0H0ZMykr6C6Hc9CT9B9OSVzn9B
9CblwP8gmsPqNMt5IO3nWsgLoo0iJctA9KmKKxUgenlb4yQQvWp6C5gGALGo
w2Y=
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection",
 CellChangeTimes->{{3.695580345754384*^9, 3.69558034659223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorPlot", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "col_", ",", "sym_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", "=", "0"}], ","}], "*)"}], 
     RowBox[{"num", ",", "points", ",", "lines", ",", 
      RowBox[{"(*", 
       RowBox[{"bars", ","}], "*)"}], "plot"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"points", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"x", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "col"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "sym"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"col", ",", 
           RowBox[{"Thickness", "[", "0.002", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"bars", "=", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}],
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"Show", "[", 
       RowBox[{"lines", ",", 
        RowBox[{"(*", 
         RowBox[{"bars", ","}], "*)"}], "points"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695587037685897*^9, 3.6955870499028597`*^9}, {
  3.6955871004473133`*^9, 3.695587117060816*^9}, {3.69558831908086*^9, 
  3.695588323102811*^9}, {3.695588430089944*^9, 3.695588436631132*^9}, {
  3.696066321469535*^9, 3.696066337515827*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorLogLinearPlot", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "col_", ",", "sym_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", "=", "0"}], ","}], "*)"}], 
     RowBox[{"num", ",", "points", ",", "lines", ",", 
      RowBox[{"(*", 
       RowBox[{"bars", ","}], "*)"}], "plot"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"points", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{"x", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "col"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "sym"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                 RowBox[{"\[Sigma]", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"col", ",", 
           RowBox[{"Thickness", "[", "0.002", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"bars", "=", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}],
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"Show", "[", 
       RowBox[{"lines", ",", 
        RowBox[{"(*", 
         RowBox[{"bars", ","}], "*)"}], "points"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690366361098097*^9, 3.6903663756568403`*^9}, {
  3.690447167338378*^9, 3.6904471748094587`*^9}, {3.690447221464448*^9, 
  3.6904472746779003`*^9}, {3.695586111033328*^9, 3.695586111687381*^9}, {
  3.695587121470046*^9, 3.695587133028921*^9}, {3.696064991579126*^9, 
  3.696065005400935*^9}, {3.696065145960115*^9, 3.696065151041655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotVarianceSigma", "[", 
   RowBox[{"list_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lower", ",", "upper", ",", "plot"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lower", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"upper", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lower", ",", "upper"}], "}"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"col", ",", 
           RowBox[{"Opacity", "[", "0.2", "]"}]}], " ", "]"}]}]}], " ", 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711798889497107*^9, 3.7117989072489433`*^9}, {
  3.711799836400743*^9, 3.711799837656825*^9}, {3.711799926349678*^9, 
  3.711799940125153*^9}, {3.7118000930159073`*^9, 3.7118001556843243`*^9}, {
  3.711800186564823*^9, 3.711800232866934*^9}, {3.711800271002863*^9, 
  3.711800419396741*^9}, {3.711800532593895*^9, 3.711800679556037*^9}, {
  3.711800737450513*^9, 3.7118007998164473`*^9}, {3.711800848591629*^9, 
  3.711800892181364*^9}, {3.711807010143469*^9, 3.711807028710737*^9}, {
  3.7118074625770693`*^9, 3.711807562260868*^9}, {3.711807811501432*^9, 
  3.711807878338676*^9}, {3.711808196185423*^9, 3.7118082639336767`*^9}, {
  3.711808762773573*^9, 3.711808765717329*^9}, {3.711858289917572*^9, 
  3.7118582941411552`*^9}, {3.711858465504318*^9, 3.711858533333317*^9}, {
  3.711861915529194*^9, 3.7118619164889097`*^9}, {3.711862761034284*^9, 
  3.711862765700082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotVarianceEpsilon", "[", 
   RowBox[{"list_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lower", ",", "upper", ",", "plot"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lower", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"upper", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lower", ",", "upper"}], "}"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
        RowBox[{"FillingStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"col", ",", 
           RowBox[{"Opacity", "[", "0.2", "]"}]}], " ", "]"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7118627469015837`*^9, 3.711862772045207*^9}, {
  3.711863655239511*^9, 3.711863657294509*^9}, {3.711863701390201*^9, 
  3.711863710340777*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Section",
 CellChangeTimes->{{3.695582436976624*^9, 3.6955824375185127`*^9}}],

Cell[CellGroupData[{

Cell["Left: Time taken to reach \[Sigma]-level of clonality", "Subsection",
 CellChangeTimes->{{3.695582455376359*^9, 3.695582479197035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "data", " ", "and", " ", "parameters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"totalRuns", "=", 
     RowBox[{"{", "10000", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clonalLevels", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10.", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"0.1", "i"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dir00", "=", "\"\<zz-data/clonal-mouse/epsilon_00\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dir01", "=", "\"\<zz-data/clonal-mouse/epsilon_01\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dir05", "=", "\"\<zz-data/clonal-mouse/epsilon_05\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params00", "=", 
     RowBox[{
      RowBox[{"getPars", "[", "dir00", "]"}], "//", "First"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params01", "=", 
     RowBox[{
      RowBox[{"getPars", "[", "dir01", "]"}], "//", "First"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params05", "=", 
     RowBox[{
      RowBox[{"getPars", "[", "dir05", "]"}], "//", "First"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x00", ",", "\[Sigma]00"}], "}"}], "=", 
     RowBox[{"extractClonalStats", "[", 
      RowBox[{"dir00", ",", "totalRuns", ",", 
       RowBox[{"clonalLevels", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "16"}], "]"}], "]"}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x01", ",", "\[Sigma]01"}], "}"}], "=", 
     RowBox[{"extractClonalStats", "[", 
      RowBox[{"dir01", ",", "totalRuns", ",", "clonalLevels"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x05", ",", "\[Sigma]05"}], "}"}], "=", 
     RowBox[{"extractClonalStats", "[", 
      RowBox[{"dir05", ",", "totalRuns", ",", "clonalLevels"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Don", "'"}], "t", " ", "show", " ", "all", " ", "points", " ", 
     "as", " ", "cluttered"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"select0", "=", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"x00", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], " ", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "1"}], "&"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"select", "=", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"x01", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], " ", "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "\[Equal]", "1"}], "&"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x00", "=", 
     RowBox[{"x00", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select0"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]00", "=", 
     RowBox[{"\[Sigma]00", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select0"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x01", "=", 
     RowBox[{"x01", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]01", "=", 
     RowBox[{"\[Sigma]01", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x05", "=", 
     RowBox[{"x05", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select"}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]05", "=", 
     RowBox[{"\[Sigma]05", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "select"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z0", "=", 
     RowBox[{"getZ0", "[", "params00", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6955829022354383`*^9, 3.6955829050451736`*^9}, {
   3.6955837865020447`*^9, 3.695583830692227*^9}, {3.6955838754794407`*^9, 
   3.695583901558071*^9}, {3.6955840368575363`*^9, 3.695584048665114*^9}, {
   3.695584110491275*^9, 3.695584124897375*^9}, 3.695584572907943*^9, {
   3.6955861920140467`*^9, 3.6955862465963497`*^9}, {3.6960652105675783`*^9, 
   3.696065282539715*^9}, {3.6960655241070633`*^9, 3.6960655708428183`*^9}, {
   3.696144369136277*^9, 3.696144388064481*^9}, {3.696144561009338*^9, 
   3.6961446744136057`*^9}, {3.6971806384364862`*^9, 3.69718063857157*^9}, {
   3.697180681426426*^9, 3.697180683362007*^9}, {3.6971807721780148`*^9, 
   3.697180772350831*^9}, {3.697180821342202*^9, 3.697180841628561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Store", " ", "variance", " ", "as", " ", "it", " ", "takes", " ", "a", 
    " ", "long", " ", "time", " ", "to", " ", "calculate"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Comment", " ", "out", " ", "to", " ", "avoid", " ", "recomputing"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"export", "[", "label_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"name", ",", "dir", ",", "list"}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"name", "=", 
          RowBox[{"\"\<varianceSigma\>\"", "<>", "label"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dir", "=", "\"\<zz-data/clonal-mouse/\>\""}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"list", "=", 
          RowBox[{"getVarianceSigma", "[", 
           RowBox[{"z0", ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"\"\<params\>\"", "<>", "label"}], "]"}]}], " ", "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"dir", "<>", "name", "<>", "\"\<.dat\>\""}], ",", "list"}],
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{"export", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<00\>\"", ",", "\"\<01\>\"", ",", "\"\<05\>\""}], 
         "}"}]}], "]"}]}]}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.711855081953691*^9, 3.711855083846134*^9}, {
  3.7118579635285473`*^9, 3.7118579730233097`*^9}, {3.711859901429471*^9, 
  3.711859949348815*^9}, {3.711861438665924*^9, 3.711861491928409*^9}, {
  3.7118615491108637`*^9, 3.7118616034527884`*^9}, {3.711861850712454*^9, 
  3.7118618578113117`*^9}, {3.7118621258512917`*^9, 3.7118621710487022`*^9}, {
  3.711864364844269*^9, 3.711864366214472*^9}, {3.711864414981121*^9, 
  3.711864419420649*^9}, {3.711864501250905*^9, 3.7118645042578583`*^9}, {
  3.7118908698428392`*^9, 3.711890871065099*^9}, {3.711890925743285*^9, 
  3.711890929502825*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Import", " ", "variance"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"variances", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<zz-data/clonal-mouse/varianceSigma\>\"", "<>", "#", "<>", 
         "\"\<.dat\>\""}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<00\>\"", ",", "\"\<01\>\"", ",", "\"\<05\>\""}], "}"}]}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.711861679707357*^9, 3.711861739215123*^9}, {
   3.711861830325004*^9, 3.7118618368692102`*^9}, {3.711861869586241*^9, 
   3.711861884705677*^9}, 3.711861939624886*^9, 3.711862128442244*^9, {
   3.7118644216446533`*^9, 3.711864443588114*^9}, 3.711864477370696*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mySym", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "0.7"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mySymBig", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "1"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linePlot", "=", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"conditionalTime", "[", 
            RowBox[{"z0", ",", "\[Sigma]", ",", "params00"}], "]"}], ",", " ", 
           RowBox[{"conditionalTime", "[", 
            RowBox[{"z0", ",", "\[Sigma]", ",", "params01"}], "]"}], ",", 
           RowBox[{"conditionalTime", "[", 
            RowBox[{"z0", ",", "\[Sigma]", ",", "params05"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]", ",", 
           SuperscriptBox["10", 
            RowBox[{"-", "3"}]], ",", "1"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]], ",", 
              SuperscriptBox["10", "0"]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", "params00"}],
                 ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", "params01"}],
                 ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", 
                 "params05"}]}], "}"}], ",", 
              RowBox[{
              "LegendLabel", "\[Rule]", 
               "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]\>\""}], 
              ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "mySymBig"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                 RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.12", ",", "0.55"}], "}"}], "]"}]}], "]"}]}]}], "]"}],
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"plotVarianceSigma", "[", 
          RowBox[{
           RowBox[{"variances", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"myCol", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.3"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"ticksSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Level of clonality\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Mean time (years)\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{"100", " ", 
                    SuperscriptBox["10", "i"]}], "]"}], "]"}], "<>", 
                 "\"\<%\>\""}]}], 
               RowBox[{"(*", 
                RowBox[{"Superscript", "[", 
                 RowBox[{"\"\<10\>\"", ",", "i"}], "]"}], "*)"}], "}"}], ",", 
              
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
      "]"}], "/.", "myPlotStyle"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataPlot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"errorLogLinearPlot", "[", 
      RowBox[{"x00", ",", "\[Sigma]00", ",", 
       RowBox[{"myCol", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"mySym", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"errorLogLinearPlot", "[", 
      RowBox[{"x01", ",", "\[Sigma]01", ",", 
       RowBox[{"myCol", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"mySym", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"errorLogLinearPlot", "[", 
      RowBox[{"x05", ",", "\[Sigma]05", ",", 
       RowBox[{"myCol", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"mySym", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}]}], " ", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"leftPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"linePlot", ",", "dataPlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(a)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.677916118080035*^9, 3.677916208052541*^9}, {
   3.677916258298935*^9, 3.677916259418841*^9}, {3.677916771466055*^9, 
   3.6779167794889107`*^9}, {3.677917099326137*^9, 3.6779171427643547`*^9}, {
   3.677924318672344*^9, 3.677924395101562*^9}, {3.67792514077217*^9, 
   3.677925143555801*^9}, {3.677925385348473*^9, 3.67792539341159*^9}, {
   3.677925552310631*^9, 3.677925553509976*^9}, {3.677925878331791*^9, 
   3.6779258797948236`*^9}, {3.677927311635248*^9, 3.677927389775907*^9}, {
   3.6779277298362722`*^9, 3.677927733556028*^9}, {3.677928885757535*^9, 
   3.677928984849393*^9}, {3.677929016128669*^9, 3.677929064270731*^9}, {
   3.6779292950388823`*^9, 3.677929324485771*^9}, {3.6779299054353437`*^9, 
   3.677929948944591*^9}, {3.677930007223274*^9, 3.677930019086225*^9}, {
   3.677930055037183*^9, 3.6779300605327673`*^9}, {3.6779301075715513`*^9, 
   3.677930107707312*^9}, {3.6779987757000837`*^9, 3.6779989084786587`*^9}, {
   3.677999038707144*^9, 3.677999144950542*^9}, {3.677999243851431*^9, 
   3.6779992440113487`*^9}, {3.677999599424268*^9, 3.677999659525065*^9}, {
   3.6786190721462727`*^9, 3.678619073361067*^9}, {3.678622641782282*^9, 
   3.6786226465978737`*^9}, {3.6786227286678658`*^9, 
   3.6786227294437037`*^9}, {3.6786228293192587`*^9, 3.678622830575287*^9}, {
   3.6815556075243607`*^9, 3.6815556221557913`*^9}, {3.6864875470337133`*^9, 
   3.6864875575535593`*^9}, {3.686487616840316*^9, 3.686487617151389*^9}, {
   3.6903662251514463`*^9, 3.690366242445799*^9}, {3.6903663162759247`*^9, 
   3.690366320533085*^9}, {3.69036643088758*^9, 3.6903666250640993`*^9}, {
   3.690366655359283*^9, 3.690366660454789*^9}, {3.6904457818984756`*^9, 
   3.690445783106982*^9}, {3.690447064878134*^9, 3.690447076900538*^9}, {
   3.690447299437601*^9, 3.690447299861094*^9}, {3.690448462013596*^9, 
   3.6904484703794117`*^9}, 3.690449520383689*^9, {3.6904509477950563`*^9, 
   3.6904509481629457`*^9}, {3.695370084526804*^9, 3.695370107876642*^9}, {
   3.695584589717746*^9, 3.6955845934535017`*^9}, {3.69558582998905*^9, 
   3.695585830963788*^9}, 3.6955858654051533`*^9, {3.6955859115043383`*^9, 
   3.695585952855996*^9}, {3.695585992310442*^9, 3.695586036731873*^9}, {
   3.6955861313298197`*^9, 3.6955861588624353`*^9}, {3.6955862662448683`*^9, 
   3.695586310235252*^9}, {3.695649386331769*^9, 3.695649389877201*^9}, {
   3.6960537616068*^9, 3.696053766574842*^9}, {3.696053811987389*^9, 
   3.696053852257805*^9}, {3.696055635951766*^9, 3.696055691852951*^9}, {
   3.696055834371499*^9, 3.696056073235878*^9}, {3.696064963755197*^9, 
   3.696064966378512*^9}, {3.696065168911439*^9, 3.696065179414555*^9}, {
   3.69606560008549*^9, 3.696065651984247*^9}, {3.6960657192789717`*^9, 
   3.69606573586139*^9}, 3.696144550843446*^9, {3.696144685398863*^9, 
   3.6961446985091953`*^9}, {3.69614473801931*^9, 3.696144747554928*^9}, {
   3.6961516481338043`*^9, 3.696151652957499*^9}, {3.696151694973927*^9, 
   3.6961517159105883`*^9}, {3.6961518247995253`*^9, 3.69615185645398*^9}, {
   3.697180698810095*^9, 3.6971807010977573`*^9}, {3.697180971826635*^9, 
   3.6971809804560003`*^9}, {3.711452088835411*^9, 3.71145208948431*^9}, {
   3.711452324859931*^9, 3.711452350138906*^9}, {3.711452438384635*^9, 
   3.711452519686976*^9}, {3.711453222311255*^9, 3.7114532670827417`*^9}, {
   3.71179217309523*^9, 3.7117921892370663`*^9}, {3.711800433719986*^9, 
   3.711800510036565*^9}, {3.711806899221843*^9, 3.711806915275424*^9}, {
   3.711807156851274*^9, 3.711807170937956*^9}, {3.711807298006548*^9, 
   3.71180729869368*^9}, {3.711807388191731*^9, 3.7118073896037407`*^9}, 
   3.711807441730809*^9, {3.711807570594692*^9, 3.7118075709899387`*^9}, {
   3.7118078891389513`*^9, 3.7118078893239927`*^9}, {3.71180818285837*^9, 
   3.711808188312931*^9}, {3.711861947048793*^9, 3.711861979810544*^9}, 
   3.71186218191616*^9, {3.7118644514369373`*^9, 3.7118644743321247`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Right: Selective effect required to reach \[Sigma]-clonality in given time\
\>", "Subsection",
 CellChangeTimes->{{3.695582455376359*^9, 3.695582516244021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "data", " ", "and", " ", "parameters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dir", "=", "\"\<zz-data/clonal-mouse/epsilon_vary\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nFiles", "=", 
     RowBox[{"Length", "[", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<chimerismData_*.dat\>\"", ",", "dir"}], "]"}], " ", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"getPars", "[", "dir", "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalRuns", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"1000", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"clonalLevels", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10.", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"0.1", "i"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Sigma]"}], "}"}], "=", 
     RowBox[{"extractClonalStats", "[", 
      RowBox[{"dir", ",", "totalRuns", ",", "clonalLevels"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"z0", "=", 
     RowBox[{"getZ0", "[", 
      RowBox[{"params", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]Index", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11", ",", "21", ",", "31"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Select", " ", "certain", " ", "levels", " ", "of", " ", "clonality"}], 
     ",", " ", 
     RowBox[{"i", ".", "e", ".", " ", "0.001"}], ",", " ", "0.01", ",", " ", 
     "0.1", ",", " ", "1.0"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]Vals", "=", 
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\[Sigma]Index", ",", "1"}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.690448606838677*^9, 3.690448723346026*^9}, {
   3.690448938550281*^9, 3.6904489407141027`*^9}, {3.6904490700222883`*^9, 
   3.690449070125379*^9}, {3.690450858008995*^9, 3.69045088735635*^9}, {
   3.6923690132438717`*^9, 3.692369015866384*^9}, {3.6955867936345387`*^9, 
   3.6955868425694304`*^9}, {3.6955869108885202`*^9, 
   3.6955869150953197`*^9}, {3.695586948256383*^9, 3.6955869811131687`*^9}, {
   3.6955872098757763`*^9, 3.695587262927326*^9}, 3.6955873800142307`*^9, {
   3.695587443136087*^9, 3.6955874667376547`*^9}, {3.6955880669091473`*^9, 
   3.695588073460517*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Store", " ", "variance", " ", "as", " ", "it", " ", "takes", " ", "a", 
    " ", "long", " ", "time", " ", "to", " ", "calculate"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Comment", " ", "out", " ", "to", " ", "avoid", " ", "recomputing"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"export", "[", "label_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "name", ",", "dir", ",", "list"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Sigma]", "=", 
         RowBox[{"\[Sigma]Vals", "[", 
          RowBox[{"[", "label", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"name", "=", 
         RowBox[{"\"\<varianceEpsilon\>\"", "<>", 
          RowBox[{"ToString", "[", "label", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dir", "=", "\"\<zz-data/clonal-mouse/\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"getVarianceEpsilon", "[", 
          RowBox[{"z0", ",", 
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"params", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], ",", "\[Sigma]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dir", "<>", "name", "<>", "\"\<.dat\>\""}], ",", "list"}], 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"export", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "\[Sigma]Vals", "]"}], " ", "]"}]}], " ", 
      "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.711855081953691*^9, 3.711855083846134*^9}, {
  3.7118579635285473`*^9, 3.7118579730233097`*^9}, {3.711859901429471*^9, 
  3.711859949348815*^9}, {3.711861438665924*^9, 3.711861491928409*^9}, {
  3.7118615491108637`*^9, 3.7118616034527884`*^9}, {3.711861850712454*^9, 
  3.7118618578113117`*^9}, {3.7118621258512917`*^9, 3.711862224687482*^9}, {
  3.711862274397234*^9, 3.711862357251113*^9}, {3.711862401369664*^9, 
  3.711862454951056*^9}, {3.711862498574451*^9, 3.711862498861411*^9}, {
  3.711866348260968*^9, 3.7118663509967413`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Import", " ", "variance"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"variances", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{"\"\<zz-data/clonal-mouse/varianceEpsilon\>\"", "<>", 
         RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.dat\>\""}], "]"}], 
       "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "\[Sigma]Vals", "]"}], " ", "]"}]}], " ", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.711861679707357*^9, 3.711861739215123*^9}, {
   3.711861830325004*^9, 3.7118618368692102`*^9}, {3.711861869586241*^9, 
   3.711861884705677*^9}, 3.711861939624886*^9, 3.711862128442244*^9, {
   3.711862527523933*^9, 3.711862631048571*^9}, {3.7118627086786823`*^9, 
   3.711862725855975*^9}, {3.7118633868884773`*^9, 3.711863414070572*^9}, 
   3.711865631500929*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mySym", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "0.7"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mySymBig", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"symFull", "/.", "myPlotStyle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "1"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"linePlot", "=", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "0"}], ",", 
                RowBox[{"conditionalTime", "[", 
                 RowBox[{"z0", ",", "\[Sigma]", ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"params", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]}], " ", 
                 "]"}]}], "}"}], "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", 
                  RowBox[{"params", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                 RowBox[{"conditionalTime", "[", 
                  RowBox[{"z0", ",", "\[Sigma]", ",", 
                   RowBox[{"params", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], " ",
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "\[Sigma]Vals"}], "}"}]}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", 
                  RowBox[{"100", "\[Sigma]"}], "]"}], "<>", "\"\<%\>\""}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", "\[Sigma]Vals"}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "mySymBig"}], ",", 
              RowBox[{"LegendLabel", "\[Rule]", "\"\<Clonality\>\""}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                 RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.86", ",", "0.63"}], "}"}], "]"}]}], " ", "]"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"ticksSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Fold advantage, \!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\
\[Beta]\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Mean time (years)\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
      "]"}], "/.", "myPlotStyle"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"varPlot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"plotVarianceEpsilon", "[", 
        RowBox[{
         RowBox[{"variances", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"myCol", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Sigma]Vals", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataPlot", "=", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"errorPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", 
              RowBox[{"params", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"\[Sigma]Index", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nFiles", ",", "\[CapitalDelta]"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", 
              RowBox[{"params", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"\[Sigma]", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"\[Sigma]Index", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nFiles", ",", "\[CapitalDelta]"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"myCol", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"mySym", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Sigma]Index", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeFix", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2.0", ",", "2.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]Fix", "=", 
   RowBox[{"{", 
    RowBox[{"1.0", ",", "1.0", ",", "0.01"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]Root", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"findTimeRoot", "[", 
      RowBox[{
       RowBox[{"timeFix", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "z0", ",", 
       RowBox[{"\[Sigma]Fix", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"params", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "timeFix", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"examplePlot", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Epsilon]"}], ")"}], ",", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Epsilon]"}], ")"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"t", "\[Rule]", 
            RowBox[{"timeFix", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", 
            RowBox[{"\[Epsilon]Root", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "timeFix", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Dotted", ",", 
         RowBox[{"Thickness", "[", "0.003", "]"}]}], " ", "]"}]}]}], " ", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"rightPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "linePlot", ",", "varPlot", ",", "dataPlot", ",", "examplePlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(b)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.69044902417835*^9, 3.69044905473464*^9}, {
   3.690449085788896*^9, 3.690449127475423*^9}, {3.6904491750194283`*^9, 
   3.69044919528903*^9}, {3.6904492902063723`*^9, 3.690449309412921*^9}, {
   3.6904493971232557`*^9, 3.690449626681532*^9}, {3.6904496635532503`*^9, 
   3.690449730822081*^9}, 3.690449850006855*^9, {3.6904506255748243`*^9, 
   3.69045062571809*^9}, {3.690450890069005*^9, 3.690450890252689*^9}, {
   3.690450922445623*^9, 3.690450938251157*^9}, {3.6904510226330233`*^9, 
   3.690451023616387*^9}, {3.6904512883908854`*^9, 3.690451334061041*^9}, {
   3.690451762742738*^9, 3.690451801436171*^9}, {3.690451836490991*^9, 
   3.690451849170507*^9}, {3.690451961743293*^9, 3.6904519633590508`*^9}, {
   3.690452003285797*^9, 3.6904520813470163`*^9}, {3.690452360313458*^9, 
   3.690452477716146*^9}, {3.690452511786903*^9, 3.690452584936167*^9}, {
   3.690452780234929*^9, 3.690452832263406*^9}, {3.692357337057042*^9, 
   3.6923573414407873`*^9}, 3.692426017241672*^9, {3.695370185217869*^9, 
   3.695370248790696*^9}, {3.6953705361440487`*^9, 3.695370608337878*^9}, {
   3.695587554831306*^9, 3.695587634722918*^9}, {3.6955876891650457`*^9, 
   3.69558769664318*^9}, {3.69558791537848*^9, 3.695587996125842*^9}, {
   3.695588083277522*^9, 3.695588084651593*^9}, {3.695588353766358*^9, 
   3.695588365001317*^9}, {3.695588397932398*^9, 3.6955884107697477`*^9}, {
   3.69606603094932*^9, 3.69606607542069*^9}, {3.696066246956717*^9, 
   3.696066281545814*^9}, {3.696066452076923*^9, 3.69606647803065*^9}, 
   3.6960667949627132`*^9, {3.6961440720677013`*^9, 3.696144128369269*^9}, {
   3.6961441891278763`*^9, 3.696144212350272*^9}, {3.696144267892179*^9, 
   3.696144306738615*^9}, {3.69615187475073*^9, 3.6961518769251966`*^9}, 
   3.696152195805696*^9, {3.696152343949586*^9, 3.69615248077638*^9}, {
   3.6961530519004498`*^9, 3.696153094841416*^9}, {3.696153257004941*^9, 
   3.6961532589560757`*^9}, {3.696154071896015*^9, 3.696154073007996*^9}, {
   3.696154593764984*^9, 3.6961545964279203`*^9}, {3.711808824411964*^9, 
   3.71180883381666*^9}, {3.7118096778956957`*^9, 3.711809715949231*^9}, {
   3.711862818581156*^9, 3.7118628570017014`*^9}, {3.711863426112012*^9, 
   3.711863434982298*^9}, {3.711866309182687*^9, 3.711866310294179*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combine leftPlot and rightPlot into two-panel plot", "Subsection",
 CellChangeTimes->{{3.695582455376359*^9, 3.695582479197035*^9}, {
  3.695582521316635*^9, 3.695582522188035*^9}, {3.695586382064013*^9, 
  3.695586395461956*^9}, {3.695588479669037*^9, 3.695588493295998*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"leftPlot", ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", "pad"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"rightPlot", ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", "pad"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"pad", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"47", ",", "18"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "5"}], "}"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6904528489773817`*^9, 3.690453033143361*^9}, {
  3.6955825457106667`*^9, 3.695582549325396*^9}, {3.7087783095385227`*^9, 
  3.708778309809368*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["CDF incidence curves", "Subsection",
 CellChangeTimes->{{3.711953529370816*^9, 3.711953534549067*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "data", " ", "and", " ", "parameters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"totalRuns", "=", 
     RowBox[{"{", "10000", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clonalLevels", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10.", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"0.1", "i"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Only", " ", "look", " ", "at", " ", "4", "%", " ", "clonality"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clonalIndex", "=", "17"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6955829022354383`*^9, 3.6955829050451736`*^9}, {
   3.6955837865020447`*^9, 3.695583830692227*^9}, {3.6955838754794407`*^9, 
   3.695583901558071*^9}, {3.6955840368575363`*^9, 3.695584048665114*^9}, {
   3.695584110491275*^9, 3.695584124897375*^9}, 3.695584572907943*^9, {
   3.6955861920140467`*^9, 3.6955862465963497`*^9}, {3.6960652105675783`*^9, 
   3.696065282539715*^9}, {3.6960655241070633`*^9, 3.6960655708428183`*^9}, {
   3.696144369136277*^9, 3.696144388064481*^9}, {3.696144561009338*^9, 
   3.6961446744136057`*^9}, {3.6971806384364862`*^9, 3.69718063857157*^9}, {
   3.697180681426426*^9, 3.697180683362007*^9}, {3.6971807721780148`*^9, 
   3.697180772350831*^9}, {3.697180821342202*^9, 3.697180841628561*^9}, {
   3.7119551982462397`*^9, 3.711955300265978*^9}, {3.711955351697122*^9, 
   3.711955354683716*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dir", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\"\<zz-data/clonal-mouse/epsilon_\>\"", "<>", "#"}], "&"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\"\<00\>\"", ",", "\"\<01\>\"", ",", "\"\<05\>\""}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"params", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"getPars", "[", "#", "]"}], " ", "]"}], "&"}], ",", "dir"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z0", "=", 
    RowBox[{"getZ0", "[", 
     RowBox[{"params", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timeData", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"getClonalData", "[", 
          RowBox[{"#", ",", "totalRuns"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1", ",", "clonalIndex"}], "]"}], "]"}], "/", 
        "365.25"}], "&"}], ",", "dir"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tMin", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tMax", "=", 
    RowBox[{"Max", "[", "timeData", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incidenceCurveList", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"getIncidenceCurve", "[", 
        RowBox[{"#", ",", "tMin", ",", "tMax"}], "]"}], "&"}], ",", 
      "timeData"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"conditionalTime", "[", 
       RowBox[{"z0", ",", 
        RowBox[{"clonalLevels", "[", 
         RowBox[{"[", "clonalIndex", "]"}], "]"}], ",", "#"}], "]"}], "&"}], 
     ",", "params"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"variance", "[", 
       RowBox[{"z0", ",", 
        RowBox[{"clonalLevels", "[", 
         RowBox[{"[", "clonalIndex", "]"}], "]"}], ",", "#"}], "]"}], "&"}], 
     ",", "params"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6955829022354383`*^9, 3.6955829050451736`*^9}, {
   3.6955837865020447`*^9, 3.695583830692227*^9}, {3.6955838754794407`*^9, 
   3.695583901558071*^9}, {3.6955840368575363`*^9, 3.695584048665114*^9}, {
   3.695584110491275*^9, 3.695584124897375*^9}, 3.695584572907943*^9, {
   3.6955861920140467`*^9, 3.6955862465963497`*^9}, {3.6960652105675783`*^9, 
   3.696065282539715*^9}, {3.6960655241070633`*^9, 3.6960655708428183`*^9}, {
   3.696144369136277*^9, 3.696144388064481*^9}, {3.696144561009338*^9, 
   3.6961446744136057`*^9}, {3.6971806384364862`*^9, 3.69718063857157*^9}, {
   3.697180681426426*^9, 3.697180683362007*^9}, {3.6971807721780148`*^9, 
   3.697180772350831*^9}, {3.697180821342202*^9, 3.697180841628561*^9}, {
   3.7119551982462397`*^9, 3.711955300265978*^9}, {3.711955351697122*^9, 
   3.7119554812208357`*^9}, {3.711955568481041*^9, 3.711955593192033*^9}, {
   3.711955640855406*^9, 3.711955686981801*^9}, {3.711955742915868*^9, 
   3.7119557794579268`*^9}, {3.71196561349971*^9, 3.7119656673530912`*^9}, {
   3.711969559093872*^9, 3.711969559677593*^9}, {3.711969606932816*^9, 
   3.711969607086102*^9}, {3.711969656299844*^9, 3.711969656418415*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.711963952404215*^9, 3.7119639589643383`*^9}, 
   3.7119656119241743`*^9}],

Cell[BoxData["127.94743326488707`"], "Output",
 CellChangeTimes->{3.711963959401284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Predicted", " ", "incidence", " ", "curve", " ", "based", " ", "on", " ", 
    "normally", " ", "distributed", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mean", "=", "\[Mu]"}], ",", " ", 
      RowBox[{"variance", "=", "v"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"t_", ",", "\[Mu]_", ",", "v_"}], "]"}], ":=", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"t", "-", "\[Mu]"}], 
         RowBox[{
          RowBox[{"Sqrt", "[", "v", "]"}], 
          SqrtBox["2"]}]], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{"incidenceCurveList", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Thin"}], ",", 
        RowBox[{"Filling", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "->", "Bottom"}], ",", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"{", "1", "}"}]}], ",", 
           RowBox[{"3", "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"t", ",", 
             RowBox[{"mean", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"var", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "mean", "]"}]}], "}"}]}], "]"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", "#"}], "&"}],
                ",", "params"}], "]"}], ",", 
             RowBox[{
             "LegendLabel", "\[Rule]", 
              "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]\>\""}], 
             ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"18", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.85", ",", "0.35"}], "}"}], "]"}]}], "]"}]}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               FractionBox["t", 
                RowBox[{"mean", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "mean", "]"}]}], "}"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0.001", ",", 
           RowBox[{"Max", "[", "timeData", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Dotted"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"ticksSize", ",", 
         RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
           RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
           RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"FrameTicks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"N", "[", 
                    RowBox[{"100", " ", 
                    SuperscriptBox["10", "i"]}], "]"}], "]"}], "<>", 
                  "\"\<%\>\""}]}], 
                RowBox[{"(*", 
                 RowBox[{"Superscript", "[", 
                  RowBox[{"\"\<10\>\"", ",", "i"}], "]"}], "*)"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 FractionBox["i", 
                  RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                 "\"\<\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
          "}"}]}], ","}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", "]"}],
     "/.", "myPlotStyle"}]}]}]], "Input",
 CellChangeTimes->{{3.7119549398584347`*^9, 3.711954949006321*^9}, {
  3.7119550240919437`*^9, 3.71195503941847*^9}, {3.7119550854012003`*^9, 
  3.711955086889786*^9}, {3.711955690492942*^9, 3.711955718179945*^9}, {
  3.7119557891535387`*^9, 3.7119558047864027`*^9}, {3.711955836559843*^9, 
  3.7119561082955027`*^9}, {3.711963935518661*^9, 3.7119639375007973`*^9}, {
  3.711963968868813*^9, 3.711963982763153*^9}, {3.71196470675812*^9, 
  3.711964725473855*^9}, {3.711964764113021*^9, 3.7119649474901743`*^9}, {
  3.711965029512555*^9, 3.7119650597598867`*^9}, {3.711965122605541*^9, 
  3.7119651330841017`*^9}, {3.711965195139632*^9, 3.7119652160971193`*^9}, {
  3.711965441418807*^9, 3.711965441807372*^9}, {3.711965565998166*^9, 
  3.711965572004717*^9}, {3.711969566463187*^9, 3.711969603502037*^9}, {
  3.711969644031961*^9, 3.711969648123452*^9}, {3.711970427296702*^9, 
  3.711970438416059*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1: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
Q3aqP0yQKH3b+C2NGPNpfzDy8wsy/EotdfZ4jM0Rf/gaoij1posa821/MLB6
bm9ZSy0pr/W32tcfDurtN5AqpMZ83B+GxA6YPk+jXsunsXn1b3/4EC1+1MKC
GvP1AHipdKY8+wr1muYDd+6qBsDDRWcayg9SYz4fAEKrbdsX7qJeE7GPlfEF
wPzW2M8v51Njvh8AUf1TW8aPo5aw3j0q0hYA0rWb9qX9TSXGeiAQNp86s/DA
H+rVx3YqXlofCGNlciZmN1JjvRAIK4e6hCdWUYuvUTVLtgiETbWq/atKqLGe
CISQVb+qM3Op2dnAzJJAUO5o2jyNg7HeCIQE6/uN7zKpxUoVx+kv+QSOmXGd
G+OpsR75BL5vfwv+86YW85XfEnnpE2jqueeOdaHGeuUTPOI74MZjS73yltzD
yUmfwLxcfuZ9M2qsZz6ByJMJneeNqGf6zGv2nxwEOwPXt8icpsZ6Jwi8Rcre
F2hTO/G5mh9aGwSfJ32y+n2YGuuhIAgb1l7XeYha4KbQ0hGNIGi+ainbKkmN
9VIQRF9y5uFZQe3U/CLF+14Q2BzaVKskTI31VBAsjFFYVT+HesZuQb29PkFQ
t3ZVkLogNdZbQdA6ba2xLTe1Y4TThN95QbBbnkthyxRqrMeCIMBc8evZvynE
/CIzvN/+ZP35hSUZZ7qosV4LhnOv1CMWtlI7WNtv27EgGA4n+CjPLKfGei4Y
9nTm2BtmUfN9520f2BoM16brP1+UTI31XjDY1GhKuHyhtj9mZ+lqHAya70/V
G0VSYz0YDGML1v/UCqLmYxLqYFgVbn/giR811ovBMOXW0LHFHPx0jU1G9+dg
kGz9bqXhS431ZDDMnVP9zPMF9fSXkw2ftQSD3Ngly6QfUGO9GQxzeCQXX71D
/YTLcoo8dwisqIpZd9SYGuvREOiS6p6spEfNe26CX6t0CGj+NZIt06bGejUE
QgzTRCwPUz8pNd/55GgIyK5cYbpalRrr2RC4p+9YFjyHmge4ujeYh8C3LINb
GjOpsd4NgRLT7LOTZ1Db+d63rfcLgY7tH+9K8lNjPRwC3D9PzpD7nUzMPWN0
lVVRCOjtP9bW20aN9XIISMxXGR2XRf341p2ctUMhIHBx/IrYYGqsp0Nh3QOX
ly7Pqae1/j1XuSgUvpVwX8q5QY31digscJIffa9HbbvnJs+DHaEQmX78+Y7T
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
BUZx349x9QaKI9S4b4sDiTW7t3/+RR2nxgtc4oBOXKB50rhCYtzHxYHlrjp/
70tRtwssFMxL4EDMsP7H5/8w7uvigLPFsooDMtQTazUkn6VyIFNnqmufLDXu
8+LA9ZnZj/+bTb2aH/jNfT5+79Tbo0SN+744cDtZSzFEmdrS4iDczeHA1Tbf
W8cXUuM+MA68NpUq11Klvr2cNzHJAal3rrFWi6hxXxj394ntjbyylLpyNO+C
woHvFeWiUsupcZ8Y93rtrdivtpL6Z52vo3M1B472HLbzW02N+8a495N20uI/
dKnn89cNcZ+PMyG+p9ZT4z4yDjTs/u3paEBtxI8r4t4P3rOOVd1BjfvKOPDy
/luDhN3UV/ntjhyosZk3MGxCjfvMOOAVLNZkZkadOaaqageHAzamNreibalx
3xn3/XIy6Mk2O+o+7peNDb3c3+d4z51R56hxHxr37/npjDO/LlLPiOz7sqbv
/+i673iuvj8O4NlSMpLQIMlIyx6pd3uprxKyQspoiCSSNkmUIpEGTZKGpIFS
GgppUDTx2RulKKV+99zPn+/P7/vf8/Hw6Mu9555z7j3nvF/t8Haqi2VoMrY0
L60dukOa0vpSsRfSH4Sp57Gs69bgo9jSPDVqvN89/EyxDMc7qY00/d4OP9Ku
M+/mYkvz1trh7I4vTtYnsclu3BG/qOfZ68yLb8XY0jy2dritGfVI8wY2mU1p
/m2HZ03xrv+VYkvz2hjAOmpvwLiNPfCsk7eSAgMaZ9dcG1yOLc1zY4DrMibb
7T6200ZyxSgvfV6/rApbmvfGALfh+1cmPMBeSx+IZcCj2l2fLzVgS/PgGCA4
uPpl9ktsOs5IiwFzoyZ9W9eCLc2LY0CT1uMJVu+x6dNuugyYaJRzeGgrtjRP
jgFZ4kFFS9uwf5HtlCMYIDS3K5/JxJbmzTEgdKRV1AsZtog6/vqxEQMCH+tN
kxdjS/PoGJCz0uxERRe2zzTyRs2Al1H3oq2+Ykvz6hgwLu7Dhv4f2AfUSCAA
A+KHDWnJ+octzbNjQOyYXONS5cfI5S3PBp+fzACVWyOWyqlgS/PuGGC899Ls
9kHYggstRsdtGVDWtmizyVBsaR4eA4bv7LI8KcP69IDGAF+NNwZ/ZVial8cA
gysvMjwnYi+E3gV7pzOgP+vcyB0yLM3TY0B60qSAjdbY8YNVVsbNZsD1PqNZ
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
gipUe1rhEjn2Bvaf18rh+j85sOKBYmRyBXbWHRLYyIFF6UsDLtzDnpCnu31I
PzVf5XdOWfUZ+0nSaOUD/6j+brVqjQcH248OvObCFpNIiwoedveySQY7Fbmg
pbgp4rcAO82RvBFxoW3Qnf5WMTbZzbR5IBe+6Cnr/enArlQiJz64cM7Vskr/
N/Zy8ZJZ4UO4UNbUHj1A/hUyXc5CkwsLhu9+O0QBm97uMpQLTSKvVXEjsenH
YRgXcgqnz5Afi01227vrcSHgyH+Nk8Zj03GCBlxI0ki+UueETccNjOKCkn/o
8ffO2HQ5QkMunBd/WXFpGvbQMWRGxQVGQ+NinenYxSrHRt4x4cLj4kUbgxZh
z6YPHHEh4sfSqpNLsD+9vTDligUXegO/aOxYir258kqF6QQu7Kp8UlkVgD2I
LkjDhXBx0NAzIdjnSTkGKy58PrM36Uco9lSyXcOGC+KSa3ZOMdhN5Hbac2GE
eeqB7Vuw17u83ZDmyIV47etmCluxFcZ+7lGayoX0Txsex23DPjmQ9Mhc4GuU
XTspwzZdIrXfwAXe/Xqxyy7semq2smUWF7b1cLK/78Veff/36K45XPjuPdA4
7wD27/MKRevmc2F6ze8D/w5jH00dZMNZSP3/Dro55pzFttw0lJoyU8+T/p7e
S1ewH5M02f+48OFw1intG9h+9AcXLtx28tspvIvdTbYbLOfCOv9wg/Im7DTy
63hx4WnK0ymvPmCPpTfkcMG/SD+E/wm7ksQV+nGhwbYmqaYVm44zWMmFWdPO
qRm1YZPVXtsgLqRE+wUVsLH3HvTNuRbMhUNzjQd4cLEN6EAy6nl4Ym7Y3Ild
6kMK+lD9ybD56051Y5Nq8qPXcSG/99LXhl5spikJdKXa484NH6fIv0YmuxGH
RlI/f+j3n52K2PRx+E1cuPpwvNUiFWx6uTyGC+wvt60GDMSeVZ3L2xvLhYR4
y2zlQdgfC89u6t/Khan5K6M6h2BHpxf9jkvgQuaKixtsdbDJaZlvO7iw+4K1
Yqwe9jk/UhGXC5VHbBPu6GM7078QF4rFudPBBLvRvHZs8D4urDg4z7HXFJtO
a9pPjRf1omz7Sdjy9AcrLthlHk/bPRn7xOf26jcHuTD67ePSc07Y1o/5rosP
c6GFWd+nNxW7jhznzqDaU0P2zFvTsIPJcm8WF346jjm8eg52X+wAYWU2Fw74
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
hPPhfz8vJvZfNe9Aog==
       "], {{{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1fOfFwYYB/DvZdu+bNs2L7su6y7btm1ri1tuDFs2t7jVFrbcUFu979UP
7+f5/AEPgkPDQ8IiBQKBIDYpEXlrxkBgo7yBLfJ6fR1rWcNqVrGSFSxnGUtZ
wmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCYxnHGMZw2hGMZIRDGcYQxnC
YAYxkAH0px996UNvwgmjFz3pQXe60ZUudKYTHelAKO1pR1va0JpWtKQFzWlG
U5rQmEY0JIQG1KcedalDbWpRkxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcY
RSlCYQpRkALkJx95yUNucpGTHGQnG1nJQmYykZFgMpCedKQlDalJRUpSkJxk
JCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJRFDQp2H9oP3Pf7znHf/yD3/z
F295w2te8ZIXPOcZf/IHT3nCYx7xO7/xkAf8yi/c5x53ucNtbvEzP3GTG1zn
Gle5wmUucZELnOccZznDaU5xkhP8yA8c5xhHOcL3fMe3fMPXfMVhDnGQA+xn
H3vZw5d8wW52sZMdbGcbn/NZxN6zhc0Rt4CNbGA961jLGlazipWsYDnLWMoS
FrOIhSxgPvOYyxxmM4uZzGA605jKFCYziYlMYDzjGMsYRjOKkYxgOMMYyhAG
M4iBDKA//ehLH3oTThi96EkPutONrnShM53oSAdCaU872tKG1rSiJS1oTjOa
0oTGNKIhITSgPvWoSx1qU4ua1KA61ahKFSpTiYpUoDzlKEsZSlOKkpSgOMUo
ShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpMJryAQTAbSk460pCE1qUhJCpKT
jKQkITGJSEgC4hOPuMQhNrGISQyiE42oRCEyHwEAg7pA
            
            "]]]}, {}, {}, {}, {}, {}, {}, {}, 
         {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2lMQILqyBdAztm3btm3btm3btm3btm3b9p23pt7HqlQq37s6SXeChu0q
tg3433//BeBS8P9f/+0DEZggBCUYjv8LQUhCEZowhCUc4YlARCIRmShEJRrR
iUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJ
QU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alB
TWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFP
etGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxm
MZs5zGUe81nAQhaxmCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnax
mz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGb
O9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs/
/I+//At/AAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jE
IS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQh
L/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu
9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/9
6M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOY
zwIWsojFrFAMLgf//9p0kQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nD
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACEZAA/LvI/XWh+x9/+M0v
fvKD73zjK1/4zCc+8oH3vOMtb3jNK17yguc84ylPeMwjHvKA+9zjLne4zS1u
coPrXOMqV7jMJS5ygfOc4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnay
g+1sYytb2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD
6UxjKlOYzCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS960oPu
dKMrXehMJzrSgfa0oy1taE0rWtKC5jSjKU1oTCMa0oD61KMudahNLWpSg+pU
oypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShMIQpSgPzkIy95yE0ucpKD7GQj
K1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwiEpKA+MQjLnGITSxiEoPoRCMq
UYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCACEoB/j7m/HnX/4w+/+cVPfvCd
b3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1r
XOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1s
ZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxl
CpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKUL
nelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqV
qURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJ
REYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUKkYlE
RCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8O9D528Q+ecPv/nFT37wnW985Quf
+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCda1zlCpe5
xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1tbGULm9nE
RjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqTmcRE
JjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSlC53pREc6
0J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1qVKUKlalERSpQ
nnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCe
dKQlDalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJREQiEJ5w
hCUMoQlFSEIQnGAEJQiBCURAAvDvU/dvYPnnD7/5xU9+8J1vfOULn/nERz7w
nne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCe
c5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZxEY2sJ51
rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGM
ZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URHOtCedrSl
Da1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSlCpWpREUqUJ5ylKUM
pSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCULmclERjKQnnSkJQ2p
SUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqRiUREIhCecIQlDKEJ
RUhCEJxgBCUIgQlEQALwr7HzN5D884ff/OInP/jON77yhc984iMfeM873vKG
17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4zznOcobT
nOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWs
YiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0Yxi
JCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSiIx1oTzva0obWtKIl
LWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQl
KE4xilKEwhSiIAXITz7ykofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhO
MIIShMAEIiAB+Nfc/RtQ/vnDb37xkx985xtf+cJnPvGRD7znHW95w2te8ZIX
POcZT3nCYx7xkAfc5x53ucNtbnGTG1znGle5wmUucZELnOccZznDaU5xkhMc
5xhHOcJhDnGQA+xnH3vZw252sZMdbGcbW9nCZjaxkQ2sZx1rWcNqVrGSFSxn
GUtZwmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCYxnHGMZw2hGMZIRDGcY
QxnCYAYxkAH0px996UNvetGTHnSnG13pQmc60ZEOtKcd/wYH2tCaVrSkBc1p
RlOa0JhGNKQB9alHXepQm1rUpAbVqUZVqlCZSlSkAuUpR1nKUJpSlKQExSlG
UYpQmEIUpAD5yUde8pCbXOQkB9nJRlaykJlMZCQD6UlHWtKQmlSkJAXJSUZS
kpCYRCQkAfGJR1ziEJtYxCQG0YlGVKIQmUhEJALhCUdYwhCaUIQkBMEJRlCC
EJhABCQA/wY8/gaQf/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nG
U57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZR
jnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaz8169kOcv4
P5xoeSU=
            "]]]}, {}, {}, {}, {}, {}, 
         {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
          None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwk2kMMIFqQQNG2bdu2bdu2bdu2bdu2bdu2+/ecmVmcpJaVSm7e5iVs1L5S
u0ABAgQISKCEAQIsN6xgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7yH//+
79DuTSACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThrb8byjt6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85T/+ESCw/glE
YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURi
kpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGK
UJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQ
lGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCU
YQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRl
LGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc
5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzzn
BS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCX//hHgCD6JxCBCUJQghGc
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
qEsdalOLmtSgOtWoShUqU4mKVKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nI
Sx5yk4uc5CA72chKFjKTiYxkID3pSEsaUpOKlKQgOclIShISk4iEJCA+8YhL
HGITi5jEIDrRiEoUIhOJiEQgPOEISxhCE4qQhCA4wQhKEAITiIAE4F9CbwB/
+cNvfvGTH3znG1/5wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5
w21ucZMbXOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nD
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQuCE//+nJiAB+JdA//zlD7/5
xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nF
TW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVO
drCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxm
MJ1pTGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQ
nW50pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCd
alSlCpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1s
ZCULmclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhE
JQqRiUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL77++csffvOLn/zgO9/4
yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub3OA617jK
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
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACEZAA/Iupf/7yh9/84ic/
+M43vvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4
zjWucoXLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jO
Nrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40
pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH3vSiJz3oTje6
0oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa1KImNahONapS
hcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zkIic5yE42spKF
zGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQiJjGITjSiEoXI
RCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F0P//OUPv/nFT37wnW985Quf
+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCda1zlCpe5
xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1tbGULm9nE
RjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqTmcRE
JjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSlC53pREc6
0J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1qVKUKlalERSpQ
nnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCe
dKQlDalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJREQiEJ5w
hCUMoQlFSEIQnGAEJQiBCURAAvAvuv75yx9+84uf/OA73/jKFz7ziY984D3v
eMsbXvOKl7zgOc94yhMe84iHPOA+97jLHW5zi5vc4DrXuMoVLnOJi1zgPOc4
yxlOc4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2s4mNbGA961jL
GlazipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYziYlMYDzjGMsY
RjOKkYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJjnSgPe1oSxta
04qWtKA5zWhKExrTiIY0oD71qEsdalOLmtSgOtWoShUqU4mKVKA85ShLGUpT
ipKUoDjFKEoRClOIghQgP/nISx5yk4uc5CA72chKFjKTiYxkID3pSEsaUpOK
lKQgOclIShISk4iEJCA+8YhLHGITi5jEIDrRiEoUIhOJiEQgPOEISxhCE4qQ
hCA4wQhKEAITiIAE4F80/fOXP/zmFz/5wXe+8ZUvfOYTH/nAe97xlje85hUv
ecFznvGUJzzmEQ95wH3ucZc73OYWN7nBda5xlStc5hIXucB5znGWM5zmFCc5
wXGOcZQjHOYQBznAfvaxlz3sZhc72cF2trGVLWxmExvZwHrWsZY1rGYVK1nB
cpaxlCUsZhELWcB85jGXOcxmFjOZwXSmMZUpTGYSE5nAeMYxljGMZhQjGcFw
hjGUIQxmEAMZQH/60Zc+9KYXPelBd7rRlS50phMd6UB72tGWNrSmFS1pQXOa
0ZQmNKYRDWlAfepRlzrUphY1qUF1qlGVKlSmEhWpQHnKUZYylKYUJSlBcYpR
lCIUphAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclAetKRljSkJhUpSUFykpGU
JCQmEQlJQHziEZc4xCYWMYlBdKIRlShEJhIRiUB4whGWMIQmFCEJQXCCEZQg
BCYQAQnAv6j65y9/+M0vfvKD73zjK1/4zCc+8oH3vOMtb3jNK17yguc84ylP
eMwjHvKA+9zjLne4zS1ucoPrXOMqV7jMJS5ygfOc4yxnOM0pTnKC4xzjKEc4
zCEOcoD97GMve9jNLnayg+1sYytb2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jM
IhaygPnMYy5zmM0sZjKD6UxjKlOYzCQmMoHxjGMsYxjNKEYyguEMYyhDGMwg
BjKA/vSjL33oTS960oPudKMrXehMJzrSgfa0oy1taE0rWtKC5jSjKU1oTCMa
0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShMIQpS
gPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwiEpKA
+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCACEoB/
UfTPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nGU57wmEc85AH3
ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZRjnCYQxzkAPvZ
x172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKWsJhFLGQB85nH
XOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYwmEEMZAD96Udf
+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCYRjSkAfWpR13q
UJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQ
m1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCb
WMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQkAP8i65+//OE3
v/jJD77zja984TOf+MgH3vOOt7zhNa94yQue84ynPOExj3jIA+5zj7vc4Ta3
uMkNrnONq1zhMpe4yAXOc46znOE0pzjJCY5zjKMc4TCHOMgB9rOPvexhN7vY
yQ62s42tbGEzm9jIBtazjrWsYTWrWMkKlrOMpSxhMYtYyALmM4+5zGE2s5jJ
DKYzjalMYTKTmMgExjOOsYxhNKMYyQiGM4yhDGEwgxjIAPrTj770oTe96EkP
utONrnShM53oSAfa0462tKE1rWhJC5rTjKY0oTGNaEgD6lOPutShNrWoSQ2q
U42qVKEylahIBcpTjrKUoTSlKEkJilOMohShMIUoSAHyk4+85CE3uchJDrKT
jaxkITOZyEgG0pOOtKQhNalISQqSk4ykJCExiUhIAuITj7jEITaxiEkMohON
qEQhMpGISATCE46whCE0oQhJCIITjKAEITCBCEgA/kXSP3/5w29+8ZMffOcb
X/nCZz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc5xpX
ucJlLnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNudrGTHWxnG1vZ
wmY2sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xmMZMZTGcaU5nC
ZCYxkQmMZxxjGcNoRjGSEQxnGEMZwmAGMZAB9KcffelDb3rRkx50pxtd6UJn
OtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbUpx51qUNtalGTGlSnGlWpQmUq
UZEKlKccZSlDaUpRkhIUpxhFKUJhClGQAuQnH3nJQ25ykZMcZCcbWclCZjKR
kQykJx1pSUNqUpGSFCQnGUlJQmISkZAExCcecYlDbGIRkxhEJxpRiUJkIhGR
CIQnHGEJQ2hCEZIQBCcYQQlCYAIRkAD8i6h//vKH3/ziJz/4zje+8oXPfOIj
H3jPO97yhte84iUveM4znvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iIX
OM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42trKFzWxiIxtY
zzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSmMoXJTGIiExjP
OMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rShc50oiMdaE87
2tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKFylSiIhUoTznK
UobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXMZCIjGUhPOtKS
htSkIiUpSE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchEIiIRCE84whKG
0IQiJCEITjCCEoTABCIgAfgXQf/85Q+/+cVPfvCdb3zlC5/5xEc+8J53vOUN
r3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUKl7nERS5wnnOc5Qyn
OcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub2cRGNrCedaxlDatZ
xUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZxEQmMJ5xjGUMoxnF
SEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKULnelERzrQnna0pQ2taUVL
WtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCecpSlDKUpRUlK
UJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50pCUNqUlFSlKQ
nGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUKkYlERCIQnnCEJQyhCUVIQhCc
YAQlCIEJREAC8C+8/vnLH37zi5/84Dvf+MoXPvOJj3zgPe94yxte84qXvOA5
z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA85zjLGU5zipOc4DjH
OMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaziY1sYD3rWMsaVrOKlaxgOctY
yhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJiUxgPOMYyxhGM4qRjGA4wxjK
EAYziIEMoD/96EsfetOLnvSgO93oShc604mOdKA97WhLG1rTipa0oDnNaEoT
GtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpUoDzlKEsZSlOKkpSgOMUoShEK
U4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQgPelISxpSk4qUpCA5yUhKEhKT
iIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA84QhLGEITipCEIDjBCEoQAhOI
gATgXzj985c//OYXP/nBd77xlS985hMf+cB73vGWN7zmFS95wXOe8ZQnPOYR
D3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnOcZYznOYUJznBcY5xlCMc5hAH
OcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetaxljWsZhUrWcFylrGUJSxmEQtZ
wHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGWMYxmFCMZwXCGMZQhDGYQAxlA
f/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2tKYVLWlBc5rRlCY0phENaUB9
6lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKUphQlKUFxilGUIhSmEAUpQH7y
kZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQmFSlJQXKSkZQkJCYRCUlAfOIR
lzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYUIQlBcIIRlCAEJhABCcC/sPrn
L3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0rXvKC5zzjKU94zCMe8oD73OMu
d7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy97
2M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOY
zSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehN
L3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51qE0t
alKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5y
koPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhNLGIS
g+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQhMIAISgH9h9M9f/vCbX/zk
B9/5xle+8JlPfOQD73nHW97wmle85AXPecZTnvCYRzzkAfe5x13ucJtb3OQG
17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvawm13sZAfb
2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpawmEUsZAHzmcdc5jCbWcxkBtOZ
xlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCYQQxkAP3pR1/60Jte9KQH3elG
V7rQmU50pAPtaUdb2tCaVrSkBc1pRlOa0JhGNKQB9alHXepQm1rUpAbVqUZV
qlCZSlSkAuUpR1nKUJpSlKQExSlGUYpQmEIUpAD5yUde8pCbXOQkB9nJRlay
kJlMZCQD6UlHWtKQmlSkJAXJSUZSkpCYRCQkAfGJR1ziEJtYxCQG0YlGVKIQ
mUhEJALhCUdYwhCaUIQkBMEJRlCCEJhABCQA/0Lrn7/84Te/+MkPvvONr3zh
M5/4yAfe8463vOE1r3jJC57zjKc84TGPeMgD7nOPu9zhNre4yQ2uc42rXOEy
l7jIBc5zjrOc4TSnOMkJjnOMoxzhMIc4yAH2s4+97GE3u9jJDrazja1sYTOb
2MgG1rOOtaxhNatYyQqWs4ylLGExi1jIAuYzj7nMYTazmMkMpjONqUxhMpOY
yATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN73oSQ+6042udKEznehI
B9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJDapTjapUoTKVqEgF
ylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkOspONrGQhM5nISAbS
k460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyiE42oRCEykYhIBMIT
jrCEITShCEkIghOMoAQhMIEISAD+hdI/f/nDb37xkx985xtf+cJnPvGRD7zn
HW95w2te8ZIXPOcZT3nCYx7xkAfc5x53ucNtbnGTG1znGle5wmUucZELnOcc
ZznDaU5xkhMc5xhHOcJhDnGQA+xnH3vZw252sZMdbGcbW9nCZjaxkQ2sZx1r
WcNqVrGSFSxnGUtZwmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCYxnHGMZ
w2hGMZIRDGcYQxnCYAYxkAH0px996UNvetGTHnSnG13pQmc60ZEOtKcdbWlD
a1rRkhY0pxlNaUJjGtGQBtSnHnWpQ21qUZMaVKcaValCZSpRkQqUpxxlKUNp
SlGSEhSnGEUpQmEKUZAC5CcfeclDbnKRkxxkJxtZyUJmMpGRDKQnHWlJQ2pS
kZIUJCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJQmQiEZEIhCccYQlDaEIR
khAEJxhBCUJgAhGQAPwLqX/+8off/OInP/jON77yhc984iMfeM873vKG17zi
JS94zjOe8oTHPOIhD7jPPe5y538apoctIAAAAGDZtm3btm3btm3btm3btm3b
vdphnzBuc4ub3OA617jKFS5ziYtc4DznOMsZTnOKk5zgOMc4yhEOc4iDHGA/
+9jLHnazi53sYDvb2MoWNrOJjWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7z
mMscZjOLmcxgOtOYyhQmM4mJTGA84xjLGEYzipGMYDjDGMoQBjOIgQygP/3o
Sx9604ue9KA73ehKFzrTiY50oD3taEsbWtOKlrSgOc1oShMa04iGNKA+9ahL
HWpTi5rUoDrVqEoVKlOJilSgPOUoSxlKU4qSlKA4xShKEQpTiIIUID/5yEse
cpOLnOQgO9nIShYyk4mMZCA96UhLGlKTipSkIDnJSEoSEpOIhCQgPvGISxxi
E4uYxCA60YhKFCITiYhEIDzhCEsYQhOKkIQgOMEIShACE4iABOBfCP/5yx9+
84uf/OA73/jKFz7ziY984D3veMsbXvOKl7zgOc94yhMe84iHPOA+97jLHW5z
i5vc4DrXuMp/sJS6gQ==
            "]]]}, {}, {}}, {{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], Thickness[Tiny], LineBox[CompressedData["
1:eJwV1WVjEAQUBdDRDaM7xujubhhsNKMbRufo7o7BqNHdpWASShqkEkoqqTQG
oWAQZx/Ovb/gvRsUERk+ME5AQMA2EdtxiUd8EpCQRCQmCUlJRnJSkJJUBJKa
NKQlHenJQEYykZksZCUb2clBTnIRRG6CyUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQwh1qUcoYdSnAQ1pRGOa0JRmhNOc
FrSkFa1pQ1va0Z4OdKQTnelCVyLoRnd60JNe9KYPfelHfwYwkEgGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zCWKecwnmgUsZBGLWUIM
S1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7OYDPmQPe/mIj/mET/mM
z9nHfg5wkC/4kkMc5ghHOcZxvuJrvuFbTnCSU5zmDGf5ju85x3kucJEf+JFL
XOYKV7nGdX7iZ25wk1vc5g53+YVfucd9HvCQRzzmCU/5jd/5gz95xnNe8JK/
+JtXvOYf/uU//ucNb3lH7PHHIS7xiE8CEpKIxCQhKclITgpSkopAUpOGtKQj
PRnISCYyk4WsZCM7OchJLoLITTB5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShL
OcpTgYpUojJVqEo1qlODmtSiNnUIoS71CCWM+jSgIY1oTBOa0oxwmtOClrSi
NW1oSzva04GOdKIzXehKBN3oTg960ove9KEv/ejPAGKfdySDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5hLFPOYTzQIWsojFLCGGpSxj
OStYySpWs4a1rGM9G9jIJjazwxhs0Vt5D0KNuXM=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], Thickness[Tiny], LineBox[CompressedData["
1:eJwl2EOsIAqURdHXZdu2bdu2bdv6Zdu2bdu2bduuXp0erOSMb7InN2Gj9pXa
/U9AQEC64AEBy4zlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9
HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s8
4CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/vLv/w4d
KCDgfwhEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jE
JwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSn
AAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcB
DWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl378R38G
MJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nHfBaw
kEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+DnCQ
QxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e8JBH
POYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHQGD9E4jA
BCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQk
ISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhSh
KMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEp
zWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/fiP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8o+AIPonEIEJQlCCEZwQ
hCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSk
JBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQV
rWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/68R/9GcBABjGYIQxlGMMZwUhG
MZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlax
mjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGa
M5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3
vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlHwFB9U8gAhOEoAQjOCEISShCE4aw
hCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSk
Iz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSj
PBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2tKM9
HehIJzrTha50ozs96EkvetOHvvTjP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjG
M4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtaz
gY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOB
i1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GP
fOIzX/jKN77zg5/84jd/+Ms/AoLpn0AEJghBCUZwQhCSUIQmDGEJR3giEJFI
RCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxk
JgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSm
ClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYL
XelGd3rQk170pg996cd/9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSm
MJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZraw
lW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCV
a1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVv
fOcHP/nFb/7wl38EBNc/gQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3o
xCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSBv///3B6MpCRTGQmC1nJ
RnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValG
dWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3
etCTXvSmD33px3/0ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlM
ZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxn
BzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcG
N7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/
+cVv/vCXfwSE0D+BCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICax
iE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahN
HepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f
+tKP/+jPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nM
YS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exh
L/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy/wv3GTCpA==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], Thickness[Tiny], LineBox[CompressedData["
1:eJwt3LOiIIqCAMHzxrZt27Zt27Zt27Zt2/Yd27a5FWxQn9BpJ2zUvlK7/wUE
BFyJGRDwX4iAgKtc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84e//CMgZEDA/whEYIIQlGAEJwQhCUVowhCW
cIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0
pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKU
pwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSn
Ax3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcC
E5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb
2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5
xGWu8B9XucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCR
T3zmC1/5xnd+8JNf/OYPf/lHQCj9E4jABCEowQhOCEISitCEISzhCE8EIhKJ
yEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonM
ZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpU
oSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznSh
K93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq
05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb
2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhP65y
jevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvKN
7/zgJ7/4zR/+8o+A0PonEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJ/XOUa17nBTW5x
mzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb
P/zlHwFh9E8gAhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOH
uMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e8
5CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rU
oz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSj
PwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+
C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8H
OMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhf+4yjWuc4Ob3OI2d7jLPe7z
gIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Ms/AsLq
n0AEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQ
RCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBC
FKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0
pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxm
CEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJ
S1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghH
OcZxTnCSU5zmDGc5x3kucJFLXOYK/3GVa1znBje5xW3ucJd73OcBD3nEY57w
lGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38EhNM/gQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBX+4yrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17y
ite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv/wgIr38CEZggBCUYwQlBSEIR
mjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGa
NKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy
lKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0
pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxl
HOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd
69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5Rzn
ucBFLnGZK/zHVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97x
ng985BOf+cJXvvGdH/zkF7/5w1/+ERBB/wQiMEEISjCCE4KQhCI0YQhLOMIT
gYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOB
jGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GK
VKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50
ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIz
W9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJX
+I+rXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7z
ha984zs/+MkvfvOHv/wjIKL+CURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQ
lWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCV
bGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVq
VKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50
pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxn
BjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcH
O9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnOcJZznOcCF7nEZa7wH1e5xnVu
cJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+8JFPfOYLX/nGd37w
k1/85g9/+UdAJP0TiMAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGIS
i9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova
1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970
oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxh
LvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv
+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOE/rnKN69zgJre4zR3u
co/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7y
j4DI+icQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIR
nwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGf
AhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8G
NKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wn9c5RrXucFNbnGbO9zlHvd5wEMe
8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//OUfAVH0TyAC
E4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKT
hKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOE
ohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04Sm
NKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEM
YzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxj
OStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOF/7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe
84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4yz8CouqfQAQmCEEJRnBC
EJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQ
klSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCS
UpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJW
tKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD33pR38GMJBBDGYIQxnGcEYwklGM
ZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxm
DWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYM
ZznHeS5wkUtc5gr/cZVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve
8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXfwRE0z+BCEwQghKM4IQgJKEITRjC
Eo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKS
jvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO
8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFM
YCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9Wxg
I5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAi
l7jMFf7jKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+
8onPfOEr3/jOD37yi9/84S//CIiufwIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlM
ZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxl
G9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUucZkr/MdV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/4REEP/BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSi
E4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKT
g5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlOD
mtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe
9KI3fehLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nM
YjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexi
N3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMlf4j6tc4zo3uMkt
bnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4yS9+
84e//CMgpv4JRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSnBz3pRW/60Jd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucTlmP///+Aq17jODW5yi9vc4S73
uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL3/zhL/8I
iKV/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmSv8x1WucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQW/8EIjBB
CEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlI
SjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShK
MYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojFNaEoz
mtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd96Es/+jOAgQxiMEMYyjCG
M4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CFLGIxS1jKMpaz
gpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOC
k5ziNGc4yznOc4GLXOIyV/iPq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh7/8IyCO/glEYIIQlGAEJwQh
CUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJ
RWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlF
acpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr
2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjG
MJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFataw
lnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCW
c5znAhe5xGWu8B9XucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1v
ecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHQFz9E4jABCEowQhOCEISitCEISzh
CE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelI
TwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShP
BSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8H
OtKJznShK93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQm
MonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjay
ic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJ
y1zhP65yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf
+MwXvvKN7/zgJ7/4zR/+8o+AePonEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKR
iUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJ
QlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalC
VapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJX
utGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSm
MZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVrax
nR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJ/XOUa
17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf
+cFPfvGbP/zlHwHx9U8gAhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzox
iEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznI
SS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJ
LWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96Ekv
etOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxm
M4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnaz
h73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhf+4yjWuc4Ob3OI2
d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/
+Ms/AhLon0AEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/
BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wW
sJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5w
kEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYK/3GVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38EJNQ/
gQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJ
SEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUo
TBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhM
E5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQ
hjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKW
sozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5y
jOOc4CSnOM0ZznKO81zgIpe4zBX+4yrXuM4NbnKL29zhLve4zwMe8ojHPOEp
z3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv/whIpH8CEZggBCUY
wQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJ
SUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUp
QUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlB
S1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFI
RjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwf8B
VCz6fw==
           "]]}}}], {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
dtOQ779PH/wPcS+qIw==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
n4O3lG34rCj8bzxxZTS83T//H2Dtrws=
        "]]}}}, InsetBox[
     TemplateBox[{"1","1.1`","1.5`"},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                StyleBox[
                "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \
\\(2\\)]\\)/\[Beta]\"", {
                  Directive[18, FontFamily -> "Helvetica", 
                   GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> 
                 False]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           Directive[18, FontFamily -> "Helvetica", 
            GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> False], 
         Background -> GrayLevel[1], RoundingRadius -> 5, ContentPadding -> 
         True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
         Thickness[0.01], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.4]"],
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0.4], Editable -> False, Selectable -> False]}], 
               "]"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]\""}],
            ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Background", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> GrayLevel[0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
               Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[1], Editable -> False, Selectable -> False]}]}], 
         "]"}]& )], Scaled[{0.85, 0.35}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-0.8971050695975981, 0},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Exp[
        Part[#, 1]], 
       Part[#, 2]}& ), "CopiedValueFunction" -> ({
       Exp[
        Part[#, 1]], 
       Part[#, 2]}& )},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox[
      "\"Time (years)\"", 22, FontFamily -> "Helvetica", StripOnInput -> 
       False], TraditionalForm], 
     FormBox[
      StyleBox[
      "\"CDF\"", 22, FontFamily -> "Helvetica", StripOnInput -> False], 
      TraditionalForm]},
   FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
      Automatic, Automatic}, {{{-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
           NumberForm[#, {
             DirectedInfinity[1], 1.}]& ], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.916290731874155, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.791759469228055, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.995732273553991, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.0943445622221, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.248495242049359, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.382026634673881, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.499809670330265, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.298317366548036, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.703782474656201, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.991464547107982, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.214608098422191, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.396929655216146, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.551080335043404, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.684611727667927, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.802394763324311, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}, {{-0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0., 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {3.912023005428146, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {4.605170185988092, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.916290731874155, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.791759469228055, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {2.995732273553991, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.0943445622221, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.248495242049359, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.382026634673881, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {4.499809670330265, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.298317366548036, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.703782474656201, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {5.991464547107982, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.214608098422191, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.396929655216146, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.551080335043404, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.684611727667927, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.802394763324311, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}}],
   FrameTicksStyle->Directive[16, FontFamily -> "Helvetica"],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->400,
   Method->{},
   PlotRange->{{-0.8086631531122442, 4.8516195019504}, {0, 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}], Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, 
        GraphicsComplex[CompressedData["
1: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
Q3aqP0yQKH3b+C2NGPNpfzDy8wsy/EotdfZ4jM0Rf/gaoij1posa821/MLB6
bm9ZSy0pr/W32tcfDurtN5AqpMZ83B+GxA6YPk+jXsunsXn1b3/4EC1+1MKC
GvP1AHipdKY8+wr1muYDd+6qBsDDRWcayg9SYz4fAEKrbdsX7qJeE7GPlfEF
wPzW2M8v51Njvh8AUf1TW8aPo5aw3j0q0hYA0rWb9qX9TSXGeiAQNp86s/DA
H+rVx3YqXlofCGNlciZmN1JjvRAIK4e6hCdWUYuvUTVLtgiETbWq/atKqLGe
CISQVb+qM3Op2dnAzJJAUO5o2jyNg7HeCIQE6/uN7zKpxUoVx+kv+QSOmXGd
G+OpsR75BL5vfwv+86YW85XfEnnpE2jqueeOdaHGeuUTPOI74MZjS73yltzD
yUmfwLxcfuZ9M2qsZz6ByJMJneeNqGf6zGv2nxwEOwPXt8icpsZ6Jwi8Rcre
F2hTO/G5mh9aGwSfJ32y+n2YGuuhIAgb1l7XeYha4KbQ0hGNIGi+ainbKkmN
9VIQRF9y5uFZQe3U/CLF+14Q2BzaVKskTI31VBAsjFFYVT+HesZuQb29PkFQ
t3ZVkLogNdZbQdA6ba2xLTe1Y4TThN95QbBbnkthyxRqrMeCIMBc8evZvynE
/CIzvN/+ZP35hSUZZ7qosV4LhnOv1CMWtlI7WNtv27EgGA4n+CjPLKfGei4Y
9nTm2BtmUfN9520f2BoM16brP1+UTI31XjDY1GhKuHyhtj9mZ+lqHAya70/V
G0VSYz0YDGML1v/UCqLmYxLqYFgVbn/giR811ovBMOXW0LHFHPx0jU1G9+dg
kGz9bqXhS431ZDDMnVP9zPMF9fSXkw2ftQSD3Ngly6QfUGO9GQxzeCQXX71D
/YTLcoo8dwisqIpZd9SYGuvREOiS6p6spEfNe26CX6t0CGj+NZIt06bGejUE
QgzTRCwPUz8pNd/55GgIyK5cYbpalRrr2RC4p+9YFjyHmge4ujeYh8C3LINb
GjOpsd4NgRLT7LOTZ1Db+d63rfcLgY7tH+9K8lNjPRwC3D9PzpD7nUzMPWN0
lVVRCOjtP9bW20aN9XIISMxXGR2XRf341p2ctUMhIHBx/IrYYGqsp0Nh3QOX
ly7Pqae1/j1XuSgUvpVwX8q5QY31digscJIffa9HbbvnJs+DHaEQmX78+Y7T
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
BUZx349x9QaKI9S4b4sDiTW7t3/+RR2nxgtc4oBOXKB50rhCYtzHxYHlrjp/
70tRtwssFMxL4EDMsP7H5/8w7uvigLPFsooDMtQTazUkn6VyIFNnqmufLDXu
8+LA9ZnZj/+bTb2aH/jNfT5+79Tbo0SN+744cDtZSzFEmdrS4iDczeHA1Tbf
W8cXUuM+MA68NpUq11Klvr2cNzHJAal3rrFWi6hxXxj394ntjbyylLpyNO+C
woHvFeWiUsupcZ8Y93rtrdivtpL6Z52vo3M1B472HLbzW02N+8a495N20uI/
dKnn89cNcZ+PMyG+p9ZT4z4yDjTs/u3paEBtxI8r4t4P3rOOVd1BjfvKOPDy
/luDhN3UV/ntjhyosZk3MGxCjfvMOOAVLNZkZkadOaaqageHAzamNreibalx
3xn3/XIy6Mk2O+o+7peNDb3c3+d4z51R56hxHxr37/npjDO/LlLPiOz7sqbv
/+i673iuvj8O4NlSMpLQIMlIyx6pd3uprxKyQspoiCSSNkmUIpEGTZKGpIFS
GgppUDTx2RulKKV+99zPn+/P7/vf8/Hw6Mu9555z7j3nvF/t8Haqi2VoMrY0
L60dukOa0vpSsRfSH4Sp57Gs69bgo9jSPDVqvN89/EyxDMc7qY00/d4OP9Ku
M+/mYkvz1trh7I4vTtYnsclu3BG/qOfZ68yLb8XY0jy2dritGfVI8wY2mU1p
/m2HZ03xrv+VYkvz2hjAOmpvwLiNPfCsk7eSAgMaZ9dcG1yOLc1zY4DrMibb
7T6200ZyxSgvfV6/rApbmvfGALfh+1cmPMBeSx+IZcCj2l2fLzVgS/PgGCA4
uPpl9ktsOs5IiwFzoyZ9W9eCLc2LY0CT1uMJVu+x6dNuugyYaJRzeGgrtjRP
jgFZ4kFFS9uwf5HtlCMYIDS3K5/JxJbmzTEgdKRV1AsZtog6/vqxEQMCH+tN
kxdjS/PoGJCz0uxERRe2zzTyRs2Al1H3oq2+Ykvz6hgwLu7Dhv4f2AfUSCAA
A+KHDWnJ+octzbNjQOyYXONS5cfI5S3PBp+fzACVWyOWyqlgS/PuGGC899Ls
9kHYggstRsdtGVDWtmizyVBsaR4eA4bv7LI8KcP69IDGAF+NNwZ/ZVial8cA
gysvMjwnYi+E3gV7pzOgP+vcyB0yLM3TY0B60qSAjdbY8YNVVsbNZsD1PqNZ
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
gipUe1rhEjn2Bvaf18rh+j85sOKBYmRyBXbWHRLYyIFF6UsDLtzDnpCnu31I
PzVf5XdOWfUZ+0nSaOUD/6j+brVqjQcH248OvObCFpNIiwoedveySQY7Fbmg
pbgp4rcAO82RvBFxoW3Qnf5WMTbZzbR5IBe+6Cnr/enArlQiJz64cM7Vskr/
N/Zy8ZJZ4UO4UNbUHj1A/hUyXc5CkwsLhu9+O0QBm97uMpQLTSKvVXEjsenH
YRgXcgqnz5Afi01227vrcSHgyH+Nk8Zj03GCBlxI0ki+UueETccNjOKCkn/o
8ffO2HQ5QkMunBd/WXFpGvbQMWRGxQVGQ+NinenYxSrHRt4x4cLj4kUbgxZh
z6YPHHEh4sfSqpNLsD+9vTDligUXegO/aOxYir258kqF6QQu7Kp8UlkVgD2I
LkjDhXBx0NAzIdjnSTkGKy58PrM36Uco9lSyXcOGC+KSa3ZOMdhN5Hbac2GE
eeqB7Vuw17u83ZDmyIV47etmCluxFcZ+7lGayoX0Txsex23DPjmQ9Mhc4GuU
XTspwzZdIrXfwAXe/Xqxyy7semq2smUWF7b1cLK/78Veff/36K45XPjuPdA4
7wD27/MKRevmc2F6ze8D/w5jH00dZMNZSP3/Dro55pzFttw0lJoyU8+T/p7e
S1ewH5M02f+48OFw1intG9h+9AcXLtx28tspvIvdTbYbLOfCOv9wg/Im7DTy
63hx4WnK0ymvPmCPpTfkcMG/SD+E/wm7ksQV+nGhwbYmqaYVm44zWMmFWdPO
qRm1YZPVXtsgLqRE+wUVsLH3HvTNuRbMhUNzjQd4cLEN6EAy6nl4Ym7Y3Ild
6kMK+lD9ybD56051Y5Nq8qPXcSG/99LXhl5spikJdKXa484NH6fIv0YmuxGH
RlI/f+j3n52K2PRx+E1cuPpwvNUiFWx6uTyGC+wvt60GDMSeVZ3L2xvLhYR4
y2zlQdgfC89u6t/Khan5K6M6h2BHpxf9jkvgQuaKixtsdbDJaZlvO7iw+4K1
Yqwe9jk/UhGXC5VHbBPu6GM7078QF4rFudPBBLvRvHZs8D4urDg4z7HXFJtO
a9pPjRf1omz7Sdjy9AcrLthlHk/bPRn7xOf26jcHuTD67ePSc07Y1o/5rosP
c6GFWd+nNxW7jhznzqDaU0P2zFvTsIPJcm8WF346jjm8eg52X+wAYWU2Fw74
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
hPPhfz8vJvZfNe9Aog==
         "], {{{}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwl1fOfFwYYB/DvZdu+bNs2L7su6y7btm1ri1tuDFs2t7jVFrbcUFu979UP
7+f5/AEPgkPDQ8IiBQKBIDYpEXlrxkBgo7yBLfJ6fR1rWcNqVrGSFSxnGUtZ
wmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCYxnHGMZw2hGMZIRDGcYQxnC
YAYxkAH0px996UNvwgmjFz3pQXe60ZUudKYTHelAKO1pR1va0JpWtKQFzWlG
U5rQmEY0JIQG1KcedalDbWpRkxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcY
RSlCYQpRkALkJx95yUNucpGTHGQnG1nJQmYykZFgMpCedKQlDalJRUpSkJxk
JCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJRFDQp2H9oP3Pf7znHf/yD3/z
F295w2te8ZIXPOcZf/IHT3nCYx7xO7/xkAf8yi/c5x53ucNtbvEzP3GTG1zn
Gle5wmUucZELnOccZznDaU5xkhP8yA8c5xhHOcL3fMe3fMPXfMVhDnGQA+xn
H3vZw5d8wW52sZMdbGcbn/NZxN6zhc0Rt4CNbGA961jLGlazipWsYDnLWMoS
FrOIhSxgPvOYyxxmM4uZzGA605jKFCYziYlMYDzjGMsYRjOKkYxgOMMYyhAG
M4iBDKA//ehLH3oTThi96EkPutONrnShM53oSAdCaU872tKG1rSiJS1oTjOa
0oTGNKIhITSgPvWoSx1qU4ua1KA61ahKFSpTiYpUoDzlKEsZSlOKkpSgOMUo
ShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpMJryAQTAbSk460pCE1qUhJCpKT
jKQkITGJSEgC4hOPuMQhNrGISQyiE42oRCEyHwEAg7pA
               
               "]]}]}, {}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             Opacity[0.2]], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwl2lMQILqyBdAztm3btm3btm3btm3btm3b9p23pt7HqlQq37s6SXeChu0q
tg3433//BeBS8P9f/+0DEZggBCUYjv8LQUhCEZowhCUc4YlARCIRmShEJRrR
iUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJ
QU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alB
TWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFP
etGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxm
MZs5zGUe81nAQhaxmCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnax
mz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGb
O9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs/
/I+//At/AAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jE
IS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQh
L/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu
9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/9
6M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOY
zwIWsojFrFAMLgf//9p0kQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nD
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACEZAA/LvI/XWh+x9/+M0v
fvKD73zjK1/4zCc+8oH3vOMtb3jNK17yguc84ylPeMwjHvKA+9zjLne4zS1u
coPrXOMqV7jMJS5ygfOc4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnay
g+1sYytb2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD
6UxjKlOYzCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS960oPu
dKMrXehMJzrSgfa0oy1taE0rWtKC5jSjKU1oTCMa0oD61KMudahNLWpSg+pU
oypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShMIQpSgPzkIy95yE0ucpKD7GQj
K1nITCYykoH0pCMtaUhNKlKSguQkIylJSEwiEpKA+MQjLnGITSxiEoPoRCMq
UYhMJCISgfCEIyxhCE0oQhKC4AQjKEEITCACEoB/j7m/HnX/4w+/+cVPfvCd
b3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1r
XOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1s
ZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxl
CpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKUL
nelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqV
qURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJ
REYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUKkYlE
RCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8O9D528Q+ecPv/nFT37wnW985Quf
+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCda1zlCpe5
xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1tbGULm9nE
RjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqTmcRE
JjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSlC53pREc6
0J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1qVKUKlalERSpQ
nnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCe
dKQlDalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJREQiEJ5w
hCUMoQlFSEIQnGAEJQiBCURAAvDvU/dvYPnnD7/5xU9+8J1vfOULn/nERz7w
nne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCe
c5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZxEY2sJ51
rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGM
ZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URHOtCedrSl
Da1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSlCpWpREUqUJ5ylKUM
pSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCULmclERjKQnnSkJQ2p
SUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqRiUREIhCecIQlDKEJ
RUhCEJxgBCUIgQlEQALwr7HzN5D884ff/OInP/jON77yhc984iMfeM873vKG
17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4zznOcobT
nOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jPOtayhtWs
YiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84xjKG0Yxi
JCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSiIx1oTzva0obWtKIl
LWhOM5rShMY0oiENqE896lKH2tSiJjWoTjWqUoXKVKIiFShPOcpShtKUoiQl
KE4xilKEwhSiIAXITz7ykofc5CInOchONrKShcxkIiMZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIiYxiE40ohKFyEQiIhEITzjCEobQhCIkIQhO
MIIShMAEIiAB+Nfc/RtQ/vnDb37xkx985xtf+cJnPvGRD7znHW95w2te8ZIX
POcZT3nCYx7xkAfc5x53ucNtbnGTG1znGle5wmUucZELnOccZznDaU5xkhMc
5xhHOcJhDnGQA+xnH3vZw252sZMdbGcbW9nCZjaxkQ2sZx1rWcNqVrGSFSxn
GUtZwmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCYxnHGMZw2hGMZIRDGcY
QxnCYAYxkAH0px996UNvetGTHnSnG13pQmc60ZEOtKcd/wYH2tCaVrSkBc1p
RlOa0JhGNKQB9alHXepQm1rUpAbVqUZVqlCZSlSkAuUpR1nKUJpSlKQExSlG
UYpQmEIUpAD5yUde8pCbXOQkB9nJRlaykJlMZCQD6UlHWtKQmlSkJAXJSUZS
kpCYRCQkAfGJR1ziEJtYxCQG0YlGVKIQmUhEJALhCUdYwhCaUIQkBMEJRlCC
EJhABCQA/wY8/gaQf/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nG
U57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZR
jnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaz8169kOcv4
P5xoeSU=
               "]]}]}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             Opacity[0.2]], 
            GraphicsGroup[{
              Polygon[CompressedData["
1:eJwk2kMMIFqQQNG2bdu2bdu2bdu2bdu2bdu2+/ecmVmcpJaVSm7e5iVs1L5S
u0ABAgQISKCEAQIsN6xgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7yH//+
79DuTSACE4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+
CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8F
KEghClOEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1o
SCMa04SmNKM5LWhJK1rThrb8byjt6UBHOtGZLnSlG93pQU960Zs+9KUf/RnA
QAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBC
FrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEO
cZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7x
mCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85T/+ESCw/glE
YIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURi
kpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGK
UJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQ
lGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCU
YQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRl
LGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc
5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzzn
BS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCX//hHgCD6JxCBCUJQghGc
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
qEsdalOLmtSgOtWoShUqU4mKVKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nI
Sx5yk4uc5CA72chKFjKTiYxkID3pSEsaUpOKlKQgOclIShISk4iEJCA+8YhL
HGITi5jEIDrRiEoUIhOJiEQgPOEISxhCE4qQhCA4wQhKEAITiIAE4F9CbwB/
+cNvfvGTH3znG1/5wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5
w21ucZMbXOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nD
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQuCE//+nJiAB+JdA//zlD7/5
xU9+8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nF
TW5wnWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVO
drCdbWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxm
MJ1pTGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQ
nW50pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCd
alSlCpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1s
ZCULmclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhE
JQqRiUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL77++csffvOLn/zgO9/4
yhc+84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub3OA617jK
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
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJSUJiEpGQBMQnHnGJQ2xiEZMY
RCcaUYlCZCIRkQiEJxxhCUNoQhGSEAQnGEEJQmACEZAA/Iupf/7yh9/84ic/
+M43vvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4
zjWucoXLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jO
Nrayhc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40
pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH3vSiJz3oTje6
0oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa1KImNahONapS
hcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zkIic5yE42spKF
zGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQiJjGITjSiEoXI
RCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F0P//OUPv/nFT37wnW985Quf
+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCda1zlCpe5
xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1tbGULm9nE
RjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqTmcRE
JjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSlC53pREc6
0J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1qVKUKlalERSpQ
nnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCe
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
i5vc4DrXuMp/sJS6gQ==
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny]], 
            Line[CompressedData["
1:eJwV1WVjEAQUBdDRDaM7xujubhhsNKMbRufo7o7BqNHdpWASShqkEkoqqTQG
oWAQZx/Ovb/gvRsUERk+ME5AQMA2EdtxiUd8EpCQRCQmCUlJRnJSkJJUBJKa
NKQlHenJQEYykZksZCUb2clBTnIRRG6CyUNe8pGfAhSkEIUpQlGKUZwSlKQU
pSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQwh1qUcoYdSnAQ1pRGOa0JRmhNOc
FrSkFa1pQ1va0Z4OdKQTnelCVyLoRnd60JNe9KYPfelHfwYwkEgGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zCWKecwnmgUsZBGLWUIM
S1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7OYDPmQPe/mIj/mET/mM
z9nHfg5wkC/4kkMc5ghHOcZxvuJrvuFbTnCSU5zmDGf5ju85x3kucJEf+JFL
XOYKV7nGdX7iZ25wk1vc5g53+YVfucd9HvCQRzzmCU/5jd/5gz95xnNe8JK/
+JtXvOYf/uU//ucNb3lH7PHHIS7xiE8CEpKIxCQhKclITgpSkopAUpOGtKQj
PRnISCYyk4WsZCM7OchJLoLITTB5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShL
OcpTgYpUojJVqEo1qlODmtSiNnUIoS71CCWM+jSgIY1oTBOa0oxwmtOClrSi
NW1oSzva04GOdKIzXehKBN3oTg960ove9KEv/ejPAGKfdySDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5hLFPOYTzQIWsojFLCGGpSxj
OStYySpWs4a1rGM9G9jIJjazwxhs0Vt5D0KNuXM=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny]], 
            Line[CompressedData["
1:eJwl2EOsIAqURdHXZdu2bdu2bdv6Zdu2bdu2bduuXp0erOSMb7InN2Gj9pXa
/U9AQEC64AEBy4zlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9
HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s8
4CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f/vLv/w4d
KCDgfwhEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jE
JwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSn
AAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcB
DWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl378R38G
MJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nHfBaw
kEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+DnCQ
QxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e8JBH
POYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHQGD9E4jA
BCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQk
ISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhSh
KMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEp
zWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/fiP/gxgIIMYzBCG
MozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+8o+AIPonEIEJQlCCEZwQ
hCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSk
JBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSk
FKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQV
rWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/68R/9GcBABjGYIQxlGMMZwUhG
MZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlax
mjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGa
M5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3
vOUd7/nARz7xmS985Rvf+cFPfvGbP/zlHwFB9U8gAhOEoAQjOCEISShCE4aw
hCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSk
Iz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSj
PBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2tKM9
HehIJzrTha50ozs96EkvetOHvvTjP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjG
M4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtaz
gY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOB
i1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GP
fOIzX/jKN77zg5/84jd/+Ms/AoLpn0AEJghBCUZwQhCSUIQmDGEJR3giEJFI
RCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxk
JgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSm
ClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYL
XelGd3rQk170pg996cd/9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSm
MJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZraw
lW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCV
a1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVv
fOcHP/nFb/7wl38EBNc/gQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3o
xCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSBv///3B6MpCRTGQmC1nJ
RnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValG
dWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3
etCTXvSmD33px3/0ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlM
ZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxn
BzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcG
N7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/
+cVv/vCXfwSE0D+BCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICax
iE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahN
HepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f
+tKP/+jPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nM
YS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exh
L/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy/wv3GTCpA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[Tiny]], 
            Line[CompressedData["
1:eJwt3LOiIIqCAMHzxrZt27Zt27Zt27Zt2/Yd27a5FWxQn9BpJ2zUvlK7/wUE
BFyJGRDwX4iAgKtc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84e//CMgZEDA/whEYIIQlGAEJwQhCUVowhCW
cIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0
pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKU
pwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSn
Ax3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcC
E5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb
2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5
xGWu8B9XucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCR
T3zmC1/5xnd+8JNf/OYPf/lHQCj9E4jABCEowQhOCEISitCEISzhCE8EIhKJ
yEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonM
ZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpU
oSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznSh
K93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq
05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb
2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhP65y
jevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvKN
7/zgJ7/4zR/+8o+A0PonEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGd
GMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c
5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrU
pBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSk
F73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQW
s5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe7
2cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJ/XOUa17nBTW5x
mzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb
P/zlHwFh9E8gAhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOH
uMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e8
5CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rU
oz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSj
PwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+
C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8H
OMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhf+4yjWuc4Ob3OI2d7jLPe7z
gIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+Ms/AsLq
n0AEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQ
RCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBC
FKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0
pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxm
CEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJ
S1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghH
OcZxTnCSU5zmDGc5x3kucJFLXOYK/3GVa1znBje5xW3ucJd73OcBD3nEY57w
lGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38EhNM/gQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBX+4yrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17y
ite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv/wgIr38CEZggBCUYwQlBSEIR
mjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGa
NKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoy
lKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0
pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxl
HOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd
69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5Rzn
ucBFLnGZK/zHVa5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97x
ng985BOf+cJXvvGdH/zkF7/5w1/+ERBB/wQiMEEISjCCE4KQhCI0YQhLOMIT
gYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOB
jGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GK
VKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50
ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIz
W9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJX
+I+rXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7z
ha984zs/+MkvfvOHv/wjIKL+CURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQ
lWhEJwYxiUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCV
bGQnBznJRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVq
VKcGNalFbepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50
pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxn
BjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcH
O9nFbvawl33s5wAHOcRhjnCUYxznBCc5xWnOcJZznOcCF7nEZa7wH1e5xnVu
cJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW95x3s+8JFPfOYLX/nGd37w
k1/85g9/+UdAJP0TiMAEISjBCE4IQhKK0IQhLOEITwQiEonIRCEq0YhODGIS
i9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL
3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova
1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970
oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxh
LvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv
+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOE/rnKN69zgJre4zR3u
co/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7y
j4DI+icQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIR
nwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGf
AhSkEIUpQlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8G
NKQRjWlCU5rRnBa0pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxk
EYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQ
hznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wn9c5RrXucFNbnGbO9zlHvd5wEMe
8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5wU9+8Zs//OUfAVH0TyAC
E4SgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKT
hKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOE
ohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04Sm
NKM5LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEM
YzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxj
OStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4
JzjJKU5zhrOc4zwXuMglLnOF/7jKNa5zg5vc4jZ3uMs97vOAhzziMU94yjOe
84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4yz8CouqfQAQmCEEJRnBC
EJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQ
klSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCS
UpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa0JJW
tKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD33pR38GMJBBDGYIQxnGcEYwklGM
ZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxm
DWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYM
ZznHeS5wkUtc5gr/cZVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve
8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXfwRE0z+BCEwQghKM4IQgJKEITRjC
Eo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKS
jvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO
8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFM
YCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9Wxg
I5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAi
l7jMFf7jKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+
8onPfOEr3/jOD37yi9/84S//CIiufwIRmCAEJRjBCUFIQhGaMIQlHOGJQEQi
EZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKR
mSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlM
ZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxl
G9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUucZkr/MdV
rnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe85BWvecNb3vGeD3zkE5/5wle+
8Z0f/OQXv/nDX/4REEP/BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSi
E4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKT
g5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlOD
mtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe
9KI3fehLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nM
YjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexi
N3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMlf4j6tc4zo3uMkt
bnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4yS9+
84e//CMgpv4JRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURkohCVaEQnBjGJRWzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVsZCcHOclFbvKQ
l3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpUpwY1qUVt6lCX
etSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCVbnSnBz3pRW/60Jd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucTlmP///+Aq17jODW5yi9vc4S73
uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL3/zhL/8I
iKV/AhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAG
MZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhax
mCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGY
IxzlGMc5wUlOcZoznOUc57nARS5xmSv8x1WucZ0b3OQWt7nDXe5xnwc85BGP
ecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQW/8EIjBB
CEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlI
SjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShK
MYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojFNaEoz
mtOClrSiNW1oSzva04GOdKIzXehKN7rTg570ojd96Es/+jOAgQxiMEMYyjCG
M4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOYyzzms4CFLGIxS1jKMpaz
gpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOC
k5ziNGc4yznOc4GLXOIyV/iPq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkv
eMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh7/8IyCO/glEYIIQlGAEJwQh
CUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJ
RWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlF
acpQlnKUpwIVqURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr
2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjG
MJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFataw
lnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCW
c5znAhe5xGWu8B9XucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1v
ecd7PvCRT3zmC1/5xnd+8JNf/OYPf/lHQFz9E4jABCEowQhOCEISitCEISzh
CE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelI
TwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShP
BSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8H
OtKJznShK93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQm
MonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjay
ic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJ
y1zhP65yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf
+MwXvvKN7/zgJ7/4zR/+8o+AePonEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKR
iUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJ
QlaykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalC
VapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa0ZwWtKQVrWlDW9rRng50pBOd6UJX
utGdHvSkF73pQ1/60Z8BDGQQgxnCUIYxnBGMZBSjGcNYxjGeCUxkEpOZwlSm
MZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVrax
nR3sZBe72cNe9rGfAxzkEIc5wlGOcZwTnOQUpznDWc5xngtc5BKXucJ/XOUa
17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf
+cFPfvGbP/zlHwHx9U8gAhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzox
iEksYhOHuMQjPglISCISk4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznI
SS5yk4e85CM/BShIIQpThKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJ
LWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96Ekv
etOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxm
M4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnaz
h73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhf+4yjWuc4Ob3OI2
d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/
+Ms/AhLon0AEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/
BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wW
sJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5w
kEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYK/3GVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl38EJNQ/
gQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJ
SEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUo
TBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhM
E5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQ
hjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKW
sozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5y
jOOc4CSnOM0ZznKO81zgIpe4zBX+4yrXuM4NbnKL29zhLve4zwMe8ojHPOEp
z3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/OEv/whIpH8CEZggBCUY
wQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJ
SUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5KUBBClGYIhSlGMUp
QUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlB
S1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFI
RjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwf8B
VCz6fw==
             "]]}}}], {}}}, {{{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
dtOQ779PH/wPcS+qIw==
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
n4O3lG34rCj8bzxxZTS83T//H2Dtrws=
          "]]}}}}, {
     Frame -> True, FrameTicksStyle -> 
      Directive[16, FontFamily -> "Helvetica"], FrameLabel -> {
        Style["Time (years)", 22, FontFamily -> "Helvetica"], 
        Style["CDF", 22, FontFamily -> "Helvetica"]}, ImageSize -> 400, 
      DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {-0.8971050695975981, 0}, 
      PlotRange -> {{-0.8086631531122442, 4.8516195019504}, {0, 1.}}, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {-0.8971050695975981, 0}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, 
      PlotRange -> {{-0.8086631531122442, 4.8516195019504}, {0, 1.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {1, 1.1, 1.5}, LegendMarkers -> None, 
       LabelStyle -> Directive[18, FontFamily -> "Helvetica", 
         GrayLevel[0.4]], LegendFunction -> "Frame", LegendLabel -> 
       "\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]", LegendLayout -> 
       "Column", Background -> GrayLevel[1]]], 
     Scaled[{0.85, 0.35}], Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.711964897675804*^9, 3.711964948102633*^9}, {
   3.7119650445190783`*^9, 3.711965060666795*^9}, {3.711965128691737*^9, 
   3.711965134599368*^9}, {3.711965195802165*^9, 3.711965217586404*^9}, 
   3.71196544265447*^9, 3.711965573372754*^9, {3.711969562354658*^9, 
   3.711969604294072*^9}, {3.711969648829726*^9, 3.7119696581806793`*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4. Clonal dominance in man", "Chapter",
 CellChangeTimes->{{3.695588645175877*^9, 3.695588659541484*^9}, {
  3.695707692135887*^9, 3.695707692503851*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.6955890897629538`*^9, 3.695589090800853*^9}}],

Cell[CellGroupData[{

Cell["Parameter defintions", "Subsection",
 CellChangeTimes->{{3.6955894927407713`*^9, 3.695589497804264*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paramFunc", "[", 
   RowBox[{
   "\[Section]\[ScriptCapitalN]_", ",", "\[Section]\[ScriptL]_", ",", 
    "\[Section]\[Beta]_", ",", "\[Section]\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "\[Section]\[ScriptCapitalN]"}], 
     ",", 
     RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
     RowBox[{"nStar", "\[Rule]", "\[Section]nStar"}], ",", 
     RowBox[{"\[ScriptCapitalS]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "\[Section]\[Beta]"}], ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", "\[Section]\[ScriptL]"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", 
      FractionBox[
       RowBox[{"\[Section]\[Beta]", " ", "\[Section]nStar"}], 
       "\[Section]sStar"]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{
       FractionBox["\[Section]sStar", 
        RowBox[{"\[Section]\[ScriptL]", " ", "\[Section]nStar"}]], "-", 
       "\[Section]\[Beta]"}]}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "\[Section]\[ScriptL]"], "-", 
         FractionBox[
          RowBox[{"\[Section]\[Beta]", " ", "\[Section]nStar"}], 
          "\[Section]sStar"]}], ")"}], 
       FractionBox["\[Section]\[ScriptCapitalN]", 
        RowBox[{"\[Section]\[ScriptCapitalN]", "-", "\[Section]nStar"}]]}]}], 
     ",", 
     RowBox[{"\[Epsilon]", "\[Rule]", "\[Section]\[Epsilon]"}], ",", 
     RowBox[{"\[Gamma]\[Beta]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Gamma]\[Delta]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]d", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Gamma]a", "\[Rule]", "0"}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Section]sStar", "\[Rule]", 
      RowBox[{"0.01", "\[Section]\[ScriptCapitalN]"}]}], ",", 
     RowBox[{"\[Section]nStar", "\[Rule]", 
      RowBox[{"0.99", "\[Section]\[ScriptCapitalN]"}]}]}], "}"}]}]}]], "Input",\

 CellChangeTimes->{{3.677307197501821*^9, 3.6773072432914267`*^9}, {
  3.677310717751606*^9, 3.677310789044224*^9}, {3.677330574617743*^9, 
  3.6773305825373774`*^9}, {3.677408378027923*^9, 3.6774083809541483`*^9}, {
  3.6856943011248693`*^9, 3.685694301660049*^9}, {3.685694885616394*^9, 
  3.68569501059559*^9}, {3.6856950527855988`*^9, 3.6856951082236147`*^9}, {
  3.685695162949751*^9, 3.685695172272966*^9}, {3.685695218523745*^9, 
  3.685695255106802*^9}, {3.686375971738752*^9, 3.6863760218009367`*^9}, {
  3.6955895150223*^9, 3.695589515788673*^9}, {3.6955896280958233`*^9, 
  3.6955896323264017`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Analytical results", "Subsection",
 CellChangeTimes->{{3.695588617015256*^9, 3.69558861988592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getZ0", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "z0", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"z0", "=", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"a", 
          FractionBox[
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
           "\[ScriptCapitalN]"]}], 
         RowBox[{"\[Delta]", "+", 
          RowBox[{"a", 
           FractionBox[
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
            "\[ScriptCapitalN]"]}]}]], 
        FractionBox["1", "\[ScriptCapitalN]"]}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "z0", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.668841539600287*^9, 3.668841561906837*^9}, {
   3.668841616682199*^9, 3.668841619345768*^9}, {3.668841746797442*^9, 
   3.668841752108912*^9}, 3.66884188208971*^9, {3.668842044618889*^9, 
   3.668842049849934*^9}, {3.6688420839213943`*^9, 3.6688422549568567`*^9}, {
   3.67749076451233*^9, 3.677490781687209*^9}, {3.677490828637987*^9, 
   3.677490828927264*^9}, {3.677490875829639*^9, 3.6774908779562693`*^9}, {
   3.677490928098897*^9, 3.677490968104032*^9}, {3.677492918547641*^9, 
   3.6774929346022387`*^9}, {3.695584308088787*^9, 3.6955843251507587`*^9}, {
   3.695584381989959*^9, 3.695584398074939*^9}, {3.695584451565102*^9, 
   3.6955845298680887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalProb", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "prob"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"prob", "=", 
        FractionBox["z0", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"prob", "=", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
             "\[Xi]"}], "]"}]}]], ")"}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695586504409417*^9, 3.6955866467615223`*^9}, {
   3.695586702077282*^9, 3.695586720452691*^9}, {3.711889333614003*^9, 
   3.711889368398201*^9}, 3.7118895614805183`*^9, {3.711889593406344*^9, 
   3.711889678475431*^9}, {3.7118897960392103`*^9, 3.7118899657300158`*^9}, {
   3.71189003902357*^9, 3.7118900407838087`*^9}, {3.711890092901648*^9, 
   3.711890164562224*^9}, {3.711890203186524*^9, 3.711890261958644*^9}, 
   3.711890297310302*^9, 3.7118903452206783`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalTime", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "time"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Sigma]"}], ")"}], "z0"}], 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]], 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}]}]}], ")"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Section]\[ScriptCapitalN]", 
                RowBox[{" ", 
                 RowBox[{
                 "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", 
                  "\[Xi]"}]}]]}], 
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                  "1"}], ")"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "-", 
                   
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"2", "\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                   "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "-", 
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[Section]\[ScriptCapitalN]", 
               RowBox[{
               "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", "\[Xi]"}]], 
              
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                   "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], "]"}],
                   "-", "1"}], ")"}], " "}]], 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                   "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", "1"}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "+", 
                   
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], 
                    "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}], 
                    " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "-", 
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Xi]", " ", "\[Sigma]"}], 
                    "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Sigma]"}], "]"}], "-", 
                   RowBox[{"Log", "[", "\[Sigma]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"time", "/", "365.25"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69558468484597*^9, 3.695584718769825*^9}, {
   3.6955848037398043`*^9, 3.695584899448827*^9}, {3.695584955617128*^9, 
   3.695584980574943*^9}, {3.6955852085987377`*^9, 3.6955852577202473`*^9}, {
   3.6955852985182047`*^9, 3.6955854012801228`*^9}, {3.695585492999866*^9, 
   3.695585494576703*^9}, {3.6955855448124933`*^9, 3.6955855695475492`*^9}, {
   3.6955856712545137`*^9, 3.695585707584066*^9}, 3.695585763156383*^9, {
   3.6955858753117113`*^9, 3.695585879204714*^9}, {3.71179422580057*^9, 
   3.7117942529755573`*^9}, {3.7117943741420517`*^9, 3.711794375703191*^9}, {
   3.711794414425766*^9, 3.711794435872561*^9}, {3.7117976755762863`*^9, 
   3.7117977025990257`*^9}, {3.711797775887155*^9, 3.71179777938892*^9}, 
   3.711798326498131*^9, {3.711798520250523*^9, 3.711798530086753*^9}, {
   3.7118026866630583`*^9, 3.711802713019799*^9}, {3.711802966435885*^9, 
   3.7118029825063972`*^9}, {3.711890362280406*^9, 3.711890510761325*^9}, 
   3.7118906265092897`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"variance", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "sec", ",", "var", ",", "sol", ",", 
      "\[CapitalDelta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "1"}], "]"}], "-", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}]}], ")"}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "\[Sigma]"}], "]"}], "-", " ", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
                  RowBox[{"Log", "[", 
                   FractionBox["\[Xi]", 
                    RowBox[{"\[Xi]", "-", "z0"}]], "]"}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Sigma]"}], "]"}]}], "-", "1"}], 
                ")"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{"Requires", " ", "numerical", " ", "solution", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "here", " ", "we", " ", "solve", " ", "the", " ", "first", " ", 
            "and", " ", "second", " ", "moments"}], ",", " ", 
           RowBox[{"because", " ", "we", " ", "can"}]}], ")"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", 
         SuperscriptBox["10.", 
          RowBox[{"-", "12"}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Move", " ", "away", " ", "from", " ", "the", " ", "singular", " ", 
           
           RowBox[{"boundaries", ".", " ", "Not"}], " ", "perfect"}], ",", 
          " ", 
          RowBox[{"but", " ", "good", " ", "enough"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]1", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Section]\[ScriptCapitalN]", 
                  RowBox[{"\[ScriptCapitalB]", " ", "z", 
                   RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
                FractionBox[
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]2", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", "2"}], 
                FractionBox["\[Section]\[ScriptCapitalN]", 
                 RowBox[{"\[ScriptCapitalB]", " ", "z", 
                  RowBox[{"(", 
                   RowBox[{"\[Xi]", "-", "z"}], ")"}]}]], 
                RowBox[{"\[Theta]1", "[", "z", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "z", "]"}], ",", 
              RowBox[{"\[Theta]2", "[", "z", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", "\[CapitalDelta]", ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}]}], "}"}], 
            ",", 
            RowBox[{"MaxSteps", "\[Rule]", "100000"}]}], "]"}], "//", 
          "First"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sec", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "z", "]"}], "/.", "sol"}], ")"}], "/", 
            FractionBox[
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                "\[Xi]"}], "]"}]}]]}], ")"}], "/.", 
          RowBox[{"z", "\[Rule]", "z0"}]}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"var", "=", 
      RowBox[{
       FractionBox["sec", 
        SuperscriptBox["365.25", "2"]], "-", 
       SuperscriptBox[
        RowBox[{"conditionalTime", "[", 
         RowBox[{"z0", ",", "\[Sigma]", ",", "params"}], "]"}], "2"]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "var", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711446478802761*^9, 3.7114465828170633`*^9}, {
   3.711446738841564*^9, 3.711446754720251*^9}, {3.711446813086996*^9, 
   3.71144690628032*^9}, {3.711446950281795*^9, 3.711446957173641*^9}, {
   3.711446993336164*^9, 3.711447046956019*^9}, 3.7114472068375797`*^9, {
   3.711451969649268*^9, 3.711452022357366*^9}, {3.711452256222262*^9, 
   3.711452300180933*^9}, {3.711453174625086*^9, 3.711453183174818*^9}, {
   3.711691724516521*^9, 3.7116917550179987`*^9}, {3.7116917981043873`*^9, 
   3.711691841087152*^9}, {3.711791758524539*^9, 3.711791795956662*^9}, {
   3.711791832882471*^9, 3.71179184631597*^9}, {3.711791893385562*^9, 
   3.71179194199135*^9}, {3.711791980213264*^9, 3.711791982429175*^9}, {
   3.71179206230791*^9, 3.711792076293066*^9}, {3.711797868947214*^9, 
   3.711797871207541*^9}, {3.711797992683066*^9, 3.7117980978311787`*^9}, {
   3.711798133473428*^9, 3.711798136936211*^9}, 3.711798555304923*^9, {
   3.711798599536109*^9, 3.7117986057742977`*^9}, {3.711798649531909*^9, 
   3.71179870357178*^9}, {3.711798840278583*^9, 3.7117988601097317`*^9}, {
   3.7117997785339823`*^9, 3.711799820412499*^9}, {3.711799857445311*^9, 
   3.711799863227083*^9}, 3.711801078316558*^9, {3.711801184759046*^9, 
   3.7118011875418673`*^9}, {3.711801543986307*^9, 3.7118015820914717`*^9}, 
   3.711802735430949*^9, 3.711802995694175*^9, {3.7118031064862633`*^9, 
   3.711803110825198*^9}, {3.711803145124913*^9, 3.711803145300867*^9}, {
   3.7118033282869062`*^9, 3.711803353764391*^9}, {3.7118033937330112`*^9, 
   3.711803394187455*^9}, {3.711803519943961*^9, 3.7118035203192873`*^9}, {
   3.71180355765485*^9, 3.711803558062118*^9}, {3.7118064756926928`*^9, 
   3.7118065668481092`*^9}, {3.711806621895279*^9, 3.711806752579093*^9}, {
   3.711806804063676*^9, 3.711806804246913*^9}, {3.711806953941045*^9, 
   3.7118069827051773`*^9}, {3.711807325335123*^9, 3.71180735507304*^9}, {
   3.711863849056623*^9, 3.71186384956861*^9}, {3.711864018088746*^9, 
   3.711864034290105*^9}, {3.711865004863596*^9, 3.711865005817881*^9}, {
   3.7118652527947893`*^9, 3.711865252882113*^9}, 3.711865445012985*^9, {
   3.71186580456024*^9, 3.7118658051587563`*^9}, {3.711865921834813*^9, 
   3.711865923354885*^9}, {3.7118659856665983`*^9, 3.711866002594029*^9}, {
   3.7118906077837353`*^9, 3.7118907092501287`*^9}, {3.7118907685173903`*^9, 
   3.7118908465632257`*^9}, 3.711945341668536*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Section",
 CellChangeTimes->{{3.6955888715976963`*^9, 3.6955888852985*^9}}],

Cell[CellGroupData[{

Cell["Left panel: time to 4% clonality while varying N", "Subsection",
 CellChangeTimes->{{3.6955889835676126`*^9, 3.695589018132989*^9}, {
  3.697178782677712*^9, 3.697178794356946*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "parameters"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Section]\[Section]\[ScriptL]", "=", 
     FractionBox["60.", "1440."]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Section]\[Section]\[Beta]", "=", 
     FractionBox["1.", 
      RowBox[{"40.", "\[Times]", "7."}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Section]\[Section]\[Sigma]", "=", "0.04"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalN]Vals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10.", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "9", ",", "0.05"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalN]", "=", 
     RowBox[{"Length", "[", "\[ScriptCapitalN]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramFunc", "[", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           "\[Section]\[Section]\[ScriptL]", ",", 
           "\[Section]\[Section]\[Beta]", ",", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   
   RowBox[{"(*", 
    RowBox[{"paramFunc", "[", 
     RowBox[{
     "\[ScriptCapitalN]", ",", "\[ScriptL]", ",", "\[Beta]", ",", 
      "\[Epsilon]"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6955892735947247`*^9, 3.695589280245528*^9}, {
   3.695589544699678*^9, 3.695589725330764*^9}, {3.695590058083886*^9, 
   3.6955900636680517`*^9}, 3.696155918840119*^9, {3.6961559670672503`*^9, 
   3.696155967179043*^9}, {3.696156068320134*^9, 3.696156085134693*^9}, {
   3.696156427947268*^9, 3.696156428138509*^9}, {3.6961564669373693`*^9, 
   3.696156544206696*^9}, {3.696161469792405*^9, 3.6961615549501762`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Theory", " ", "predictions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"z0Tab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getZ0", "[", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "j"}], "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"timePrediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]", "/.", 
            RowBox[{"params", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
           RowBox[{"conditionalTime", "[", 
            RowBox[{
             RowBox[{"z0Tab", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             "\[Section]\[Section]\[Sigma]", ",", 
             RowBox[{"params", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "variance", " ", "and", " ", "export", " ", "for", " ", 
     "speed"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Comment", " ", "out", " ", "to", " ", "avoid", " ", "costly", " ", 
     "recalculations"}], "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"analyticVariance", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[ScriptCapitalN]", "/.", 
             RowBox[{"params", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
            RowBox[{"conditionalTime", "[", 
             RowBox[{
              RowBox[{"z0Tab", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              "\[Section]\[Section]\[Sigma]", ",", 
              RowBox[{"params", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}], ",", 
            RowBox[{"variance", "[", 
             RowBox[{
              RowBox[{"z0Tab", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              "\[Section]\[Section]\[Sigma]", ",", 
              RowBox[{"params", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";", 
     "\n", 
     RowBox[{"SetDirectory", "@", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<zz-data/clonal-human/variance\>\"", "<>", 
           RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.dat\>\""}], ",", 
          RowBox[{"analyticVariance", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], " ", "]"}], "&"}], ",", 
       RowBox[{"Range", "[", "n\[Epsilon]", "]"}]}], " ", "]"}], ";"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"analyticVariance", "=", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"\"\<zz-data/clonal-human/variance\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.dat\>\""}], "]"}], 
        "&"}], ",", 
       RowBox[{"Range", "[", "n\[Epsilon]", "]"}]}], " ", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6904632692331457`*^9, 3.690463273800323*^9}, {
   3.6904633052638407`*^9, 3.690463309278974*^9}, 3.695589755301725*^9, {
   3.695590066970168*^9, 3.695590072711014*^9}, {3.695590208923634*^9, 
   3.695590256182686*^9}, {3.6961559261253033`*^9, 3.696155995226655*^9}, {
   3.6961560312196217`*^9, 3.696156124253413*^9}, {3.6961561830193443`*^9, 
   3.6961562063064337`*^9}, {3.696156439195855*^9, 3.696156444602887*^9}, {
   3.6961565852052794`*^9, 3.69615659194901*^9}, {3.696161548904463*^9, 
   3.696161550606512*^9}, {3.6961624773864613`*^9, 3.696162484906294*^9}, 
   3.711948487062718*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linePlot", "=", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"timePrediction", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{
                RowBox[{"1", "+", 
                 RowBox[{"\[Epsilon]Vals", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{
            "LegendLabel", "\[Rule]", 
             "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]\>\""}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"ticksSize", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
               RowBox[{"GrayLevel", "[", "0.4", "]"}]}], " ", "]"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "20"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "0.73"}], "}"}], "]"}]}], " ", "]"}]}]}], " ",
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"analyticVariance", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"analyticVariance", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], "-", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"analyticVariance", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], " ", 
                 "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"analyticVariance", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "}"}]}], "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"analyticVariance", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"analyticVariance", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"analyticVariance", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], " ", 
                 "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"analyticVariance", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "}"}]}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
         RowBox[{"FillingStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"myCol", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Opacity", "[", "0.2", "]"}]}], " ", "]"}]}]}], " ", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox["2", 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
          FractionBox["9", 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "90"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"Scaled", "[", "0.02", "]"}]}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Mean time (years)\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", "None"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<System size,  \!\(\*
StyleBox[\"N\",
FontSlant->\"Italic\"]\)\>\"", ",", "labelSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", "None"}],
          "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["x", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              RowBox[{"Superscript", "[", 
               RowBox[{"\"\<10\>\"", ",", "x"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2", ",", "9"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["x", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2", ",", "9"}], "}"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"ticksSize", ",", 
        RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{
         FractionBox["1", "GoldenRatio"], "\[Times]", 
         FractionBox["400", "600"]}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], "/.", "myPlotStyle"}]}]}], "Input",
 CellChangeTimes->{{3.685860653039406*^9, 3.685860654380707*^9}, {
   3.685860694378886*^9, 3.6858607118092813`*^9}, {3.6858613279076977`*^9, 
   3.685861332587285*^9}, {3.685862249584676*^9, 3.6858625121436167`*^9}, {
   3.685862579349402*^9, 3.685862598468575*^9}, {3.685862702545871*^9, 
   3.6858627127125072`*^9}, {3.685863688820616*^9, 3.6858636924178123`*^9}, {
   3.686293076024486*^9, 3.686293078807382*^9}, {3.6863754904924183`*^9, 
   3.6863757423307056`*^9}, {3.686376039592869*^9, 3.686376257840508*^9}, {
   3.686377285709462*^9, 3.686377525460105*^9}, {3.686377563970949*^9, 
   3.686377574154319*^9}, {3.686377642527919*^9, 3.686377646359543*^9}, {
   3.6863778882152967`*^9, 3.6863778923988256`*^9}, {3.6863780270741673`*^9, 
   3.686378193484436*^9}, {3.6863782290437403`*^9, 3.686378294121036*^9}, {
   3.6863785961832867`*^9, 3.686378646460758*^9}, {3.6863791831066427`*^9, 
   3.686379192553739*^9}, {3.686380228805229*^9, 3.6863802397250233`*^9}, {
   3.6864024243395777`*^9, 3.686402428810791*^9}, 3.686402580014575*^9, {
   3.686646642032658*^9, 3.686646662503133*^9}, {3.686648323134224*^9, 
   3.6866483422448883`*^9}, {3.686649145801855*^9, 3.686649206646247*^9}, {
   3.686649267309105*^9, 3.686649273859928*^9}, {3.686649467797632*^9, 
   3.686649541170877*^9}, {3.686649589625564*^9, 3.68664959592067*^9}, {
   3.686649629913076*^9, 3.68664977321183*^9}, {3.6866499462140512`*^9, 
   3.68665002537844*^9}, {3.686650066680772*^9, 3.686650375573316*^9}, {
   3.686650494178249*^9, 3.686650683875194*^9}, {3.686650725530733*^9, 
   3.686650736313149*^9}, {3.686650779840146*^9, 3.686650794878701*^9}, {
   3.686650830757923*^9, 3.686650833103372*^9}, 3.690463337319343*^9, {
   3.690463519425106*^9, 3.690463542655642*^9}, {3.692358643106851*^9, 
   3.692358645753737*^9}, {3.692360346741235*^9, 3.6923603523569202`*^9}, {
   3.695382935983808*^9, 3.695382959513227*^9}, {3.695590303368299*^9, 
   3.695590314964652*^9}, {3.6955903560036*^9, 3.695590385327395*^9}, {
   3.695590475734643*^9, 3.695590478801902*^9}, {3.695590548136286*^9, 
   3.695590567086792*^9}, {3.6955906256161413`*^9, 3.695590706374649*^9}, {
   3.695591063427348*^9, 3.695591083608902*^9}, 3.695649542742794*^9, {
   3.696156300697195*^9, 3.696156328310823*^9}, {3.696156624101235*^9, 
   3.6961566241856117`*^9}, {3.696156655596562*^9, 3.696156765384254*^9}, {
   3.696156795807089*^9, 3.696156830021326*^9}, {3.696156870077898*^9, 
   3.696156880459425*^9}, {3.6961569141241627`*^9, 3.696156958056724*^9}, {
   3.696161760164963*^9, 3.6961617603552628`*^9}, {3.6971792061363173`*^9, 
   3.69717923527952*^9}, {3.7119451664030647`*^9, 3.7119451687637672`*^9}, {
   3.7119452430806627`*^9, 3.7119452432960253`*^9}, 3.711948456339809*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalN]Fix", "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["10", "4"], ",", 
     SuperscriptBox["10", "4"], ",", 
     SuperscriptBox["10", "4"], ",", 
     SuperscriptBox["10", "7"], ",", 
     SuperscriptBox["10", "7"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]Fix", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.0", ",", "1.1", ",", "1.5", ",", "1.1", ",", "1.5"}], "}"}], 
    "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramFix", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"paramFunc", "[", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]Fix", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[Section]\[Section]\[ScriptL]",
        ",", "\[Section]\[Section]\[Beta]", ",", " ", 
       RowBox[{"\[Epsilon]Fix", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[ScriptCapitalN]Fix", "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tRoot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"conditionalTime", "[", 
      RowBox[{
       RowBox[{"getZ0", "[", 
        RowBox[{"paramFix", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
       "\[Section]\[Section]\[Sigma]", ",", 
       RowBox[{"paramFix", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[ScriptCapitalN]Fix", "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examplePlot", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "t"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[ScriptCapitalN]", ",", "t"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[ScriptCapitalN]", ",", 
            RowBox[{"-", "10"}]}], "}"}]}], "}"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t", "\[Rule]", 
           RowBox[{"tRoot", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"\[ScriptCapitalN]", "\[Rule]", 
           RowBox[{"\[ScriptCapitalN]Fix", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[ScriptCapitalN]Fix", "]"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dotted", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], " ", "]"}]}]}], " ", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.685860653039406*^9, 3.685860654380707*^9}, {
   3.685860694378886*^9, 3.6858607118092813`*^9}, {3.6858613279076977`*^9, 
   3.685861332587285*^9}, {3.685862249584676*^9, 3.6858625121436167`*^9}, {
   3.685862579349402*^9, 3.685862598468575*^9}, {3.685862702545871*^9, 
   3.6858627127125072`*^9}, {3.685863688820616*^9, 3.6858636924178123`*^9}, {
   3.686293076024486*^9, 3.686293078807382*^9}, {3.6863754904924183`*^9, 
   3.6863757423307056`*^9}, {3.686376039592869*^9, 3.686376257840508*^9}, {
   3.686377285709462*^9, 3.686377525460105*^9}, {3.686377563970949*^9, 
   3.686377574154319*^9}, {3.686377642527919*^9, 3.686377646359543*^9}, {
   3.6863778882152967`*^9, 3.6863778923988256`*^9}, {3.6863780270741673`*^9, 
   3.686378193484436*^9}, {3.6863782290437403`*^9, 3.686378294121036*^9}, {
   3.6863785961832867`*^9, 3.686378646460758*^9}, {3.6863791831066427`*^9, 
   3.686379192553739*^9}, {3.686380228805229*^9, 3.6863802397250233`*^9}, {
   3.6864024243395777`*^9, 3.686402428810791*^9}, 3.686402580014575*^9, {
   3.686646642032658*^9, 3.686646662503133*^9}, {3.686648323134224*^9, 
   3.6866483422448883`*^9}, {3.686649145801855*^9, 3.686649206646247*^9}, {
   3.686649267309105*^9, 3.686649273859928*^9}, {3.686649467797632*^9, 
   3.686649541170877*^9}, {3.686649589625564*^9, 3.68664959592067*^9}, {
   3.686649629913076*^9, 3.68664977321183*^9}, {3.6866499462140512`*^9, 
   3.68665002537844*^9}, {3.686650066680772*^9, 3.686650375573316*^9}, {
   3.686650494178249*^9, 3.686650683875194*^9}, {3.686650725530733*^9, 
   3.686650736313149*^9}, {3.686650779840146*^9, 3.686650794878701*^9}, {
   3.686650830757923*^9, 3.686650833103372*^9}, 3.690463337319343*^9, {
   3.690463519425106*^9, 3.690463542655642*^9}, {3.692358643106851*^9, 
   3.692358645753737*^9}, {3.692360346741235*^9, 3.6923603523569202`*^9}, {
   3.695382935983808*^9, 3.695382959513227*^9}, {3.695590303368299*^9, 
   3.695590314964652*^9}, {3.6955903560036*^9, 3.695590385327395*^9}, {
   3.695590475734643*^9, 3.695590478801902*^9}, {3.695590548136286*^9, 
   3.695590567086792*^9}, {3.6955906256161413`*^9, 3.695590706374649*^9}, {
   3.695591063427348*^9, 3.695591083608902*^9}, 3.695649542742794*^9, {
   3.696156300697195*^9, 3.696156328310823*^9}, {3.696156624101235*^9, 
   3.6961566241856117`*^9}, {3.696156655596562*^9, 3.696156765384254*^9}, {
   3.696156795807089*^9, 3.696156830021326*^9}, {3.696156870077898*^9, 
   3.696156880459425*^9}, {3.6961569141241627`*^9, 3.6961569301568003`*^9}, {
   3.696156964744255*^9, 3.6961569959188137`*^9}, {3.6961570317666683`*^9, 
   3.696157088339641*^9}, {3.696157125250162*^9, 3.696157304068532*^9}, {
   3.696161570510277*^9, 3.6961616005277243`*^9}, {3.696161653960443*^9, 
   3.69616173400949*^9}}],

Cell[BoxData[
 RowBox[{"leftPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"linePlot", ",", "examplePlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(a)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.696156939849504*^9, 3.6961569495202208`*^9}, {
  3.696157292244528*^9, 3.6961572937083197`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Right panel: time to clonality levels for to values of N", "Subsection",
 CellChangeTimes->{{3.6955889835676126`*^9, 3.695589030108212*^9}, {
  3.697178814525124*^9, 3.697178824867886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "parameters"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Section]\[Section]\[ScriptL]", "=", 
     FractionBox["60.", "1440."]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Section]\[Section]\[Beta]", "=", 
     FractionBox["1.", 
      RowBox[{"40.", "\[Times]", "7."}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalN]Vals", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "4"], ",", 
       SuperscriptBox["10", "7"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalN]", "=", 
     RowBox[{"Length", "[", "\[ScriptCapitalN]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramFunc", "[", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           "\[Section]\[Section]\[ScriptL]", ",", 
           "\[Section]\[Section]\[Beta]", ",", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]Vals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "3"}], ",", "0", ",", "0.01"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z0Tab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getZ0", "[", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "j"}], "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timePrediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{"conditionalTime", "[", 
              RowBox[{
               RowBox[{"z0Tab", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "\[Sigma]", ",", 
               RowBox[{"params", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", "\[Sigma]Vals"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6904626390212917`*^9, 3.690462798673328*^9}, {
   3.690463311431048*^9, 3.690463325948842*^9}, {3.690463552623497*^9, 
   3.690463569214551*^9}, {3.690463608589966*^9, 3.690463608724942*^9}, {
   3.692358680784771*^9, 3.6923586841199017`*^9}, {3.692360041574909*^9, 
   3.692360147674964*^9}, {3.692360245200191*^9, 3.6923602453754053`*^9}, {
   3.692426339244911*^9, 3.6924263392782173`*^9}, 3.692426454987349*^9, {
   3.695590746638335*^9, 3.695590790529025*^9}, {3.696161894078248*^9, 
   3.696161932497436*^9}, {3.6961619647094707`*^9, 3.6961619973153687`*^9}, {
   3.6961620476498117`*^9, 3.696162048407043*^9}, {3.696162389784279*^9, 
   3.696162541500926*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"linePlot", "=", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"timePrediction", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]], ",", 
             SuperscriptBox["10", "0"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "90"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"myCol", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "s"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", 
             RowBox[{"{", 
              RowBox[{"Line", ",", "Dashed"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "s"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"s", ",", 
                 RowBox[{"{", 
                  RowBox[{"Line", ",", "Dashed"}], "}"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Superscript", "[", 
                RowBox[{"\"\<10\>\"", ",", 
                 RowBox[{"Log10", "[", "\[ScriptCapitalN]", "]"}]}], " ", 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[ScriptCapitalN]", ",", "\[ScriptCapitalN]Vals"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "20"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"N\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"ticksSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "*)"}], 
            "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "0.77"}], "}"}], "]"}]}], "]"}]}]}], "]"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"timePrediction", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]], ",", 
             SuperscriptBox["10", "0"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "90"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"myCol", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "s"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", 
             RowBox[{"{", 
              RowBox[{"Line", ",", "Dashed"}], "}"}]}], "}"}]}], "]"}]}]}], 
       " ", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"timePrediction", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]], ",", 
             SuperscriptBox["10", "0"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "90"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"myCol", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", "s"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", 
             RowBox[{"{", 
              RowBox[{"Line", ",", "Dashed"}], "}"}]}], "}"}]}], "]"}]}]}], 
       " ", "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"PlotRangePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.3"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"ticksSize", ",", 
         RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Level of clonality\>\"", ",", "labelSize", ",", 
           RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Mean time (years)\>\"", ",", "labelSize", ",", 
           RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["i", 
                RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"N", "[", 
                  RowBox[{"100", " ", 
                   SuperscriptBox["10", "i"]}], "]"}], "]"}], "<>", 
                "\"\<%\>\""}]}], 
              RowBox[{"(*", 
               RowBox[{"Superscript", "[", 
                RowBox[{"\"\<10\>\"", ",", "i"}], "]"}], "*)"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["i", 
                RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
               "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}]}], "}"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", "]"}],
     "/.", "myPlotStyle"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6904626390212917`*^9, 3.690462798673328*^9}, {
   3.690463311431048*^9, 3.690463325948842*^9}, {3.690463552623497*^9, 
   3.690463569214551*^9}, {3.690463608589966*^9, 3.690463608724942*^9}, {
   3.692358680784771*^9, 3.6923586841199017`*^9}, {3.692360041574909*^9, 
   3.692360147674964*^9}, {3.692360245200191*^9, 3.6923602453754053`*^9}, {
   3.692426339244911*^9, 3.6924263392782173`*^9}, {3.692426454987349*^9, 
   3.6924265142462893`*^9}, {3.695590993365769*^9, 3.695591022292749*^9}, {
   3.6955912315657*^9, 3.695591304404726*^9}, {3.695591365861002*^9, 
   3.695591387732689*^9}, {3.696161956648435*^9, 3.6961619685282907`*^9}, {
   3.696162012941122*^9, 3.6961620140111103`*^9}, {3.6961620679842167`*^9, 
   3.6961621401348057`*^9}, {3.6961622460540733`*^9, 
   3.6961622478994303`*^9}, {3.6961622910046253`*^9, 
   3.6961623393484983`*^9}, {3.696162549701907*^9, 3.6961625911407843`*^9}, {
   3.697178913210877*^9, 3.697179008878406*^9}, {3.697179043526246*^9, 
   3.697179062781006*^9}, {3.6971791069638767`*^9, 3.6971791874092712`*^9}, 
   3.697179244222124*^9}],

Cell[BoxData[
 RowBox[{"rightPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"linePlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(b)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.696156939849504*^9, 3.6961569495202208`*^9}, {
  3.696157292244528*^9, 3.6961572937083197`*^9}, {3.696162302786743*^9, 
  3.696162313736137*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combine left and right panels", "Subsection",
 CellChangeTimes->{{3.695589058230056*^9, 3.695589061948196*^9}, {
   3.6961622699693537`*^9, 3.696162271944592*^9}, 3.697179289661044*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"leftPlot", ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", "pad"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"rightPlot", ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", "pad"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"pad", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"47", ",", "16"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "5"}], "}"}]}], "}"}]}], "}"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Left panel: time to 4% clonality while varying N", "Subsection",
 CellChangeTimes->{{3.6955889835676126`*^9, 3.695589018132989*^9}, {
  3.697178782677712*^9, 3.697178794356946*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "parameters"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Section]\[Section]\[ScriptL]", "=", 
     FractionBox["60.", "1440."]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Section]\[Section]\[Beta]", "=", 
     FractionBox["1.", 
      RowBox[{"40.", "\[Times]", "7."}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Section]\[Section]\[Sigma]", "=", "0.04"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalN]Vals", "=", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", "3"], ",", 
       SuperscriptBox["10", "6"], ",", 
       SuperscriptBox["10", "9"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalN]", "=", 
     RowBox[{"Length", "[", "\[ScriptCapitalN]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.1", ",", "0.5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "\[Epsilon]Vals", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramFunc", "[", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           "\[Section]\[Section]\[ScriptL]", ",", 
           "\[Section]\[Section]\[Beta]", ",", 
           RowBox[{"\[Epsilon]Vals", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"paramFunc", "[", 
      RowBox[{
      "\[ScriptCapitalN]", ",", "\[ScriptL]", ",", "\[Beta]", ",", 
       "\[Epsilon]"}], "]"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6955892735947247`*^9, 3.695589280245528*^9}, {
   3.695589544699678*^9, 3.695589725330764*^9}, {3.695590058083886*^9, 
   3.6955900636680517`*^9}, 3.696155918840119*^9, {3.6961559670672503`*^9, 
   3.696155967179043*^9}, {3.696156068320134*^9, 3.696156085134693*^9}, {
   3.696156427947268*^9, 3.696156428138509*^9}, {3.6961564669373693`*^9, 
   3.696156544206696*^9}, {3.696161469792405*^9, 3.6961615549501762`*^9}, {
   3.711970480255061*^9, 3.7119704804736967`*^9}, {3.711970579691536*^9, 
   3.711970590810173*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Theory", " ", "predictions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"z0Tab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getZ0", "[", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "j"}], "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"prediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"conditionalTime", "[", 
            RowBox[{
             RowBox[{"z0Tab", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             "\[Section]\[Section]\[Sigma]", ",", 
             RowBox[{"params", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}], ",", 
           RowBox[{"variance", "[", 
            RowBox[{
             RowBox[{"z0Tab", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             "\[Section]\[Section]\[Sigma]", ",", 
             RowBox[{"params", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6904632692331457`*^9, 3.690463273800323*^9}, {
   3.6904633052638407`*^9, 3.690463309278974*^9}, 3.695589755301725*^9, {
   3.695590066970168*^9, 3.695590072711014*^9}, {3.695590208923634*^9, 
   3.695590256182686*^9}, {3.6961559261253033`*^9, 3.696155995226655*^9}, {
   3.6961560312196217`*^9, 3.696156124253413*^9}, {3.6961561830193443`*^9, 
   3.6961562063064337`*^9}, {3.696156439195855*^9, 3.696156444602887*^9}, {
   3.6961565852052794`*^9, 3.69615659194901*^9}, {3.696161548904463*^9, 
   3.696161550606512*^9}, {3.6961624773864613`*^9, 3.696162484906294*^9}, 
   3.711948487062718*^9, {3.7119706177696447`*^9, 3.71197063576184*^9}, 
   3.711970759397455*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Predicted", " ", "incidence", " ", "curve", " ", "based", " ", "on", " ", 
    "normally", " ", "distributed", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mean", "=", "\[Mu]"}], ",", " ", 
      RowBox[{"variance", "=", "v"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"t_", ",", "\[Mu]_", ",", "v_"}], "]"}], ":=", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"t", "-", "\[Mu]"}], 
         RowBox[{
          RowBox[{"Sqrt", "[", "v", "]"}], 
          SqrtBox["2"]}]], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myCol", "=", 
     RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tMin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tMax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tMin", ",", "tMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRangePadding", "=", 
     RowBox[{"{", 
      RowBox[{"0.22", ",", "0.04"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"t", ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"s", ",", 
              RowBox[{"myCol", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
             "}"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]=\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                   RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}],
            "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "True", ",", 
                "False"}], "]"}], ",", 
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"55", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "32"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"t", ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"s", ",", 
              RowBox[{"myCol", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
             "}"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"None", 
              RowBox[{"(*", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], "*)"}], 
              ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]=\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                   RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}],
            "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "True", ",", 
                "False"}], "]"}], ",", 
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "32"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "247"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"LogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"t", ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"prediction", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", "]"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"s", ",", 
              RowBox[{"myCol", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", 
              RowBox[{"{", 
               RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
             "}"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"None", 
              RowBox[{"(*", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], "*)"}], 
              ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]=\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                   RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                   RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}],
            "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "True", ",", 
                "False"}], "]"}], ",", 
              RowBox[{"logTicks", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "32"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "247"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\< \>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "2"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Line"}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Dashed"}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Dotted"}], "]"}]}], "}"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Superscript", "[", 
             RowBox[{"\"\<10\>\"", ",", 
              RowBox[{"Log10", "[", "#", "]"}]}], " ", "]"}], "&"}], ",", 
           "\[ScriptCapitalN]Vals"}], "]"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"N\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
            RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], "/.", 
    "myPlotStyle"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"plotRange", ",", "plotRangePadding"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.685860653039406*^9, 3.685860654380707*^9}, {
   3.685860694378886*^9, 3.6858607118092813`*^9}, {3.6858613279076977`*^9, 
   3.685861332587285*^9}, {3.685862249584676*^9, 3.6858625121436167`*^9}, {
   3.685862579349402*^9, 3.685862598468575*^9}, {3.685862702545871*^9, 
   3.6858627127125072`*^9}, {3.685863688820616*^9, 3.6858636924178123`*^9}, {
   3.686293076024486*^9, 3.686293078807382*^9}, {3.6863754904924183`*^9, 
   3.6863757423307056`*^9}, {3.686376039592869*^9, 3.686376257840508*^9}, {
   3.686377285709462*^9, 3.686377525460105*^9}, {3.686377563970949*^9, 
   3.686377574154319*^9}, {3.686377642527919*^9, 3.686377646359543*^9}, {
   3.6863778882152967`*^9, 3.6863778923988256`*^9}, {3.6863780270741673`*^9, 
   3.686378193484436*^9}, {3.6863782290437403`*^9, 3.686378294121036*^9}, {
   3.6863785961832867`*^9, 3.686378646460758*^9}, {3.6863791831066427`*^9, 
   3.686379192553739*^9}, {3.686380228805229*^9, 3.6863802397250233`*^9}, {
   3.6864024243395777`*^9, 3.686402428810791*^9}, 3.686402580014575*^9, {
   3.686646642032658*^9, 3.686646662503133*^9}, {3.686648323134224*^9, 
   3.6866483422448883`*^9}, {3.686649145801855*^9, 3.686649206646247*^9}, {
   3.686649267309105*^9, 3.686649273859928*^9}, {3.686649467797632*^9, 
   3.686649541170877*^9}, {3.686649589625564*^9, 3.68664959592067*^9}, {
   3.686649629913076*^9, 3.68664977321183*^9}, {3.6866499462140512`*^9, 
   3.68665002537844*^9}, {3.686650066680772*^9, 3.686650375573316*^9}, {
   3.686650494178249*^9, 3.686650683875194*^9}, {3.686650725530733*^9, 
   3.686650736313149*^9}, {3.686650779840146*^9, 3.686650794878701*^9}, {
   3.686650830757923*^9, 3.686650833103372*^9}, 3.690463337319343*^9, {
   3.690463519425106*^9, 3.690463542655642*^9}, {3.692358643106851*^9, 
   3.692358645753737*^9}, {3.692360346741235*^9, 3.6923603523569202`*^9}, {
   3.695382935983808*^9, 3.695382959513227*^9}, {3.695590303368299*^9, 
   3.695590314964652*^9}, {3.6955903560036*^9, 3.695590385327395*^9}, {
   3.695590475734643*^9, 3.695590478801902*^9}, {3.695590548136286*^9, 
   3.695590567086792*^9}, {3.6955906256161413`*^9, 3.695590706374649*^9}, {
   3.695591063427348*^9, 3.695591083608902*^9}, 3.695649542742794*^9, {
   3.696156300697195*^9, 3.696156328310823*^9}, {3.696156624101235*^9, 
   3.6961566241856117`*^9}, {3.696156655596562*^9, 3.696156765384254*^9}, {
   3.696156795807089*^9, 3.696156830021326*^9}, {3.696156870077898*^9, 
   3.696156880459425*^9}, {3.6961569141241627`*^9, 3.696156958056724*^9}, {
   3.696161760164963*^9, 3.6961617603552628`*^9}, {3.6971792061363173`*^9, 
   3.69717923527952*^9}, {3.7119451664030647`*^9, 3.7119451687637672`*^9}, {
   3.7119452430806627`*^9, 3.7119452432960253`*^9}, 3.711948456339809*^9, {
   3.711970690645649*^9, 3.711970711455888*^9}, {3.711970767037573*^9, 
   3.711970799195491*^9}, {3.711970846842822*^9, 3.711970916503469*^9}, {
   3.711970951503151*^9, 3.711970952966449*^9}, {3.7119709990618362`*^9, 
   3.7119711307926817`*^9}, {3.711971763259494*^9, 3.711971909037772*^9}, {
   3.7119719559089603`*^9, 3.7119721415235033`*^9}, {3.7119721817339363`*^9, 
   3.7119722855696783`*^9}, {3.71205014560471*^9, 3.7120504103390617`*^9}, {
   3.7120505799262333`*^9, 3.712050582317378*^9}, {3.7120506198130302`*^9, 
   3.7120506710598707`*^9}, {3.712050747000153*^9, 3.712050751201849*^9}, {
   3.712050793672027*^9, 3.712050794565625*^9}, {3.712050825306147*^9, 
   3.712050839766513*^9}, {3.712050871332884*^9, 3.712050945609661*^9}, {
   3.712057953889276*^9, 3.712057974270501*^9}, {3.712058020822281*^9, 
   3.712058035759116*^9}, {3.712058070645668*^9, 3.712058161664604*^9}, {
   3.712058204040413*^9, 3.7120583251977158`*^9}, {3.7120585369978867`*^9, 
   3.712058537252418*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]]], 
       LineBox[CompressedData["
1:eJwV03s01FkcAPAJ04yRZvy0YalFw56QrKUG5XsTkpOGpNBgppoZKWUjdpE0
Kr0sa5KysrPbuTUbp7w79Josktey5bXWDtW2k2SHcKaTM/b2xz33fM59fO/9
nu/Xbu+RHWIDGo0WQsan+UZpSUGa93e+Ks//rol3YHBaJ74t5e6GAuZxcwnx
7LJUL0+uFIIknuc+OfqUXm/NTYOeBYdjUmLT+00iNjcXbAVM/gHi1wNcc2Nu
MShD1axE4mf/9L2lc2+CluF/PYX46SHXSCPuXcjOS4g+RdxxZ8+B1SvaQHfb
TKckHkq6xWt60wvotM333cQvvtnHz705AEr/L17PEd+eLg1Xj42ArvfujGM4
hr+lV8o0g2MQ35DkHUkceNme5bzwCtxerp4sJG7QsaBhuQayHdLT/iDedk4h
WfZhHGxTpWfNd2J4HDVn1GA1CZolAhMRsVPFfHCRTAuK6gPySuL0gDW699op
UDKGx+kRGO7pHwjTst4D09VOfpB4CR/7iaZmQFeKmp4Rb380oT6SMweh5RfG
+LswFG19KeIu1UG8LMStn3giwS0Gsj5AgZ9PRdxuDB4VI+YnTD9CdvaNFMNI
DBdPjW12kM3Dt2xxUjlxX2bAWu1netDINhcnR2FYlR+5IPxlARQhvlu3RWPY
ZCPi2pynIa3Dxy1OezBoaK2OJTsWIVsbtxZ3AQaLr/rFHaYGaLDk1Sa/GAxb
JzcW81sMkO0Zr3JxLIbkexGOkouGSKsSDqriMDg8t5xeG2iENDnhXVwRhp75
C9YX2XREE9rPdu7FcLx613qfPjoKslpucWU/huqazvxreYtRKO1xyGEJhtHm
6YDCCAbqqb9TXBaP4bJdM8+bw0Qc+5wLIwkY+CbvVng+YSLNu9wfAxMx0Oit
wqY8Y1Q5ph91SMLgFRw8arCFhSwFDYUWyRgSfsp60Mc2Qcwy17+uppL/o9iB
PR0myO1r+xyPdAzqxKKXHjlLkPK38RTzLAyXyjNDFMGmiDnUVVgpw9DrwZ55
aLQUqbK0mYdyMSzuDtMd6V6KCk5y4s3yMPjOvJ1MvsRGbSOZja5yDAvVlj8U
OXIQTy/cnnwVw3CyPKrxPAeFDvkoJxQYMv7cp+JpOMhykbFTiRJDKUOoGN1s
hmjuri1DlRgaN3jcCbtphlRzKYGVjWTdIlZgY0Sh7C46PG3G8Ll3U1UjnUKR
6ep0HfFVgSMjikGhoPsu7V+2kHz9PFlVxKJQgdzv+hnifOcTDLYZhVQihAJa
MchIZS5aSSFOeb1L6xMMUukL5r/rKaT1HzYeaCf9dy4w9rQXhdyK3ZuZHRj2
V9yqWeVD4k8x5d7EwqmjsUJfst824nAZcXSGYe2QP4UUkwIbaSfpj3xuXGcY
iXerKWa+C0N71dnahHByX5fV/rXdpH6eTxgbR5D7PDNO7CUOtKqrDYikUJtz
9mwbMVwPYD2KpVBl73n15d8xPGz5NS5GSCHk7JLfTrxBY1r3UUShK/0rd+qJ
eWv643hi8p4p65WSHgz1fO+6fgmFQsN5q0qIPY+WsY7Fk/Nvnm7sJq69ZCA0
T6CQbf1QokEvBve7krqqgyR/qqSadcT/A1XLLH0=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]]], 
       LineBox[CompressedData["
1:eJwVz31Q03UcB/ANgY0hMH5WjBwdxuAozgTBGA/u+xFkwRIBERsBY0Q8zRSU
KygMDeUCxINqAxTUpRkPcRGTh3gSIiCejoNLUOuEAWkziePpuHkQ9P388bnP
ve79x+fz3vNB+rEkExaLFUwH9/dV10qzfD+VsMyzWW/H3iG/P5l8biaqJkuy
CFP00EdvyU1FrQQc5Fz0SENM2hsOg6R0os0W/SijTtz7bILUCGN2o+fOJIZ9
Wf2AyH0andE/rlRFzsw+JhWu7P3o6ZSKG4aHsyS7RStBS8te57lt/0Vcr9aF
otuMPNL2ioEUJC7HoY8UapNfevEPGXyv6jT6l+h10zb7RcKSZOWh36zflGny
lshg7FQZ+rOgvcbVpWXy0FNXj+7Y6lJm5a4S/hcdA+idYXcCEpbXSI2tahZ9
tHthJv3iOqmQebK9qTUh8wkiayPJLi93Qi+o3ONI7gtiTB2Ror3qH+86b7VB
ehzbM9DFl2YDnfM2SbZ9RyV68lzQvqWXt0jG9PoY2qlEvq28tU2AdcpcTH1I
mCASFrEguMifoA2sAZdrx9hQUPwsD23nMZU0YmUCqZ6KQXTI4sHysH4T6Kk1
MD7UmR1RLsnFO6BArTuJdr4vWNknNQWDtmUAPb55eXexjRk4Fok8fak/153w
9ps0g5rhnBq07u5oyfUr5qAfuOnoR63vWwn6OooD4tLOBnTZnj6xL58L+vnL
Af7UYZb/Ohz4jQvjbGs9mmU2oOy9YgHc0drKg9Q+Mpne5B0eGKbnYyTUqpu5
XZM2lgCjc0CwPygexIxYQk+o0Q2oZ05p5r0u7oSMX8NdD1GrfzgXqpVZAbfl
6fEA6gkvm7V7ptbANwoLA6nNxyKM6WPWMP5JqPEwtWTt+WKm2gYueHfnS6m3
dYKvNC58KBUOC4Op/8z8Jrq9iA/u4fVsGXXOH4k9YgMfuP4+q+9SV3GUWn2g
LQj8nCyOUrf7ezVEVNsCf0OQH465nSJWaMpAheYJP5L6Vd/exnYzBoyBo0L0
1VgXTjSHAce+Vld02beLjRoeAxcOXQd0idt5jo0tA8EptzLQeUSrY7/GgFZQ
PoFOSZnj/u3NgCtHXH6c+mmhVJHvw4Cgv/M2+sP6urtOfgyMq6U/oZXLZxVK
CQM/n0kbQr+fs6Pp0WEG3GMWNtBHSkTxoxEMcLsMCVHUw40FTapIBsJLuk+j
Q+4vWFhE0T7qyhy01L65KUjOQCkkatDkdhCvW8GAPNpjCH2vvzY+TslAz5bH
FNrfYNW8kUD/M3jPo8V7p+LFSdQlkf+hW8J8m6eSGeBHpPFOUB84e4P3cSoD
2fGX7NBNahPlLhW91/mdCL2/Nbm58SQDqaphD/T/X4fsvA==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{{{0., 
          FormBox["0.`", TraditionalForm]}, {0.2, 
          FormBox["0.2`", TraditionalForm]}, {0.4, 
          FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
          FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
          FormBox["0.8`", TraditionalForm]}, {1., 
          FormBox["1.`", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{0., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{0., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, 
     AxesOrigin -> {0., Automatic}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{9.398306502016513*^-8, 4.605170092005027}, {
        0.04164426377210928, 1.}}, {{9.398306502016513*^-8, 
        4.605170092005027}, {0.04164426377210928, 1.}}}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox[
         "\"CDF\"", 22, FontFamily -> "Helvetica", StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox[
         "\"Time (years)\"", 22, FontFamily -> "Helvetica", StripOnInput -> 
          False], TraditionalForm], 
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1\"", 22,
           FontFamily -> "Helvetica", StripOnInput -> False], 
         TraditionalForm]}}, FrameTicks -> {{{{0., 
          FormBox["0.`", TraditionalForm]}, {0.2, 
          FormBox["0.2`", TraditionalForm]}, {0.4, 
          FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
          FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
          FormBox["0.8`", TraditionalForm]}, {1., 
          FormBox["1.`", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{1., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["10", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{1., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, FrameTicksStyle -> 
     Directive[16, FontFamily -> "Helvetica"], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{55, 2}, {50, 32}}, ImageSize -> 
     300, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.22, 0.22}, {0.04, 0.04}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]]], 
       LineBox[CompressedData["
1:eJxN1nk4Ft3/B3Ak7m3mViGiehIpWvAoKjkflOJRUVKyZGmhFD0VKQnZoiKy
JuQplBSKbGXpJkq7nWTNfs8dEiW+Z77f6/o9v/lnrtd1fc7MOe/5nJlZ4uC6
65CIkJDQdmEhIfqcmhAf7rHBUzc5p+JCdG4qUll36OERxb3oj6W+WhL5qei7
pPv6tYpH0D5/MzK0MBXt95+ellP0QDKXvKT8S1IRUVxuz1UMQm5Zi+IvVaei
rw2K85iKMUjN/uN0/udU9KmnbnC2YhoKvxywX1g8DVW7rN4nqvgUbZtyeaxi
k4ZeP7JyXrGwCjFmpTQ1rEhHTW73tcv7PyAZxandz4Tvoc6TjjuD0hqQIFon
4w/BPfRwJGH3l47PSGhcqB6kMlDbkdjEvsYOpK3fc2KfyQNkGK3AUp3pRtqM
xl6dN5moYIKFCqT7UFVTzLOCi4+QyeXkw5KTA2hsXLVSOz0LlVmOixbI8lHj
KHfu8VfZSOXBlHGUnwDVzrucWTLrMTq3ZdXEqOAb2nf9rfDkoSeoaPqZnYf3
KKqxtTL/ppiHODvv6tt/G0OcQ3YFBCcf7SgZ+uJ6aRyZyzvzGj0KUZRRl70i
OYHyZRS3K217hoaOqtkg70kU69ylvVCtFGk++DzvIvEL1S6wc6xaWY6u+HcY
KPlNIf2kTvccOx46Lhnmejp4CukekC2XPMZDO+7o3HxxbQr5Lz+f6H2GhyR4
MSP2N6dQrf7tJc4hPBQ1a8ftxCdTKLz12EjcEx5K9Cucnt87hbL2enxwZVWg
LJ/IApbJb9StXtwmVVyB6ry2rBFITSPW+Ysvbmu/RIuqA0aWyE+jqndzvT9v
fomcpCpzdytMo/Rj/8wsMXuJfmYa6jxdPY1eNRS7VTjj+i9bjby3TqOaCd9C
95u4Xs/YkeM5jRI2MU8HC1Whqdk7Y5a3TiP5QlnrqA9VaGnYvhm7lBlUuNTA
qSL8FdKTt1eUDxGCgc1bLy3c8hb1CVUui98lDPo+u/8WXPqA5qvXH3pNiMAZ
6Wc7Zy+tRUb8TTE7K0RApscufsHiBnSqaM+yw1dmgazplMjp5makVCszssZQ
FKIchNvjatrQ+6lQuSvc2ZBZLmz76UUHupBjobWxbjbsb0PKa/W6Uc7jmrBb
V8VgffzNQ6tTvqJ23siWiD3iEMEX8HQU+tFu1vMer33icN5WZKmmaj+q3Hk5
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
WsuLzv0/HznSyejV+tcaTw/nZh/71/8Bv6NaiA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]]], 
       LineBox[CompressedData["
1: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
ngVw4dIPBvwfJeOASg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{{{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{0., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{0., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, 
     AxesOrigin -> {0., Automatic}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{9.398306502016513*^-8, 4.605170092005027}, {0., 
        1.}}, {{9.398306502016513*^-8, 4.605170092005027}, {0., 1.}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{None, None}, {
        FormBox[
         StyleBox[
         "\"Time (years)\"", 22, FontFamily -> "Helvetica", StripOnInput -> 
          False], TraditionalForm], 
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1.1\"", 
          22, FontFamily -> "Helvetica", StripOnInput -> False], 
         TraditionalForm]}}, FrameTicks -> {{{{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{1., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["10", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{1., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, FrameTicksStyle -> 
     Directive[16, FontFamily -> "Helvetica"], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{2, 2}, {50, 32}}, ImageSize -> 
     247, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.22, 0.22}, {0.04, 0.04}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]]], 
       LineBox[CompressedData["
1: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
cZc1KA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]]], 
       LineBox[CompressedData["
1:eJxF2Gk4VV0UB3AkuUNIMpZkLPWKMsU9Z2+RkClTEiVSaCBDxoRENJgiqQxF
ikISQkKkRMZEKJkzXSEhw3vOvZd8yPN7/muvvdc+25e22DgZ2bEwMTH5Y//g
vx/di4/wUPFCmRg/0op2mafED4Fl/+a5sEdB/NSKLYIWF4XEPVa8trj8OKd4
yIr7v4ivJ4jfXnFT3+fh1eJpK/5wRsacVTx/xR+zjjhs2/R+xW3O6crlPxtW
3H3e1iAk7cuKMyfuGX//0bnib6fiEgZbf6xYM1aUuH2pd8WvZojgFe/ginVD
k07yzA6tuOzwNOsrgbEVSz+d14kJHF+x977/ZibHf624aPG1tYff5IrJBql7
j/+aWrH+m5HvTpenVxyj3XNcnGNmxSOOslbAb3bF8k87119a+3fF14N+qEsE
zq/4s+++neMbFlcsFm6+ZP1gacVqG4+LbwxjgsseZHonGW/EvGI+uRa7j2tZ
Vqw9htw2qPxn1yJTyZPXV624pSpITy/8n5WbX7jJR/3z4si6tyxx/xwm/OlY
4sNlR1CSAjTvtBb+c81+JfKBn8t+TNlpcnL3rpFlZ1OirGMsBKj/fMhr8vHA
1D93p2ftC2JiZbiAcrbjdLcIedmllJm1Wy+95lv2O8oRwUOPUgSX/Z5SIhlc
e23Tsqspl0GvkIXYsj9RtMz3Om7dtuxGCsf5pIJpmWV/pjSHLrJVyi+7jRL/
wNI0WmXZnRTrosKHx+Gyf1Akmvkndmoy7N9DeZ9UYmOqvew+iuPZE03eusv1
A5S1KkSNJINl/6Rks2XnVhot1w9TjJpMJYZNl/Mxyu/EvzFchxmG45S4M8ls
ipYMl/6iqOzZ73Hk2HI+SelcPTrgb7O8/jfFvzHK/JHdcv00RTRR+cNH+2XP
UCpPf9vz6/Ry/V+KvXJQOq/Tcr8FCnG1tBDFZbl+ifKsoe7acXeGrZkRwwT3
+WBPhrtYkAlHobNPfZbnYUVilMo6G/yW+7Ehyqyn9P8ELJsd+VpPfrPxynI/
InLxfs7OvVeX9yMjIo7mSaeuLddzIuWKi1w3bi6fdx1ityolICdyeT9uhL1e
e+LLLYZFeJD0e1SbhdsMj29A9BximkTvLp+XDxlXUNXQSljOBZAolh+5Z5OX
99uIKNQFS0SnLJ9HGGm9uyO2II3hAhHE276R7Vs6w7KiyCYFT49VmQzXiyGl
zMKDW58zHCGB2Hx6a66fy7CzFLL6rsMH13yGr25DHp/iVLlTyPD77YiO/Mv0
ktcMK8sgo0xHhHpLGXaTRSJqma4TKhgelEN2xT+al6li2Hc38vmk7lmTaobl
FRDP3ROdXrUM8yghgkxx+on1DG/cg7yuQd5UNDFsoopY3+nZOdSyPD+CpO7a
uU6hk+EENURrqTnAoovhHerI0EfviUs9DH/TQG7Eidim9jOcp4nI2r1rqv65
fH9aSKPcGY3xEYb7dRD3xXUvN4wzrKmHFN62irWeZvjQQcTqxKo1wbMMfzdC
mOSeeGTMMxxmgjxY0B+sX2LYwgzZVz1lPs2ymjGPOTIYG/9BiI1hbwskzBaq
qBEYbrBE6uevCV3nZHjdcSRN6u+XB9x0+1+zQfyMHG+92sDIpU4gJhfbDOv5
Ge63Q7Y/1lo7IMRwzSmEpSn/w4Iwwx0OSOuCZDCPKKOfwBkk2Hj1ktpWuktj
nRFLP7ci8+0Ms7kgu5/0eDjJ0A1jXRFis5F8sBxjvZY70rVYNn5PnmERDyR/
m9yzF0qM/bZ4ITdNkhyqVRjW90FU0/26/0BGP2F/hPvzaAKHBt3WlwOQwSXL
IxL7GV5zGXkjXcNH0aG762kQEmuq2mykx/CFYOSMf3qEgyGj3v4qop4hoOdv
zDh/UBgyzjRT+eww3Ul64UjV9lOBFZZ0yzJHIglmLWj7Mcb5vaIQt4B9f3/Z
MHLuW8iBp7n57CcZ/hSDiH4Rc9vsQLdz9m1khjlaVvEMY57iO8ijQ+ef2Low
6o8lIBcDu+y83eneeikJMXlmIBrpSffj4WREurXkW5oPY3+PhwjzKpm7JX6M
/hKpSOt/9w99DqDbcOYRkmlO5hkJYsw7+RixzBy6LnCN7hmnZ8jutsPasjcZ
9bNZCJH1w+r9kXTLWz1HumSUy61u0c3ekYPkH07zc7tNd4FPLnIziFf1Wjzd
XCAPOZF15U/yfbpFthUg3KtPONc9ZNy/XzHyc2fTjv5HdJMnSpBSi70/55/Q
7VlbisReeZ66/hndHKAcOZstYiOdTbdm/VtEoz1cWO0F3fWXKxFBtqWvh/Lo
jresQt4f6TS+Ukx3S9hHJCFYl+veG7rdBmoR9+dFNTnldLeq1iO6HdKhHyrp
nk5sQETXxO/rek+3q2gTMitHYPnzke6eymak3tKzZG0d3dw3WpCLOWZKqp/p
XhP9FQkMKyjd2Eo3S3YHEmwjqLP4le7qP9+Qayq+Td87afbvzOtCIri/WZZ1
0fNiYjcSMwT6H/QwzuvVg8SXJzsF9dMturoPSXGxC9w/Ql+f7DuIPNGpIm2j
0vOws0NIpui2GOIE3feujCA5c2HCI1P0+sGqMSS/cSSt9g/d3+6OI8Xp+nJZ
c3SbjPxCSgOzCyMWaC6FhyaR6l1utcar2Gj5z6BppI7YYqbAxkb/HrozSHO3
Uhcvge5jSnNIW+EdhxkSzXBBax75FvV3oo2DnosELSI9jla+RetoFmG+wIQO
7n2z+j4PPecsZ0Z/TQTyWwvS3CWWzopOV/cmq22i2fqIDhs690Bzu5gIvT8v
iR1d8n6cyypG79c2RkBZjYlovwS93mKGhBK2n6mq2krPr0hzoByrPhk+2U7z
OKrBhfK/iLQ9I0fPG4e40U3XJkf05Gmulz3Jg4raml7YqUTvR1ragEqq5i9x
qdDr0/L50O3rBUInKDQ7u0cJoLLD3tzNgGZDvighVP5tx92Xe+nzHX+1CUVd
kzI9tej9n+zbgqofYFG2OECz/YkEUVRL7ESZqj7N2W/XiaN6fyt1Nh2k929I
lkCNmqSaF41pHiwxlEIPZYRadZnR/H5AZBtqeXm4v+wwzVs/82xH7XZnzQYd
o/mqoOtO1JG07vJJG3pe8UsWPdfjQtayo3nHH7VdqGtRc8w2e5orZjJ2o57R
iptJp2k+USKngF48Hfd45CzNZNvPimig+pzcJ2eauaTvKKPXJ19rRF6gWZf9
GgWN/Lj5k4sXzbnXSlA09mHAIRNfmj2v3oRovE9Pl8Il+vrhZjU00XifI18g
zTe3y6ujKdvTJmeCaJ7emqmBPl5FuPg1hOavfRqaaM6LmvD7N2jOdGjQRv8c
SLV5HUEzr//MAZTSe1GhM5rm0lV6+qi/rxn7QizNBsYOhmglz872jfE0y714
dxAlPluTSblPM/gAjVH9fV3+lkk0q/1sM0Fb3SMl7z2i+X6Iqzm6icNxtugJ
zSbpXhaozaO9Ne1PaSZtTbdEH6FCiX+zaDZzZD+GDrdMnhd6QfMCZ401KutU
o6GaR/O2ZBkb1G1NKt+RVzSHrs20RReVzF7Hv6HPM0A+harXy0QUltNMCPpl
j161X2P7tZLm3bYLjmgNU5fC3Huax1J3n0XX3SlgF6yhz/v0thNqJhfZvqeO
5tnrvOfR+A8OmYcbccOoUR8XVHxO0OROK25/3QOJ7qh91KTkq3ZavTerjQf6
TLpmtvUb/b30a3mhE+UpNTM/aOtVq818UMUjFxP5+3CX9pffvIj6TJq6KA/S
cp7NU5fQ0msy+8yHabmz0r4AVLv4+9DtX7T867sdQehNk4LX+VO0/JJn7RW0
cSQi4ssf+no0PATlu+Jg+2cOtwia4RaKWm7aq8i3iDtp8Ir/NTTppSBBiXkN
ZuvFDy9voH16k+1mrLjhyxZSBHrOLyUglojbcCEnPwp9wXvRJG8t7qQbnoq3
0JlMU6kWLtz137SaYlDKfpm53+tp+QHXiNtowHe22g18uJ2jXJ3voO88vicq
COL25/7tfhclchW4mG6i5eotD++jt6ADf4wY7vfVD/cmo22tasO5krhnHNsT
H6DC5wVLmrfRzmcvyZ+C2hAmI6Z20PeLepaKpiV/tOWRpZ33nLFNGjqyJ0VR
fjfuwdIq5SeobKMvwUQRd9xbr90ZaCGLTFY0hVY/lJOUhS7FswW+ALjN36aS
n6Mau7+bNO3F3SEieTwHvfoxX2pyH+4UnSd1L9Ba24g5bm3cslGbLV6i3PP2
tbt0cesq32fJR81uqSUZGeDWGLf8WIB2VUzsizLFXdBjVVWMGhNL+nzNcd9T
qW8tQd8ZhF45dQS3n2JRSCm6J8ZEwugobX7Jsbwy9OnXzZWU47jnL1j+LUc3
iwyfkDqBmyfL06wCjbLLY+U+hVu+rvZDJeoxrqsxcAb3VEjj0nt0SIG/t8GJ
dv4RkXfVqKVPz+ViF9xHT//MqEHrSjPF0txp8ybpvPiE7mXzfhvpSXsfiLpT
PfrywD5bXx/cfIoscQ3o1kiuVaf8cPf82Pa5EeXYmLaXEoQ7ej0S9RkNOO7S
LRlCm3+t1IYv6NQjJHBdGO5Dvl45rejJEXbR+eu4o95Mnv6Ktsk1l/WH4z5W
fF69A9X1SDzeEIX7xd1RlW9oSbEjc3EMZv999VC6C03Zz6wWeRf3t7zLPt0o
342aLp8EvF5cwrm8Bw1rvO1/Mhn3q98HN/ehC3y2IgdT8PpejdjoftTZSqZU
NQ3PHadKRQbRngezxyTTaf1Xn3v/EzUbrFjieob7Hqvx9WFU1fUI6M/BvbVD
zJmKZhZIfq9/idsBslaPoyKLv/yKCvB+bznWjv1Co9VfCz8qwlz6Q9RYYhJl
C71aElGC5xtVOM9PoV6fjI/6lGGGBI4bjb/RkfWbF+0q8H6HTu848AdtTHiJ
qFbTzruvMGQO3dfr3ylRS3svVl/059GCbboXuepx19S5715EpZ34Nv1txGwt
KpInxATu53YX933Gc5MkMxlmwDX3zLK+Fd8v2inFiAUEAq/5wnbcbeL5oauA
fTUnJeIHZpGs5A55NtDO2d7u3Yv3i7Zyy1gD9E0f+dgN4PMkfO3YQwBl8eeF
DIfwPFE/9AcRyHdRilRG8bzTgiWFDNIk2I9IjOO59u6BQA4geLppjnMScxfR
8Q/gAku/HVT6ZvB6Le+us9zARVXha91fzLIea9DE9aDXn8m7cBFzUjpTYg8P
OPTuo0AqMztkilC/KE7hBdWk26/CWTGPU8uXnvAB5KDNYe81eL5ho6uMAMiO
/W/2BBEzl3RBY7UgiN1SoazChdl51JvtoDBAKs3FeddjLpB/MikgAnrtRzkn
NmA2/xP3UWAL2JXNO/BECPOgQjuTlhhoM85ovCKM2f5j2xZPceD/B5Qc34L5
veinXYUSoBZ1iBGQwtd7n5D33Arcuhf8f2/D8xgWg+ltQDA46kzDDsz1Z79m
hm0H9rVF6qG78PNBd8W/MoDzvOFOOwXMU34pzGdlQR5Pn6CaMuaNFn6yjnKA
1ZJjYgbBTB5lpUbsBhlLDzqbIeYumzHBYnlg9FDpQ7Y6ZsPUh1ozCiBpyDrJ
Xhtzx4Njh9KUwf6bv69p6NLmCdixUQWMyYV5iBhghpLpI6mqQNXrhX6rCeaR
46XJ8yjo3qilknsI83RY0KwdBFdLOyQiLDA3uye4WaiBljVsC/utMffqTkWc
UQcXM+IHxWwxE3sH7l/TAOIGO5uX7PDvs/aMaeE+4BJrnpF/GnOj5/l5bS0g
oDIaG30O8/z4eOJTbVDaGRDodB7zhTdvzEQPAA6JjMNSHpg5zoV80dEHL9+D
fau88e/1ZfjJkgGwPNMs+90X8/Cpx/V9huDJi4U1twMxV+vWfWgxAoaHoiZd
rmAWLQ6Y7zYG03OS3/WvYl7d9GTHggnQ2GuYx3YT86fcMdWjh8BwX29ydwTm
KMLA1UfmICrU60ZJNOaZvMispcOgq/7BiQt3MIcbbno9YAlC3JQMje5hvpNR
b+R5FMjw16jKJGJms1WM4LAGvsd+c/enYL4kYRPVdByIrQpbLEtjh/6xarLS
VTag+pHw0P10LP/bvOXLO1vAP7a/zDQby/ce/5I8YgfeRHY8lXuB5XmJ033r
T4GTCufj1uZh+WPq3uva9iDXN96psgjzBuTFtW5HcERk55HkEqx+7ZCuyv4z
gKXirebFMixPLTadLj4LDEijmxSq8PcTZajh5AwUnWaMDKoxCw6uyzI/DzY2
rbrqUIvVa2rHLeq5gKF4wYn7TVjeSbbyPOoGGhYlpApa2GHpKtHvld7uoMBG
zrKxjR3CtU7jaOoFECyt9Y6tC1vfE3FDUcoLnL1p/FekB6uvG2lj9fcGJhNH
ZVX7sfoIdo+Enz5gS6F7vNMI1v8+xwLPhB9gFw6oC6Vi9dqZ6/do+4OxgOus
KROY38JsPbEAUKz98FzrDDtMYuZ9WzMdCB4+y3w48ZcdWuc2uqz7dRmErSts
JS+xw65inbzx6SBwqK1+r9pqAmRiL5M+LBUCUKTD4wg7AXbt3KvWanQViCcP
PHUnEaDI15gPnddCwYT9Im/6OixP4XUL33odtNUQdCt4MF/iMdO/cQOUym4I
+MZHgPARWf4Vczi4MbN9mFuYAA0nXc6Pr40EW68efuMjjVnD46Z89C3AOXJi
KuY/ArRuzHLJuh4Dpg2ct2XLEqBzHZeaX0QseMsXEt2rSID+GjpCXgVxIN0n
6v3iHgKMsJnVsui8AyK+31/gRzDX6cXMrr0LjqblntJTJ8BxGflT1Oj7YB+p
9N4pTew8xOrj7EMJYIfTx4YAbQKcOaYkmSOZBGYVu1XzDLC8KZXyOiEZ3HrH
ybXZkgALTk9sVRtIAT7SQvv2HCNArtBNM6y1qcDmpqS3sQ02b/CkKFfRI7DT
DOkNsSdA/p55nbbsx4C3UEvgwWkCVD5cEcj26gmY32SiX3wOy91bzx6uTgfV
fY4F424EmL36tv5BwjPwXPvCKNGTAEtlxmZOKmWCuGcBohI+2H4Pxe5ddsoC
du5x1w8HEGDN+dMWh5eyAdPqd9blNwiQ8pxfwb/uBdjAW2GTFkGAHdMqewKD
coG0VPmJ69EEeO/5zbpE9CUw0S6xN7tDgPb9ze8Dy/NA2o0856EUApx6xdEr
SSoExQm5LnVp2Pnu3kU1hwtBfVaOW246tl/C1VSRhiIw15Dp6ZdNgO85G2N0
M18Dfd40f+5i7L4lh4JFW0uBrVRq4J8S7L65qqxYrMuAp/LDoI4yAmQ523lw
fqgMPLBIvPqoigDjqtV/mxDfgt8JtyNUmgjQLKT3m4BTJbgndTXJZogAU6wK
Hm1uqgbPlYMf7B8lwI2GROHNNz+Cd9pBKTvGsf6zwl8NdGvA+Gn/x9O/CdDi
plvK7sZaoJ7tmR3GTIT1T9NeZgXUgyFlh9IcfiK8RbywsWK2CSxpnyq/LUSE
gYo52TPnmgHPEbsKX2Ei9Dbgk3fvawboxePvNcWJsPKDeq1Yy2cQVXa4/utO
IlTJGe06WPkF7NHR6WLZT4S1ViVWkQ3t4KbQm+2SOkTYLDC4Pvt4B+ge2e2h
rUeET9WK2nwnOsD18E0cEcZEmLIQ1N624Rvoah5X3WRNhP6fkd0Nsl0g+Njt
20peRPjmTR3B1q8btMuSeyx8iXCHne7hwKpuIMsSION3CduPL9fVmqsHtKU4
VlZcIcKqgD9Ou5J7wI4hZPJgFBFeSTE1EC/pBY1uvfpnMohQ45ZUq31nP5DS
PBwfnomdP11MSE54APjyferLeU6EIkZ/rsscHQAShfm+s/lEqGQnvi2zfQB4
LoWlB1cQYW6FxleemkFQW7/0+0kVESY8DNJqW/0TiD5wU6utxu6vXm59KvoT
fNQ42rq+gQgpu2V71Z79BMJhcmzJnUSoNUK1/89vCLgeeXSwoosI+VldjlRl
DYH3O4TuD/QQoSuP4weDriFwvo5VXmaICH8IiG2WRIdBBU/r8aJpIjyQ+iWi
YWQYCPTrPvs2i+WTcw2VG0bAufyyGeYFIgzWfCORiowAPouMcK1VJDh6K0Bz
W9gIcEz0e/2ZkwT7E7eLuPOOgtFN/Z/fcpPg67j/BOrkR4HzPb2x5xtI0DDO
mHOf0Si4cGfj5ptCJPhJbZwjPGwUzPIFKfkKY/nC2Rv2qaPAN3bYwHELCT7+
uzhm/2YUBEQX+mtKkeAtW4FvQ+OjgJVb9I68NAlK7F+35MI+BoIjQp+L/keC
FcNpEjs3j4HrN8y7F3eRoF5Hd+9BnTEQFzKtno+SIK8kW3P67TEgxHbUMlWN
BBsq9RdUn4yBhKBKt2gNEhSRKmMSKRwDKQG3Up10SPBegCz/r7YxIMU0/9pK
jwStj/Ze6h8cA+l+ti0HDElQvPeQHfgzBrJ8dq3ZakaCZm/kvXdwU8GuuTub
eQ+TYN7odu4PwlSQ68mszGpJgqh27O82aSoodK+37zpOguVRqboOalSATCkF
fDpBgr3V+9eMH6CCUpfEO8WnSNBZzD3urykVvHM6Vx13lgTZ9naeem5PBdpj
n7uDnUnQ4JbjfdvzVFBzBvnr5kqC2hVfYtK9qKDRgbzjoBcJ3tzvK84WSgWm
g64awJcEu69aIKIRVNB6st3yv0sk+MXs6cbuWCrotE2/QbhCgkEh51yOPKQC
6+51j/6EkOBn9V3tQk+ooNvaq6QvjAQzFQZHb2RSwaCVFrUsggShxxf+WwVU
cLoja012NAkePh3oL/OaCsYs+EQSYkmQZ6+NbEgZFUwd6jf0vkeCrMWsQpc+
UIFHi56DfSIJbi/YMyNWSwVzJi8DzB5g92t4zCaqngouNm2M10glQQuzwsma
JipgMgrK2fWYBO3978u2tFDB5frhapEMEuy4HBCS3UYFbAbGPRyZJCjjtvXg
0Q4qIOuK8gy/IEFlLhN55AcVhFeH7mjLI0EkOv6WSw8VcGv/0qh6RYI7c3J+
X+6jgpgqc6uXxSRY9E11v+sAFfBrlro/fEOC0vcLT+z9SQV3K6RuRpaTYJ/i
zIbJISoQVg9/dKmSBA8423OGjFCBGDz65chH7D4Srukfo1LB143hqqqfSDB3
/Nq5pHEqiJh9kyjYQIIP4ldVf/xFBftbxlfNNZGg5bPPad0TVLCYs8W+rQV7
T3tvgP5JKngZblRT0Ia9j/z6V1+mqODMmcuycR3Y+zdqkS34jfWX6Jsx6ybB
h0VRyjp/qCCShddKsY8Ed9xKf7WAWeu7ZtmGQex7H90tkDJDBUtFHhK/h0gw
9tgmWXSWCvLiHoc2j2J/L6pPP9ZgPuveNvpinAQ9OYefGc5RgbgR0Sh6kgQF
lDffrMYcRTojaDRLgs38mhMP/mLvb/Cen9w8CU6jbTks89j3qazt5loiwW+x
PsMWmPOTFzXHmcnQsINb/Cnmc347M+pYyfDcc62OacwSR6w5s9aQYXbV2DXV
BSroUIp0vUkkw/6j1g+9Mev8mlDV4yLDAxdm0n5iZv4klrRjPRk2vvxoLLhI
BQXpJqxkXjKUXOfap4nZKeSK/TA/Gepo6T1zwix5Iq+mWogMnz0zmL6FuRMO
yKYLk6GStjFbPuZbm/hjQreQocXCUeEWzDpzWrP24mR4/fmY9wRm5i9eVlpS
ZMh1VcmEvITt9yK9TEqaDJmlHL6JYT4X0S6x5j8y/CQ8or0Hs8RZclj/TjKk
et1/q4u5QxsZq9xFhicvr3E/ijla8pxRqgIZcjbdDjqHWWdVYl6QMhmOZTVu
uIiZuatO8IQqGY63XdYOw/crZrqkjpKhc+0IEovZ6Y5cj6gaGcZFj3MkY5a8
YLOfRYMMA3cjLemYO42iM35okqF5q0vGC8y3dlZwlmmToWKZVkoR5gPk365J
umRYz5ndXI6Z5adE6yUDMmS6NqX/AfOrSjPKMSMyvODYLlaH2flBSBJqis0H
S22aMUtdKmAVNidDdoFsgTbM3478tF+wIMODHYGmnZhjlAVrO6zIsJxncssP
zLobDsgVW5Oh/pbc0F7MqyZ8Yu7akmH1WHDsAObCT09nvU+S4RVtvYNDmM9n
dFpZOGDzfhUqH8G89SpH+Z4z2Pm7dcbHMH8/ASQFnMhQueJK9zjmWDXnsJnz
ZPjepS1hArOecPLYFzcy3FtbJj2FmfVvg1G+B2YmxWu/MRd9YcmP9cbe458X
FdOYXXJ3C124SIZzYzrtf/D9Ik9cMvUnwyCF1MYZfL+zMT3yl8mwVGpd5izm
FiISaRRMhi7Sk5fmMNek9aLOodh7He1S+ov5rcb1kRvXyZBXurcVd+GP3fEZ
4WTIDZ7bzWN+7te+/0MUGSZ0ZnXhfix0+Xd/DPY+ell0FzAnFkg/ZL1DhqyB
4U9wx5o2GoreI8OZ9FV/cd+Y8FoEiWT461e72iLmoPAtT60ekKFvnf0l3N47
Phz2ScXeh11TLu7zH5zX3HlMhjeqt/Tgtj/J/zIvgwxz+1RIS5iPrsK+ayYZ
kgd//ofbNOkU18RzMkxx+HEAty7CWcL5kgwt5UvscKt/zTv9XwEZPnxL8MWt
4nFU4EAR9n39KeG45XjYquxLyFD4zZtE3FufP3MLLiPD3hDqM9yb9U1FUyrI
8KX0xkLcvMPzdWVVZKj2+FoFbvLVlIvfq8nw7S/vWtyrJHS3L9SSYQnr5s+4
58omWwUbyFCjP7Ud9/jRu8HKzdh7CFD6gXvg7155sy/Y/I7Tfbi/xQ39cP1K
hg9uMg3h/qwQFR7ZSYbHPziN4q5p3INkdZFhyxmLcdxvnX4M1fSQ4fe8pgnc
heTQuKF+7D6UR6ZwP9ZsnZQYJcOaDrkZ3DH+UgbHJ8mQpyp4Dndg4YX0e7Nk
KM0rM4/beapydesSGYbVmy/Q7tP+RLE+eS0MkX69iFuqg8W1kn8ttI50WKKd
9y3oypFbC5U1ftB8K8NXL0lnLaTsmaN513hlUlbaWpiFrcbdIM85VcLKgf9/
PfYzDs4EyF647fDPbJ8Ozjh9+md0anjM9Rbnipdy+CNjJLlW3O4afbgw7J99
vtqWKg/+87011kld6utWXEiRzzqY9s/3+I5abmTlXvGpU93sA0r/vCv/5Mvn
p//5f0JZmcM=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}, 
     GridLines -> {None, None}, FrameTicks -> {{{{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{0., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["10", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{0., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.0986122886681098`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.3862943611198906`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.6094379124341003`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.791759469228055, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.9459101490553132`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.0794415416798357`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.1972245773362196`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.302585092994046, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.4011973816621555`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.6888794541139363`, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.912023005428146, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.248495242049359, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.382026634673881, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.499809670330265, 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.605170185988092, 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, 
     AxesOrigin -> {0., Automatic}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{9.398306502016513*^-8, 4.605170092005027}, {0., 
        1.}}, {{9.398306502016513*^-8, 4.605170092005027}, {0., 1.}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{None, None}, {
        FormBox[
         StyleBox[
         "\"Time (years)\"", 22, FontFamily -> "Helvetica", StripOnInput -> 
          False], TraditionalForm], 
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1.5\"", 
          22, FontFamily -> "Helvetica", StripOnInput -> False], 
         TraditionalForm]}}, FrameTicks -> {{{{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}, {{0., 
          FormBox["\"\"", TraditionalForm]}, {0.2, 
          FormBox["\"\"", TraditionalForm]}, {0.4, 
          FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
          FormBox["\"\"", TraditionalForm]}, {0.8, 
          FormBox["\"\"", TraditionalForm]}, {1., 
          FormBox["\"\"", TraditionalForm]}}}, {{{1., 
          FormBox["1", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["10", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["100", TraditionalForm], {0.01, 0}}}, {{1., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {5., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {6., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {7., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {8., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {9., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {10., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}, {20., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {30., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {40., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {50., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {60., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {70., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {80., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {90., 
          FormBox["\"\"", TraditionalForm], {0.005, 0}}, {100., 
          FormBox["\"\"", TraditionalForm], {0.01, 0}}}}}, FrameTicksStyle -> 
     Directive[16, FontFamily -> "Helvetica"], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{2, 2}, {50, 32}}, ImageSize -> 
     247, Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 4.605170185988092}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0.22, 0.22}, {0.04, 0.04}}, 
     Ticks -> {Automatic, Automatic}}],GraphicsBox[
    InsetBox[
     FormBox["\" \"", TraditionalForm], {0, 0}], {ImageSize -> 2}],
   TemplateBox[{
     TemplateBox[{"\"10\"", "3"}, "Superscript", SyntaxForm -> 
      SuperscriptBox], 
     TemplateBox[{"\"10\"", "6"}, "Superscript", SyntaxForm -> 
      SuperscriptBox], 
     TemplateBox[{"\"10\"", "9"}, "Superscript", SyntaxForm -> 
      SuperscriptBox]}, "LineLegend", DisplayFunction -> (FrameBox[
      StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TagBox[
               FormBox[
               "\"\\!\\(\\*\\nStyleBox[\\\"N\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\"", TraditionalForm], TraditionalForm, Editable -> True], {
               Directive[16, FontFamily -> "Helvetica", 
                GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> 
              False]}, {
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Alignment -> Left, AppearanceElements -> None, ImageSizeAction -> 
         "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
        Directive[16, FontFamily -> "Helvetica", 
         GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> False], 
      Background -> GrayLevel[1], RoundingRadius -> 5, ContentPadding -> True,
       FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
      StripOnInput -> False]& ), 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Line"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{
          "LegendLabel", "\[Rule]", 
           "\"\\!\\(\\*\\nStyleBox[\\\"N\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
\""}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
             RowBox[{"16", ",", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.2666666666666667], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.4]"],
                  Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0.4], Editable -> False, Selectable -> False]}], 
             "]"}]}], ",", 
         RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
         RowBox[{"Background", "\[Rule]", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0], 
                 RectangleBox[{0, 0}]}, {
                 GrayLevel[0], 
                 RectangleBox[{1, -1}]}, {
                 GrayLevel[1], 
                 RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
               True, FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
               None, PlotRangePadding -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 1.35 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
             Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
             Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
             With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
             Automatic, Method -> "Preemptive"], 
            GrayLevel[1], Editable -> False, Selectable -> False]}]}], 
       "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.711970956100219*^9, {3.7119710018765917`*^9, 3.711971078125968*^9}, {
   3.711971121804797*^9, 3.71197113238592*^9}, {3.7119719723240967`*^9, 
   3.711972002246728*^9}, 3.711972051786018*^9, 3.711972084964734*^9, {
   3.711972197349449*^9, 3.711972247861857*^9}, 3.711972287530319*^9, 
   3.7120496117825108`*^9, {3.712050201176457*^9, 3.7120502654362183`*^9}, {
   3.7120503157268457`*^9, 3.712050410896667*^9}, 3.7120505829575243`*^9, {
   3.7120506424486513`*^9, 3.7120506729132233`*^9}, 3.7120507521898823`*^9, 
   3.712050795547865*^9, {3.712050829766891*^9, 3.712050840280648*^9}, {
   3.712050891389358*^9, 3.712050946014694*^9}, 3.71205759241971*^9, 
   3.712057975610799*^9, 3.7120580433191853`*^9, {3.712058104977055*^9, 
   3.7120581623913593`*^9}, {3.712058237532304*^9, 3.712058250984571*^9}, {
   3.712058293807672*^9, 3.712058326672739*^9}, 3.712058537730687*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Predicted", " ", "incidence", " ", "curve", " ", "based", " ", "on", " ", 
    "normally", " ", "distributed", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mean", "=", "\[Mu]"}], ",", " ", 
      RowBox[{"variance", "=", "v"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"t_", ",", "\[Mu]_", ",", "v_"}], "]"}], ":=", 
    RowBox[{"0.5", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"t", "-", "\[Mu]"}], 
         RowBox[{
          RowBox[{"Sqrt", "[", "v", "]"}], 
          SqrtBox["2"]}]], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myCol", "=", 
     RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tMin", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tMax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRange", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tMin", ",", "tMax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotRangePadding", "=", 
     RowBox[{"{", 
      RowBox[{"0.22", ",", "0.04"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LogLinearPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"t", ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"s", ",", 
               RowBox[{"myCol", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], " ", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", 
               RowBox[{"{", 
                RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
              "}"}]}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"ticksSize", ",", 
             RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \
\(2\)]\)/\[Beta]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                    RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                   ",", "labelSize", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"-", "90"}], "Degree"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", 
               RowBox[{"(*", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                  RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], "*)"}], 
               ",", "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                 "False"}], "]"}], ",", 
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                 "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"55", ",", "95"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "390"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"LogLinearPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"t", ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"s", ",", 
               RowBox[{"myCol", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], " ", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", 
               RowBox[{"{", 
                RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
              "}"}]}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"ticksSize", ",", 
             RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \
\(2\)]\)/\[Beta]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                    RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                   ",", "labelSize", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"-", "90"}], "Degree"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"None", 
               RowBox[{"(*", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                  RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], "*)"}], 
               ",", "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                 "False"}], "]"}], ",", 
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                 "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"55", ",", "95"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "390"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"LogLinearPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"t", ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"prediction", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "j", ",", "2"}], "]"}], "]"}]}], " ", 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalN]"}], "}"}]}], 
            "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"s", ",", 
               RowBox[{"myCol", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], " ", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", 
               RowBox[{"{", 
                RowBox[{"Line", ",", "Dashed", ",", "Dotted"}], "}"}]}], 
              "}"}]}], "]"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", "plotRange"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRangePadding", "\[Rule]", "plotRangePadding"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"ticksSize", ",", 
             RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<CDF\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               RowBox[{"Rotate", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \
\(2\)]\)/\[Beta]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"1", "+", "\[Epsilon]"}], "/.", 
                    RowBox[{"params", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], 
                   ",", "labelSize", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"-", "90"}], "Degree"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Time (years)\>\"", ",", "labelSize", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
               "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "i"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0.0", ",", "1.0", ",", "0.2"}], "}"}]}], 
                "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "True", ",", 
                 "False"}], "]"}], ",", 
               RowBox[{"getTicks", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "100"}], "}"}], ",", "False", ",", 
                 "False"}], "]"}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"55", ",", "95"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "5"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "390"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Row", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"LineLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "Line"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "Dashed"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                RowBox[{"Black", ",", "Dotted"}], "]"}]}], "}"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Superscript", "[", 
                 RowBox[{"\"\<10\>\"", ",", 
                  RowBox[{"Log10", "[", "#", "]"}]}], " ", "]"}], "&"}], ",", 
               "\[ScriptCapitalN]Vals"}], "]"}], ",", 
             RowBox[{"LegendLabel", "\[Rule]", "\"\<\!\(\*
StyleBox[\"N\",
FontSlant->\"Italic\"]\)\>\""}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"ticksSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"\<Row\>\""}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{"Text", "[", 
               RowBox[{"\"\< \>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "35"}]}], "]"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
      "Center"}], "]"}], "/.", "myPlotStyle"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"plotRange", ",", "plotRangePadding"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.685860653039406*^9, 3.685860654380707*^9}, {
   3.685860694378886*^9, 3.6858607118092813`*^9}, {3.6858613279076977`*^9, 
   3.685861332587285*^9}, {3.685862249584676*^9, 3.6858625121436167`*^9}, {
   3.685862579349402*^9, 3.685862598468575*^9}, {3.685862702545871*^9, 
   3.6858627127125072`*^9}, {3.685863688820616*^9, 3.6858636924178123`*^9}, {
   3.686293076024486*^9, 3.686293078807382*^9}, {3.6863754904924183`*^9, 
   3.6863757423307056`*^9}, {3.686376039592869*^9, 3.686376257840508*^9}, {
   3.686377285709462*^9, 3.686377525460105*^9}, {3.686377563970949*^9, 
   3.686377574154319*^9}, {3.686377642527919*^9, 3.686377646359543*^9}, {
   3.6863778882152967`*^9, 3.6863778923988256`*^9}, {3.6863780270741673`*^9, 
   3.686378193484436*^9}, {3.6863782290437403`*^9, 3.686378294121036*^9}, {
   3.6863785961832867`*^9, 3.686378646460758*^9}, {3.6863791831066427`*^9, 
   3.686379192553739*^9}, {3.686380228805229*^9, 3.6863802397250233`*^9}, {
   3.6864024243395777`*^9, 3.686402428810791*^9}, 3.686402580014575*^9, {
   3.686646642032658*^9, 3.686646662503133*^9}, {3.686648323134224*^9, 
   3.6866483422448883`*^9}, {3.686649145801855*^9, 3.686649206646247*^9}, {
   3.686649267309105*^9, 3.686649273859928*^9}, {3.686649467797632*^9, 
   3.686649541170877*^9}, {3.686649589625564*^9, 3.68664959592067*^9}, {
   3.686649629913076*^9, 3.68664977321183*^9}, {3.6866499462140512`*^9, 
   3.68665002537844*^9}, {3.686650066680772*^9, 3.686650375573316*^9}, {
   3.686650494178249*^9, 3.686650683875194*^9}, {3.686650725530733*^9, 
   3.686650736313149*^9}, {3.686650779840146*^9, 3.686650794878701*^9}, {
   3.686650830757923*^9, 3.686650833103372*^9}, 3.690463337319343*^9, {
   3.690463519425106*^9, 3.690463542655642*^9}, {3.692358643106851*^9, 
   3.692358645753737*^9}, {3.692360346741235*^9, 3.6923603523569202`*^9}, {
   3.695382935983808*^9, 3.695382959513227*^9}, {3.695590303368299*^9, 
   3.695590314964652*^9}, {3.6955903560036*^9, 3.695590385327395*^9}, {
   3.695590475734643*^9, 3.695590478801902*^9}, {3.695590548136286*^9, 
   3.695590567086792*^9}, {3.6955906256161413`*^9, 3.695590706374649*^9}, {
   3.695591063427348*^9, 3.695591083608902*^9}, 3.695649542742794*^9, {
   3.696156300697195*^9, 3.696156328310823*^9}, {3.696156624101235*^9, 
   3.6961566241856117`*^9}, {3.696156655596562*^9, 3.696156765384254*^9}, {
   3.696156795807089*^9, 3.696156830021326*^9}, {3.696156870077898*^9, 
   3.696156880459425*^9}, {3.6961569141241627`*^9, 3.696156958056724*^9}, {
   3.696161760164963*^9, 3.6961617603552628`*^9}, {3.6971792061363173`*^9, 
   3.69717923527952*^9}, {3.7119451664030647`*^9, 3.7119451687637672`*^9}, {
   3.7119452430806627`*^9, 3.7119452432960253`*^9}, 3.711948456339809*^9, {
   3.711970690645649*^9, 3.711970711455888*^9}, {3.711970767037573*^9, 
   3.711970799195491*^9}, {3.711970846842822*^9, 3.711970916503469*^9}, {
   3.711970951503151*^9, 3.711970952966449*^9}, {3.7119709990618362`*^9, 
   3.7119711307926817`*^9}, {3.711971763259494*^9, 3.711971909037772*^9}, {
   3.7119719559089603`*^9, 3.7119721415235033`*^9}, {3.7119721817339363`*^9, 
   3.7119722855696783`*^9}, {3.71205014560471*^9, 3.7120504103390617`*^9}, {
   3.7120505799262333`*^9, 3.712050582317378*^9}, {3.7120506198130302`*^9, 
   3.7120506710598707`*^9}, {3.712050747000153*^9, 3.712050751201849*^9}, {
   3.712050793672027*^9, 3.712050794565625*^9}, {3.712050825306147*^9, 
   3.712050839766513*^9}, {3.712050871332884*^9, 3.712050945609661*^9}, {
   3.7120510105932407`*^9, 3.712051421010355*^9}, {3.712051464473606*^9, 
   3.712051467368425*^9}, {3.712051526311372*^9, 3.712051551581478*^9}, {
   3.712058336132338*^9, 3.712058527687859*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}, 
       {RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]], AbsoluteThickness[1.6], Opacity[1.], 
        Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV03s01FkcAPAJ04yRZvy0YalFw56QrKUG5XsTkpOGpNBgppoZKWUjdpE0
Kr0sa5KysrPbuTUbp7w79Josktey5bXWDtW2k2SHcKaTM/b2xz33fM59fO/9
nu/Xbu+RHWIDGo0WQsan+UZpSUGa93e+Ks//rol3YHBaJ74t5e6GAuZxcwnx
7LJUL0+uFIIknuc+OfqUXm/NTYOeBYdjUmLT+00iNjcXbAVM/gHi1wNcc2Nu
MShD1axE4mf/9L2lc2+CluF/PYX46SHXSCPuXcjOS4g+RdxxZ8+B1SvaQHfb
TKckHkq6xWt60wvotM333cQvvtnHz705AEr/L17PEd+eLg1Xj42ArvfujGM4
hr+lV8o0g2MQ35DkHUkceNme5bzwCtxerp4sJG7QsaBhuQayHdLT/iDedk4h
WfZhHGxTpWfNd2J4HDVn1GA1CZolAhMRsVPFfHCRTAuK6gPySuL0gDW699op
UDKGx+kRGO7pHwjTst4D09VOfpB4CR/7iaZmQFeKmp4Rb380oT6SMweh5RfG
+LswFG19KeIu1UG8LMStn3giwS0Gsj5AgZ9PRdxuDB4VI+YnTD9CdvaNFMNI
DBdPjW12kM3Dt2xxUjlxX2bAWu1netDINhcnR2FYlR+5IPxlARQhvlu3RWPY
ZCPi2pynIa3Dxy1OezBoaK2OJTsWIVsbtxZ3AQaLr/rFHaYGaLDk1Sa/GAxb
JzcW81sMkO0Zr3JxLIbkexGOkouGSKsSDqriMDg8t5xeG2iENDnhXVwRhp75
C9YX2XREE9rPdu7FcLx613qfPjoKslpucWU/huqazvxreYtRKO1xyGEJhtHm
6YDCCAbqqb9TXBaP4bJdM8+bw0Qc+5wLIwkY+CbvVng+YSLNu9wfAxMx0Oit
wqY8Y1Q5ph91SMLgFRw8arCFhSwFDYUWyRgSfsp60Mc2Qcwy17+uppL/o9iB
PR0myO1r+xyPdAzqxKKXHjlLkPK38RTzLAyXyjNDFMGmiDnUVVgpw9DrwZ55
aLQUqbK0mYdyMSzuDtMd6V6KCk5y4s3yMPjOvJ1MvsRGbSOZja5yDAvVlj8U
OXIQTy/cnnwVw3CyPKrxPAeFDvkoJxQYMv7cp+JpOMhykbFTiRJDKUOoGN1s
hmjuri1DlRgaN3jcCbtphlRzKYGVjWTdIlZgY0Sh7C46PG3G8Ll3U1UjnUKR
6ep0HfFVgSMjikGhoPsu7V+2kHz9PFlVxKJQgdzv+hnifOcTDLYZhVQihAJa
MchIZS5aSSFOeb1L6xMMUukL5r/rKaT1HzYeaCf9dy4w9rQXhdyK3ZuZHRj2
V9yqWeVD4k8x5d7EwqmjsUJfst824nAZcXSGYe2QP4UUkwIbaSfpj3xuXGcY
iXerKWa+C0N71dnahHByX5fV/rXdpH6eTxgbR5D7PDNO7CUOtKqrDYikUJtz
9mwbMVwPYD2KpVBl73n15d8xPGz5NS5GSCHk7JLfTrxBY1r3UUShK/0rd+qJ
eWv643hi8p4p65WSHgz1fO+6fgmFQsN5q0qIPY+WsY7Fk/Nvnm7sJq69ZCA0
T6CQbf1QokEvBve7krqqgyR/qqSadcT/A1XLLH0=
         "]]}, 
       {RGBColor[
         NCache[
          Rational[94, 255], 0.3686274509803922], 
         NCache[
          Rational[4, 17], 0.23529411764705882`], 
         NCache[
          Rational[3, 5], 0.6]], AbsoluteThickness[1.6], Opacity[1.], 
        Dashing[{0, Small}], LineBox[CompressedData["
1:eJwVz31Q03UcB/ANgY0hMH5WjBwdxuAozgTBGA/u+xFkwRIBERsBY0Q8zRSU
KygMDeUCxINqAxTUpRkPcRGTh3gSIiCejoNLUOuEAWkziePpuHkQ9P388bnP
ve79x+fz3vNB+rEkExaLFUwH9/dV10qzfD+VsMyzWW/H3iG/P5l8biaqJkuy
CFP00EdvyU1FrQQc5Fz0SENM2hsOg6R0os0W/SijTtz7bILUCGN2o+fOJIZ9
Wf2AyH0andE/rlRFzsw+JhWu7P3o6ZSKG4aHsyS7RStBS8te57lt/0Vcr9aF
otuMPNL2ioEUJC7HoY8UapNfevEPGXyv6jT6l+h10zb7RcKSZOWh36zflGny
lshg7FQZ+rOgvcbVpWXy0FNXj+7Y6lJm5a4S/hcdA+idYXcCEpbXSI2tahZ9
tHthJv3iOqmQebK9qTUh8wkiayPJLi93Qi+o3ONI7gtiTB2Ror3qH+86b7VB
ehzbM9DFl2YDnfM2SbZ9RyV68lzQvqWXt0jG9PoY2qlEvq28tU2AdcpcTH1I
mCASFrEguMifoA2sAZdrx9hQUPwsD23nMZU0YmUCqZ6KQXTI4sHysH4T6Kk1
MD7UmR1RLsnFO6BArTuJdr4vWNknNQWDtmUAPb55eXexjRk4Fok8fak/153w
9ps0g5rhnBq07u5oyfUr5qAfuOnoR63vWwn6OooD4tLOBnTZnj6xL58L+vnL
Af7UYZb/Ohz4jQvjbGs9mmU2oOy9YgHc0drKg9Q+Mpne5B0eGKbnYyTUqpu5
XZM2lgCjc0CwPygexIxYQk+o0Q2oZ05p5r0u7oSMX8NdD1GrfzgXqpVZAbfl
6fEA6gkvm7V7ptbANwoLA6nNxyKM6WPWMP5JqPEwtWTt+WKm2gYueHfnS6m3
dYKvNC58KBUOC4Op/8z8Jrq9iA/u4fVsGXXOH4k9YgMfuP4+q+9SV3GUWn2g
LQj8nCyOUrf7ezVEVNsCf0OQH465nSJWaMpAheYJP5L6Vd/exnYzBoyBo0L0
1VgXTjSHAce+Vld02beLjRoeAxcOXQd0idt5jo0tA8EptzLQeUSrY7/GgFZQ
PoFOSZnj/u3NgCtHXH6c+mmhVJHvw4Cgv/M2+sP6urtOfgyMq6U/oZXLZxVK
CQM/n0kbQr+fs6Pp0WEG3GMWNtBHSkTxoxEMcLsMCVHUw40FTapIBsJLuk+j
Q+4vWFhE0T7qyhy01L65KUjOQCkkatDkdhCvW8GAPNpjCH2vvzY+TslAz5bH
FNrfYNW8kUD/M3jPo8V7p+LFSdQlkf+hW8J8m6eSGeBHpPFOUB84e4P3cSoD
2fGX7NBNahPlLhW91/mdCL2/Nbm58SQDqaphD/T/X4fsvA==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., Automatic},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"CDF\"", 22, FontFamily -> "Helvetica", StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          RotationBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1\"", 
            22, FontFamily -> "Helvetica", StripOnInput -> False], 
           BoxRotation -> -1.5707963267948966`], TraditionalForm]}, {
        None, None}},
      FrameTicks->{{{{0., 
           FormBox["0.`", TraditionalForm]}, {0.2, 
           FormBox["0.2`", TraditionalForm]}, {0.4, 
           FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
           FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
           FormBox["0.8`", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}}, {{0., 
           FormBox["\"\"", TraditionalForm]}, {0.2, 
           FormBox["\"\"", TraditionalForm]}, {0.4, 
           FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
           FormBox["\"\"", TraditionalForm]}, {0.8, 
           FormBox["\"\"", TraditionalForm]}, {1., 
           FormBox["\"\"", TraditionalForm]}}}, {{{0., 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {
          0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}}, {{0., 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {
          0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}}}},
      FrameTicksStyle->Directive[16, FontFamily -> "Helvetica"],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{55, 95}, {2, 5}},
      ImageSize->390,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{0., 4.605170185988092}, {0, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0.22, 0.22}, {0.04, 0.04}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxN1nk4Ft3/B3Ak7m3mViGiehIpWvAoKjkflOJRUVKyZGmhFD0VKQnZoiKy
JuQplBSKbGXpJkq7nWTNfs8dEiW+Z77f6/o9v/lnrtd1fc7MOe/5nJlZ4uC6
65CIkJDQdmEhIfqcmhAf7rHBUzc5p+JCdG4qUll36OERxb3oj6W+WhL5qei7
pPv6tYpH0D5/MzK0MBXt95+ellP0QDKXvKT8S1IRUVxuz1UMQm5Zi+IvVaei
rw2K85iKMUjN/uN0/udU9KmnbnC2YhoKvxywX1g8DVW7rN4nqvgUbZtyeaxi
k4ZeP7JyXrGwCjFmpTQ1rEhHTW73tcv7PyAZxandz4Tvoc6TjjuD0hqQIFon
4w/BPfRwJGH3l47PSGhcqB6kMlDbkdjEvsYOpK3fc2KfyQNkGK3AUp3pRtqM
xl6dN5moYIKFCqT7UFVTzLOCi4+QyeXkw5KTA2hsXLVSOz0LlVmOixbI8lHj
KHfu8VfZSOXBlHGUnwDVzrucWTLrMTq3ZdXEqOAb2nf9rfDkoSeoaPqZnYf3
KKqxtTL/ppiHODvv6tt/G0OcQ3YFBCcf7SgZ+uJ6aRyZyzvzGj0KUZRRl70i
OYHyZRS3K217hoaOqtkg70kU69ylvVCtFGk++DzvIvEL1S6wc6xaWY6u+HcY
KPlNIf2kTvccOx46Lhnmejp4CukekC2XPMZDO+7o3HxxbQr5Lz+f6H2GhyR4
MSP2N6dQrf7tJc4hPBQ1a8ftxCdTKLz12EjcEx5K9Cucnt87hbL2enxwZVWg
LJ/IApbJb9StXtwmVVyB6ry2rBFITSPW+Ysvbmu/RIuqA0aWyE+jqndzvT9v
fomcpCpzdytMo/Rj/8wsMXuJfmYa6jxdPY1eNRS7VTjj+i9bjby3TqOaCd9C
95u4Xs/YkeM5jRI2MU8HC1Whqdk7Y5a3TiP5QlnrqA9VaGnYvhm7lBlUuNTA
qSL8FdKTt1eUDxGCgc1bLy3c8hb1CVUui98lDPo+u/8WXPqA5qvXH3pNiMAZ
6Wc7Zy+tRUb8TTE7K0RApscufsHiBnSqaM+yw1dmgazplMjp5makVCszssZQ
FKIchNvjatrQ+6lQuSvc2ZBZLmz76UUHupBjobWxbjbsb0PKa/W6Uc7jmrBb
V8VgffzNQ6tTvqJ23siWiD3iEMEX8HQU+tFu1vMer33icN5WZKmmaj+q3Hk5
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
WsuLzv0/HznSyejV+tcaTw/nZh/71/8Bv6NaiA==
         "]]}, 
       {RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
ngVw4dIPBvwfJeOASg==
         "]]}, 
       {RGBColor[
         NCache[
          Rational[46, 51], 0.9019607843137255], 
         NCache[
          Rational[97, 255], 0.3803921568627451], 
         NCache[
          Rational[1, 255], 0.00392156862745098]], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., Automatic},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"CDF\"", 22, FontFamily -> "Helvetica", StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          RotationBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1.1\"",
             22, FontFamily -> "Helvetica", StripOnInput -> False], 
           BoxRotation -> -1.5707963267948966`], TraditionalForm]}, {
        None, None}},
      FrameTicks->{{{{0., 
           FormBox["0.`", TraditionalForm]}, {0.2, 
           FormBox["0.2`", TraditionalForm]}, {0.4, 
           FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
           FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
           FormBox["0.8`", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}}, {{0., 
           FormBox["\"\"", TraditionalForm]}, {0.2, 
           FormBox["\"\"", TraditionalForm]}, {0.4, 
           FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
           FormBox["\"\"", TraditionalForm]}, {0.8, 
           FormBox["\"\"", TraditionalForm]}, {1., 
           FormBox["\"\"", TraditionalForm]}}}, {{{0., 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {
          0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}}, {{0., 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {
          0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}}}},
      FrameTicksStyle->Directive[16, FontFamily -> "Helvetica"],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{55, 95}, {2, 5}},
      ImageSize->390,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{0., 4.605170185988092}, {0, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0.22, 0.22}, {0.04, 0.04}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic}]},
    {
     GraphicsBox[{{}, {}, 
       {RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]}, 
       {RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF13k4Vd/3B3Af471XCZWQypQpJCqKffYmUyWZKmVIFEIRkSShQshQGZJK
kaGIkDKGhEQhqShkznQRkvF3zj33+X390/N63mutvc4521OJ2bqanGJlYWF5
wMbCQvyZmpgQdWH3RYyF+HETACtLKk+skgyGpNeB/q+Sq6mScaT9BcHnvi/D
HJJppBuFQeXjv4mco5mkeUXA9+wVaWwWL0jbbADvXRTN2SVfkRYVBTPzrfD0
y9ekQ0SBeNgV6Y+6RaRnRYFvRuNM3OlS0l1iIEPtYsfCXBlznjgY7uHtUdIt
J/1NHAh6FNbFfK1g1kuA50U3Mf2kSub+kkCH1TZ3zvEtc74kcI+mJRyfqyIt
IwU+ZFuclt1QS7pcBgxptQtFfmPaURZQWo/VTd1+T1pQDmgvHN1STvvAfB9b
gG3k9/bN1UwjeRAgfjQ8LKCeNEUBlOmbjx6ebSCdrgh+tH+9X5L3kdm/Fcyf
PWIo7vqJtJISSNz37OuMeyNpkW3gu9tTtcrfTcx9VcAQi0DoA51m0jkqYC4q
oN3nEdNoOxB5Ye6ncvQz8/l3AMmLPGliwUyX7wDymlWfVr1kmncnAE1bxUZ4
W0jn7wTWE5xVKbVMr1AD9oUlI7dmmHZUA2cD3NcGSH4hXaUGrvB12Fv5M+2/
CyRte0kVUGtl9quD7nN2B4PTvpL2xcAguL7q2HemFzBAp6Z9kuf+xuyHYOHR
0MHms0zrI7C2+ZzRhp3fmedrApEHt3nHHZjO1wTiTi8bK+8yzaIFFFn/GTku
Mp2kBfSV/Y3zqtpIj+8BhkuP+IJmmNbXBofq3jaZy7STfqwNbG25TJbCmLbU
AZduRZjsNf1Bul8XPJ9MNO389ZP0yX0gNvp3tzVvB+nWfeCK0k73DozpffuB
0dlPUT/vMb3bAEz8/u9j+6FO0jsNgf2u9Jj1Z5j2NgRtIYZWFteYLjIEldL3
RtpymdY6CN4rJ3CMcnWRVjACCW4qkiMnmT5sDMziOSnhbkxfNgY85d+Ht/gy
nWIMAlf55znfZnrKGDg/r9carmA63gRojJw6MbTxFzM3BR0O8Q8GvzFNPQLi
o3TTA/qY3nMEGBdOvRCeZNrvCKiiGb8z4O4mPXMEPMuijuQApsfMgfcfn10X
HzPNYgGURWT38GczrWsBhrW/GjwrZjrcAljHqtj8bGFaxBLo7BoJ0uTqIa1j
BfivWLVQXZiuPA7q07g7HnszzW0DrjcWDqhfJ+2/wwbMignMn3nAzMNtQGfV
R7HmRmaOnQCZNOSasKOXdJktsFcZ81bRIs0yYQs2WSYG1hsyLWkHbmXNxiw5
MOvD7cBFoxcltglMnzwJdGPFaVuWmd5uDxpVZ7RucPeRdrMHx76/vzSwjuks
e3BG5NxoshJpFlkHcOfxm0YRW6blHEHPc8s4nnfMemMn4GKk1OjSxMwTnMDM
BBv1w09m3uMEaDue+QTPMH3RGSgX/7NikeknneMC/GtiJSdDSbMYugLaaScr
ozimU13BHRoW+zyZWb/sCtIO9HE5lzBzCzfw8bPKcM8o04LngEhX44svRgNk
fbY7SA1IGVKxYrrPHShJeEvcOj3A/J4eYI/9phjDQKbDPIDTyBnvmjym3c+D
wlkaLBQYZP6+eYEFw4xnWuKk/R95AeyJnmC9AtOdXqDS+NpEhzZpZH0B1D9d
TGb3YOYnvUGH5TjF6BPT8T5ANC/C83sbc36PD7ClKnTb9jP7FS+BgZeniz0X
mfU1l8A4T8+Ze1t+M1zOcRmwVnxp7g8mjXKvAO1156HbbdI2nP4g6Ax/5r8H
pEW3+wNu4YPXVxQw66P9wRqPWlXlXuY8kwAgvbk48TIaYjjpTyBwunSUymXA
tNxVkNn01zPqCGl/26tAyW/7weSzpEVbroLdX7P+e5/IdPk1YHAjyX7NP2Z9
aRCI6BL6F8sxTM7jDMbv4+0wIX7S5UbBwLT/es7GLaRZBoPBsT3OczJWpP0l
boDTizsiQAXTTWHgqVm2aHkDs18+HIw8k8nTaiNtcyMcuB1b/03vD9O6N4H3
KxZxk80jDHc1RoCgcx9e2t8gzSIQDWprtfV/x5BWOhgNaKJlbc6PSaMb0SDi
Y86yWzHpxuVoELMldu+lUdJuf2+BlD6bn5HGo+TzrY4B/RptrvzWpHMsYoDM
HVPWGCfS5Skx4JmWrnTCVdKiu2NB7sMt51JekjZyjwMVR2fYC4XGyP1FEkDJ
qd0f7DeTNjqXAArO+UWv2TbGvB8J4OkNzo1u+sz6C/fAnUIBVekLpEX7E4G9
kOrpmBbS4/8lAZvNl7bu6SLNopoEjm17Mz0+TLrRJQkc3KsXaMBGJ/dtSwJq
F4/cY1MmLVP+CNC+X2g4F0m6Ni8ZsPcV3950j7T5TDJYHl8+2pBK+tuuFDBF
CemXKWPWv00BP9XilztHmO55AswNfghKbx5nmGKeDg6ZLM0vypGufZYOTMxF
O1uUmGbJAAYnTz4J1CDt/zwDaPqObOswJe0t9AzIZS7siwkkbaP8HESeffHO
MIS0aMJzMKVkjygRzJwtG7x5+WnHpbvM/rZsYPbmseiJHNLjDTmgMODIPeEC
0vKUF2Cj9gqBlmLS+ntegN+1ntx6NaQFS14Av2b9GfkO0vGvc0HPnUW3/h7S
vHO5QP9I7vDD36SvaeSB1T/W/+KfJm1ZlQfS+8Y+zHJPkO7KB82zdx5V7SLt
cuAVUC3eK+IHSdskvQKJl5diVXVI35l6BRxYHcOfGpGuT3oNFrjVL0Q5kBah
FoETH+kTe8+QTrIvAtVRKS5sHqTD3xWB6LU8tl5+pEuCi4HUpl8GljGkZTaW
grBfMTVr75FODy4F48n7tD4lka6dLAXFMvmqWpmkpxrKgJFysLjMW9L2BuXA
R0dh9s846dA9leB4yCcOub/MeeGVQPvDudU2i6RZv1YCHuMCxXrqJMN+rm/B
Y0t4KkWctEZOFQh++Mu9TYZ0G9s74NJ91Z93K+lu83dgp2PtPV910kZc1aDO
w7jZzIy0jVcNyC740xl6jLRgaw248y9mtNyGtJdqLbC+0kZROENabbkWTIba
QY4g0lXJdUD4sWfmy1ekffQ/guXedUXDpaQtqz+CXumiGrEq0md1P4HnWUvd
NxtJZ0g1Aq3CYCH736ST1JuA9IKsdCKd9OjVJrAC1m9vniZ9paEJtFbxGmGs
f8jvdbIZODXeDRJYT3r68WdwcLXGHQMx0iIzn8H2wx2PAqVJl+xrAUvt4qVj
KqSvzraAWwPP/lQbkF62bwXFS6U2F/xIp8V+Bwv3dCh7rpG+tfgdYLsasnlC
Savat4Fyjx9LT2JIf9JoB9WDc4ktmaTFWH4CrqBA7aRc0m89fwJ9CdqI82vS
dqM/wQcrIXW2KtLl3R2gsVn1+7Z20pc9ugCf2xv/xS7S7wu6gMlKPZn3/aTV
57vAF73DF2wmST8J/gXaSs6vjaROEfZXyO4GvakvjEdUGWbRwvrAZu1d/14B
Mk+K7QP2v8qTru4hHTzeB36vb6QLHyTrKRn9YCxq7OZee9IZCoNgq6LXjrUu
pNfeHgRuHxZ/dJ0jrTs3CP5wrJT3vkzOW/fxN5j12VKXeofMXcOHwS7BvHPu
CaSnWEaAz8vdQlgSWX/9wghYpO91/PKMmTuNAtZTjpzsb8lc2IUOVhx8onVi
gmF0c3wCNLgIX874S9bv1p4EEaGRryYWyfz63UnAW31RPpA2TbhccO8fsAYY
CiRLMMyiUDoFvhx7azQsS7pq4zSI9VYLU1FiGGkFTgPBfHGWKg2G/UUOzgCR
LX9/9x4iffa/WfBT30VSwZKcb+cxCx7Y/7L2tCX7YwdmgejjD585XMm8p/Uf
kBRKKpUKIfNLzfNAgWtvtGMRw10vJVmwMcmyDznlDCfluLNgOVoqnP+qyf12
V7Jgyn4bLt34zLCosP1/2M7piZNPRxi24axkxf7yOzycnCT7nTawYa+Vfnzf
/Y+c/8SHDdvtUm34gWOGsU/tbnYM60lQG9nIMEtfMwe2zMLrsX0zaQmMEyvf
eD3LdwvDXTefcWJax1zFV6ox7C90kwvTbdqzQtGYYdFTLlTM8M1Ip+tVcv7j
tJXYhbtTLxJukF6/iwdL8li4+i6S7L/ewINNSq+QWZ9Inue8vAqLi9riVp3P
cGOGNh9W7qSiNVHEMOJP4MOGtNXXiFSQ+6hO8GEa//a9PtfA8HhXCj/WdcKJ
ZUM/WV8hvgajarg3642Q82WD12DKAj4p7pMM8yaNrsGu1d3Qr11i2Oh3+VpM
ViUjymPdX8JROwLXYe7sg6J1+qTZL63H7nXQJ6cMGfbX4RTBql7/rdp0iGE3
lzsimMAZrtOeJxjuyizcgBV/kXoh6sNw0u81olhvtuLV/f4MU3gcRDGe0J2H
vIIYRsNFopgNpvvvwy2yf8ZBDGNPO6V54RnDjWe/iWMKAWdWP37BsNL5XRLY
YQvPvvpXDA9eT5TA0lddvyFeRdYvOEpiBt4pTQ0/GM4JF5HCYvb2nJDkmWXc
l7p/spiwX2ND72qG/Y97y2FJuaW7nggxLHjpnxz2dH08n9Rmhrsusclj5aMG
FdIaDIsqqiliOuK7FQY1GWbxr1fE6g5L303XYxjV223Fvrz575ysKcO8dQeU
sKHoAtEtTgyntMVvw9yqk8OHXRlWaqVvw6bnomafeTKcf1tfGWM56dwoH0Da
Z1kZW7tT1F8xnuE7PNe2Y6jtRue2aobTiydUsWqeC/snPzCcWXFaDdu/5+Sr
3CaGXTR61bDDmVikyk+Gx9917cKc/f5gO6bI/XP/qWPjuV1Pp/+Rz98XpIF5
DTQIFCwzfJ5lHcD8jdLHdnL/IzyyFWFYrLjVAzVxhmfELREmcmQf7Z80w7a6
2Qh7FKbqVajAcL44uyaWOcVnuHsXw4ryeZpYRXX1oroRw4Z3pfdgI05KVtCP
Ya1DHrrYxCZuS99rDM+1j+tiMy19xwpDGZbEzulhLPCeuUocw8ptPvrY2tWc
ZtI5DJu75u3DhGu7TE4WMNxWv3c/Jnq52PhRCcNyiT37MbkBt4Pr3zNs2St2
AMOK2/et6mb4+fUPB7E9bgV7DQYZdhiBRpj+5mj9G2MMr5JLNMJMInV12eYZ
frPGwhhzsHuh+Xf1HGH+TVMmmItgONouzHCjtY0p5t5gD8+JMmwj9skU81UV
AcPyDHOcyTfDoriD1Tp1GE7rf3gYiyk/oSpiwHA+q/gRLMFTY+dRE4YlZNKO
YCmdEyqfrRl+3FZkjhXmWW6tucAwN5VmgZU5qiqy+5GOT7XAqjbwK2heY3hT
i64l9jG4Rq44imGr7FtWWLeFslR2BmH/H/sUbLAB3pWbR7IZ+e3YMBts5N2A
hGwBw5dERmywma33xZIrGf7Ek38C42anbIhrZ/QLyp6ww3gLu9e3/GL4Xmez
HSZwtlSYb5BRX7FX7yQm+s1dMGyKkW++rHYK2575c/WVlfOENQ9jDlhs8f1M
49XzjO9hVeaA/a2z0pEUYuRXoKYjVvT7p9d7SYY/fTl4GoPSHd9XazAsqXHL
GUva+cC9X5PRL8m2xQVj1bXmLtRj5MY7a1ywqpMdGtamDIco085i+x53PEx3
IozCna3dsMwXD9QuuREuv5Ze6IatrLBuOuDFyD3+CJzDGjs7WP8EMPrVe7+e
ww5t6DwF7jLyY3fPe2AF8g+XVj1knD/97JcHJqhxPK47heHgncbnsbZjnbXB
OYz5b8ZUPTGb+M4tzTWMeYP3N1/AKtMeVqU0MPIDoukXMIlXx60ufGb0Jyco
eGP9XzojRDoZeWyZ5kXMeXXXhP0MIzdvjLqE1Ysnhe5aYOyzUUTBF1NUtpFY
wbpAzHeZq/fFxo26zF6sJMzy37t1fphXRNereUmGxTjP+mPf7icZfZQjnBTy
4oM/tivL5neSEqM/5eqWAGzhQ5ewrgYjV2mcCMACqL8uR5kSFlUNTbiKdQs+
ErA7ynDBIO0api1zInvHcUY9vePyNYxT71dXmxPhrqom5+tY+LVfezYHMurF
H50Oxs6siXQ9H8I478b0fDBmmKJx720EY7/Xf6NDMN6quMkT9wgjEYf3N7AY
NsNHD/IZ/VGVjuGY1+35+tEixvxg4/U3MXOJjFmNCkYO7JpvYsJ72I3aGxiW
CjaMxB4EFi2tGyBcLiCpGY1d4XeUcxhlzA/f+jwas3m89nDBH8b5AcsbbmHi
lW5ZZiyLuI0Wd3LextL+k7aMFiLM+1Vq/g4WEt0S3LWJcHmKp38M5iQWmLdV
irBSkBw1FpPX/En7qExYtFVscxyW43+7kGbAqA8ZvHEXi+bV7DtqQjjqG4dC
AuaeNMabYc7o9zJqScC2l+911DtFOAd0bE3ECpeXBa75Ee7as37jQywhMkvr
8zXGftY/+x5ivpsszoqHEWbRP3E0CcNgwbvyOMa8+0jxEVbp53J+MYdweuvg
v8dYMo9wksErwvpqZueTsWsPaj7cKyXc+HVwIhnTKxOX2F3H2O9Rz0wKVr/4
rcmrh3D8r3i5NCzrZtDiu9+EB8fflqdhERu2y64dZzxv7Odj6ZgRiPTPWyBs
/oR2LwP74quzdXztErHv9X7DTGzj++uTYiKEvSXa2LIwx7XVL03FCUeNu5Rm
YXNZuhqvFBn1c8NYNraxU2+vnx5hSrMbfIE5bAlZkXOA8I8EhecvsJwLtZ9+
mRKepVRsysX28O49rGPDqN/0mjsPc9TcZ7fiImHfJSHqS+zFzVAp7AphM9fi
qJfY3Pe6367XCbP8+r6+ALvpvt/tczTj/KphjVdYbrLB5YSnhLvmBLMKsXl6
OKrPISzz0dS0CNPWaGBbKiCs8eDbYhH2teVA6Im3hBFtu00JtsBxME7mB2He
whCrN5iOSeSxY91LjPuQu6Yci3jwaUP4IOE6Tu3L5ZiYqlEKfYpwrFX84QpM
19H4RcHKZdyY9lr5t1hkfvT5wdWElXJlM95i31iaVYWFCattvSxbhTnfNSm7
LEVYwHrX9ndYVJ3pB21IuFos6nwN9l3gToSXDuEf78R5ajFxuxbj9P2EvwXm
P6vFXs6bfeM2J8zTqvnnPdYmf7iv2Y0wbUryVT0mcTE2nf0C4d6Ceo8GzOVd
q/POy4TvONjs+IgtWR2ZvHuD8GHPpppPmESk+bLNY8LTYu2xTVjtDj9LmXTC
E85DrM3Y2R/JhfQswo199841Y69l6R5+hYQHgcyRz5hh1fXBe42EM4ebtL9g
U07PdOxaCZvYt9d8we7yNT2W+0GYm1XQsBXrtRaxKhwg/Kvn0smvmM+/3KbW
JcK7ZvcUf8d4jVzWHWRlQfg/lxrVjrVhthLL75Q5CMfx8i22YZQ6SYk5GuGe
xI+GPzDTdW4/QwQI578229yJpQ6xhrsIEd4Qqdrfic2Wxuw2EsHtX75m6FAX
9uBkcdw6cSI/cva7+C/s9wtOk1QFwrZspe3dmMb1uyyhSkR9Hb3eqAeLMJfP
PqNC5Jr8JbU92PZl4xU7dhF5OHdARS92xeB+9Vttwk58b771Y82blDzT9Ajr
TnfYD2CSfyolwvYR/i/Qd3YAq7s76G9iRPjr6RtSv7G1AyrqvywIT1+9kDOM
ORZV/66yJs47K8ZjNYIV3Twan36C8GaWnpWjmM32K9OuDoTve+b5jmHPAuqy
l9xxlz84x/5+HFsys7Lu9iTyUyc/b5vAjGTGV1R7E8713Xl/Apv5uNbpph9R
7507d2kS0xQ5ISkSihv16lpZTGEt2U4i2E3ClKQbfVOY/Z7za2yiCMtwOXhM
Y+FOwewpsUT/4a6EhBms9XVW75Zkwg5ZrUL/MEeDVz8OpBLPk0v3qvqHzXeW
t7hmEPm7W6kec5goV0tVXjYxLyZ3W9c85nRoLkW9hNhPVyBueglbGGS7b/WG
6E96YFC7jEX6roy5Ukn0Ww4YG7HA/GTR629rif7Tgqe3/QeXJ3RP7f9C9If6
fBZkg7euG1md+UbUu18cTWCDkkLHDkW2E/POnwgQZYf70Bmdz79wJ+2/4LWT
A96JuL3ZYozo3xl+OIoLSonf33B5AndX0pUFJQosfJm69uEUbtHx5yNfKLDj
RyFHzxwxv8tJTIEGZbd09Tlx/YdYbBQU0ZqVsKTs989wGu5y9TexbSuhocmf
L89X4hZ1YldL5YHnL3JWT67GzbuiaFqKF5bVyKf6iBL1Xe+SJvigkcXOB4kS
uI28o6ku/LBnDMaWSeH2b3B/+ZsfUgRMg1gVcEe999xKXw1NT160D91FzJu/
rbFZAPb/DbTO1CD2CTDZVyIAvcPCD3+EuHMK5yyPrIMPch/q8uviVpo3Xbor
CAdZqqUSTHCP78w6bLYeZmhWDgcdwu12yVyWVQQ6BZbleJjjbjzqvi9fBA6z
vdp9wBp3l1RZ7+aNcIwz3ZDFCffgsX31SaIwWy9l9agLYdOHvjQx6BaS9O27
KzHf+sd7LzE4Qb1rm+dJvA/FJt8j4nBqRaiXfQBuwTuW0uqS8OWBIHXTa7hf
X+J5WCwJvSICWVAwbv3kdk24Gf5ddSlU6CbuWnZFcyMpOMfv8qA+nnjev8d4
EmVgsamjXeE9Yt8vZ8XVZKHvnZMyqQ+I+iS1ld9k4eJaq9wrKcT7E86qltgC
WYQMq5VziP0eXgweVYAVR/eFbcrDHXKng/uZIgxM0DVaUUB8H8u6HWe2QjYR
2NZXTJyXWDFzRQlyblIai68h/GlRZJsyrDkun3e9DneV6yehFGUYkiTj7d5A
PF/01z4hFUgVF2M1+Iw7/dRPJZ7tcMVmfoHlDmLfJ78i1u+EDad42od/Ec/L
3bGUuhNGpNKSvvXi9lVM/LxDFa6SYZPLHcItsjt2yUoN8m+ZAqdmiHk6uiVt
u2Gz8ziryT/c8S8Gcq6qw9uZIzXYAm4XudxSJQ24RrHPWJCVFbFob7lyNQ7A
ddtaT31YiTs3V/XAAQRXNN7zyuDFzfvVLOwFgiyuJ4KDV+OmVYrICGrCocyR
9D1CuJ+Pfn05ognLZNhGiiVxR4i9L8nfA/NqahfuSuOW3/ovREEbpttHrPSW
w63UHCafoQ2jU4S2blfCvXA4SyNDB54UVXLPVMc9+N759Ec9ePTNdGAohltK
r771uD40tC6+7aiJO+EH/7MpfaiaqPtSUg+3f1zWV5l9kCZoNZtognujw8C1
UgO4XCBOvXSIqH/q7ORyAE4dGhQ6ao57REPoxCZD+PO2h/paa9xTnX87ow/C
nFWhfjdP437qtO33IWP45PnBSGcX3CfeaMyUGcOEA2uT9rriLo5LdpMzgVfD
kio4PHF3Rgj2UUzhYa5X7H7+uOMCMNs+M7g/1Xet5VXcXklNZ+wOQaSjJbU7
CHe+4Dur3kNQ9mqD3kwYbhR9VJ5+GC4s9YSejcPdkaNnK3cUTtzPuGeQgNtv
W7pLxVHYr+GaKXefmPfq4YDFMfjJZ66h/zHxfrPP+t6zgI9nePmOP8f9OT3A
VM8axsW0ioEXuGX20/kWrGH49kTl9fnE9/6R25d/HHq5S5t9LWRF/t8vfr19
1wbuHQNxB98R7++ViJmyLfQ74DPhXIt7d11QbJotzM0s2B/ygdj/y0zuJjso
4ryVpaIJ729MSSkVPAnHBkRPK3fg+TL2lqJkDyX0rN4a/sIdJO/PVWYPzVPv
bnDuxetVihzPHXSAFSf5m5OHcAs5lrT6OsI7v9jU1/4l7oP3X0V2Z1iLUMy2
OdzWFk0fsp3h4kNf+oFFvP605JLfcRdobz2dHMTGhp+nczbowxm4q71/xewq
NoSOsJXYubjBs7slHNasZkP+nZsquz67wcd3j1coCeC+z+HRAM7BFebfPE+L
4PUaXH/lhdxhR8v7jjYZ3FKhn2PoHpB/O+euv1vw+XI6aZtczkO921q3V2/F
87WszyOGz8Mc42I9gx34vP6djy3/eMKrHzNzSjXxXDjySZiMN3yt8JvWpo17
XsuPt8wbjoRvPjWjh89bUDvGduQiPLz/gdBWQzx39yi/fNsHytRGBiYdw3PO
z5o9apehlXT9jxIrNlTOk9b2Z/gyvBVEUf1ug9c7J4/zJvvBee2AYT4HPN/z
ya6Hxx9+rHA3u+rBhkQHFgTfJwdAVrHs5w+92JDNzi93ingCoar/MKXkIl5f
5ZC40jcQJmEnS6eusKEu9R2fqNZXoUfxISn7cHx+TYFSBboOW2uuHTgQie8D
L50Me3UdqrXknd9+C68/qJ9fqRQEl0b43rLG4/lTUf9UuWAYuvHj8YfJbCiJ
/UbATXADjsotBgWl4vM8e0Vo729AI1X552cy8H0cezaaHQmFa41CF9Sz8Xwp
ZPSqbxhMCtC9+60Iz983m1YP3YRsEZ7lb0rxnNPSRzQiAtonpAykluO5nMOm
/O2RcEse607PajbUWCnX0KUTBQt6y5r5mvHzO59tDX0RDev1VFfs/82GxsMz
bTd034FbzexVlEdwl0YrKxjHwFs2MceE6PjzfO3rNq+MgUcu/kkfmML7uwr3
ST+Lhd1Ps3WusbAjpXs1/ffj4qHOqw4XZzZ25KbwOuuG4F2Y/nblHRNOdlRu
xtfZdu8uPPPDuVt0BTt+a+f0WjIS4OxKmSul6/D68Kowtd5EaCF8JDVFmB2N
23Nonrx4H5ZJBTWEbWBHUV0bn+nwPYBXYe/6YxLsyL/S4o3p3oeQ51zS6xlF
vN6Ou653NAlubhGc3KrLjhxnr04MvU+GtUlltof24vVpwk837EiBTmdOfvYx
YEeCs/YqJo9TYA5nTv47E3aUJG8b0hn4BO7epXfB4jg74h120rS3SoM/OUYH
/G3x/aM3rAn8ngb9m2+Zp57C973W/L3jSDp859yxa8KZHc1yv/96ySIDGj3w
XAjyZkev+SUC5K48g5NO689kXmJH8dyprtt5MmGMasXPJj92ZPQcK6h4mAnb
Gle8EbmOz+M4rhNSlwVPsaUE5EazozX6e4LbNuVAH8dmzo6n7Cjk/XLQqm+5
cMMO7wtsz3G3+bXn7ciD5f9tHJR5wY5aYg1FO+/kQY57p997vGJHC+/V6O1H
8mFUA0s4tYodmeX2nB0cfwmVE1IXFGvYkY3X5rWYRQH8Ym9wxqwOf3+3NhwF
NQVQmCXe8GEjO8o33dKwN+UVfKK8lW/HT3bUpaGcxetRCPWXWwKOdbGjEeHR
FNnhQjj0wWfySg87Yjd/WLLyVBFUOlX9ue43/j69hrz1rIthUZxVrM0MO6Ik
ukuM25fCxoWw9eGrONCU20OKylA5TJOe//qYnwO5vX/wVmR7BfQzcbpTuJYD
xVMLJViuVMAt6forB9ZzIPm06xWF6yphkCnHsqYMB1IbPPV106G3UP2pX/df
xIHuOPbIfWKphvxfRh/waHOg/Lj/zOnHquHgsqXFZj0O9CM4aWB9QTWMPaTe
YnIAP5/uv+G+aw0cZ5l9l3UUzy84bzSm18LUI+cy7Nw5kG0Qt1iLWD28HNh1
yseTA//7s89nIrwemmUdFI/25kAjLuevb/pXD/9jU7xX5seBKM/ndTJbGqDl
86FwoTB8ftet3T7xnyA/x0m3T8kciDW85qpgRhO8nHtYVf0LBwIKa0raK77A
wNDX5SLfONBZx1/XH7G2wiBb4X1LbRyoNSjyRfWeVhjF32FZ0cWB6utmJ2Rr
WmGK+6lAvREOdD5P3FGh+SusUz7fYMrGifLn5DJa/n6HgnnRdi7bOFH0rLWJ
hmcH3BD2Z+TAdk7UV82ZUFLWAcXtDnltVeVES1lKjSconXDLaqEbkxqcaINU
SClfYifEPJKee+tzoj9dH9JtbbvgKZXsf9eOcyLL/07syAz/BXPz6iPv3+RE
++29D2V29MC/+5/YlkZxIqlHQdpOnL1Qo/fyjp+3OdHZ5xeoPIq98N2are0i
CZwoMcvfm+VyL/zmGS2VmMqJtN1u0OyE+uCS6uHShDecaF/dc+PX+/rhnkbF
qKJKTnQ44Pk2frd+GOLIZdf2jhMleClkqsX0Q767rynC9ZzIeMtkWl9HP5Sc
Eza7+40TBT1Jt4t3HYB7SzqH4iY40ei3jWd2XR+EEWavS19NcaIHOd2oOHUQ
No9ERX39y4leC1nD6ZpBaLlBa+e6JU7EE74cdZP6G571SwmIpXGhecuJVdtv
/IZ38P83xUhwofgdjQ1xF4fg92+aw/lSXOj4qxk+pdghuPGccFmLLBdqE5e9
7ZE7BNMefbBbo8SFLts6a839HoJFrIrZtzW4EOXhCsqc2TDsqprUuXWIC92X
3R/nJzwCTWllfb7mXGjG4O8mIaURWH3wxnUHCy4k/KhP015nBGa2bXqncYIL
GVcf8RZ0HYEXxg20B1y4UPODc7KdZSNwaIdgb5MrFzLc6lDD2zwCLS/1XC1x
50Lvgk9OTveOQC1On7fR3vj8Br7Oduoo5BFJ09K4xoWSREUHNxiNwoAT7t1S
wVzo1aB+/B+bUTiVCgL5QrnQS6/RvVfOjcLv21oq+iO5ULlwo2lR9ChM0ftP
M/oeF4pVYQn98HEUqntYwP5cLmRuPzXZoD4Gn7+W6mx8ie8f8j4A0x+DoksT
fsWv8f1a1j09YzYGOW+ElEWVcaFQGdnzNJcx2PzgJVCv40JK8u8OGMePQZ1e
/5+bG7jQTtWo8fePx+BrWYPLvI1cSEBgxSfOrDF4P7+7pO8LF4rk+QAay8eg
Y90qjahfXGi6xQq+6huD7ava2316uZCePftKh7ExaHgo9dKpAS5UN8oFf82M
we1dGsW7R7nQZI7coioXHS5Pn97dN8uF+rT7da9vpkN39R1tn+bxfbZG33kg
T4e9/iw+RUtc6Ey7Xk6ICh3WcccVRrJT0AWpt2HNiA5jxarUdvNSUKRLgoXp
UToE78wlBVZTkO+aot2j1ni/4+iqybUUNLLzfd/xk3SonCMwkLGeguILKQnN
Z+nwu+mz5usbKeg9WL2xxYMO/f/CshNiFJTPEmv3wpsOG7DTMULSFFS5qlyE
NZAOz3cv+k/LUlDzns2sF4LoUDjolkuTPAVxbzQPrwulQ8eG4j03lCmoV3a/
He9tOmS35JmcBRTEJqkVJfeYDp8tP/7ZgigobFWacPoTOjRJVn2fs4eC+t1s
a6gZdJg0ZJPkuJeCWj6el/TNpkO9iOkwbQMKClmS2BiRS4dj20IviB6koOXC
t/VBL+lQ/WKe4TczCjLsaqxSLKbDbhH93flHKEhetFu3s5QOQ8p/bI46RkHd
YcJ073I6bOXiXNSzoSC1IRq30zv8fceaP3vlTEGt7B02ph/pUGj3aOztsxQk
YxC72qqRDst/BgS6nqOgjX+abc2a6ZBn87Oj0hcoqPh6cN/KVjp8WQt12Hwo
aG23jXDTVzq0dGlR6vTFz6/1G7v6nQ4z8ha54gIp6GTTnGXRDzo0OnLrj/t1
CgoyjO3DOuhwZk6q0zCEgvhtJn/nd9KhtpZRAWcEBdmtlJK50E2HXY2PT3rd
paDozKs6NgN0GHxe1cgkkYL0heaCfQfpUFGwXl3xIQV9y/W8efM3Hfoen+bv
T6Egnrcbj0YO06EEW+hSRRr+Pa75fPEfwe9P6sah+08p6NRnrQDHUToUHNOr
OJSD359G0eL1dDp8E/0jc1se/rzuTaMDuO13nItfWUBB5wO33X02Tof5vgmu
74opqGvN3zDhSTq0EN1q8aiMglRsVByqcbNWvdW9XEFBQ3bt3U5/6PAg9+iG
HTUUlLV9fcODKTrc6TprcrCOgpbu/8zbPU2HIp/ZQk43UBBFU1n2E+6hBOHJ
+58pyO3MmunuGTpsWtos/bqVgo4siHXZ/qXD17bbLJu/U1DK7vbAH7iD5PSr
ObsoyKa+c7F0lg7PRJjOi/ZQkK5I7hGpf3RoNmmtpN6P9283d7mBW6zIM8F1
hILOiv/LQXN0SNkY8OkGnYIWpCWMY3CPBYSzp0xSkFTk3fA+3CV7k89+m8Xz
ja0PL87TYXLW8+TJeQoKzRD4Voo7lK/o24plCpqUyXVZwn3ke6OWJgcVhXht
N/dcoEMM/LhgQaEiW53L/2Xilnw0kOnJTUXZy4vPOnFPOi4JPOWjoiG+73HY
Iv77WE81qFpDRd6j3JuccJcrrQ3oWEdF5y9Dldu4b85uGebfSEUdEa1+HbjP
W6qKKohRUcRP9gmWJTo8Vq51SE+SirzedZ4Swy0TcvTNJTkqaj5+/40l7lUj
J6diFKjoY/SjLxdwzxx0k81RoqK5pQyjaNw/8i5Z16lQEV6lm4H77brg2707
qQhVa9W/wf300q3apV1UVGkRM92CO6rz/qIgoCLJgKtfBnFbp+U7HNhDRUo+
d1hWLtOhDnd5ooMuFbXx6Z/ZgFve9UNTwF4qiqp//1keN//nVs5EAyrKfDug
pY77385u9YKDVKS4Lr9WH3dXwqhbowm+X2q4+yHc1UuzT4YOUdHhW+IHTuC+
U72Kd5MlnicJVHnhviS3XmfXcSpak/DKyx+3bYSUj6ktFSmsyAi6gVt/clv2
mVNUdJf9yWI07q2HQW+wI36+3K/eu7gFivSFHjvj77dwjc4j3AsbzAxLzuLP
o+cnlY67rs/p9fh5/PlT88Lycb/Y6zVK86aivKvNG4pwx2cFiG++REXViV8P
vMHtx3fzCPSjIt+eabEq3Kc848OPBlBRmSRnUi1ug+/JFR7XqIjHO6yhHrcy
yJ65GUxFlMBX2Y24WTiqbSpv4t/TZf+Tr7jXClTZpkVR0Yoz4hFtuOWkK0+G
36aiGqVS7Z+4oVq5/blY/D6xgfpO3GZ7yxwP36WiruEY6W7cp4+VOKknUpHO
QNTRXmI/5yIX0YdUtEPg48l+3Gk3C9yGUvDzQz7xDuEueZDv/imNioQ6hQqG
cTdm557Pf0pFiXoFYBR3X3mO190sKrr1NSZjDPdc03Nvvxwqch8Jm6fjXtWT
6WOXR0WXyg/umMAtOfXUV7+AimJHL5tP4jYUSPPnL6GirVtXnZjCbSf9JPBv
GX5f55X3TuP2Vku+9qOCiqTEdERncN/c+yioogq/Py7nBgg/PvYwJLUGf97S
xod/cb9yvh8aVofvv95p3yzuet974W4NVJT7UmWQ8PSDuKjdn6lIbVU3yxxu
Wk7MrU2tVCQR6XCZ8MaK23fYv1PRl6s244RVmqNjf7dT0USi77F54v70RMZ/
7KCiY9+PlxC2mrqZkPeLirQ0kgUWcLtzhCfG91JRgveX04QTpUOSbIfw3w9f
vkXCL9SCHuuNUlHSQxq2SNznvddS5MepaOZs80XC7ccCU/n+UFHRr/ocwuPO
/ukz0/h9ox/uIcxx2e9p+yz+Pthr+JZwC0f4ZpbP4/NOn9EgvCfHOyf0Pxrq
XhUYTNi8wivXlZ2GFko90wm7NJ/PN+OiIVe9Z9WEA3rcC3bRaEiu42g34dgp
t9cbV9JQS0r+POFnHK5FbLw0ZDk9xL+Mu1zgTMkgPw1hyTIyhL9IO5c1rKWh
lF2x6oSH1E6X5wrSUOaOowcIL+91qIxbT0NLGnesCK+xOFXlu5GGfhs5uBCW
dbGrPiFGQzpL9IuEscsnanUlaUgxdG8QYdOI43VbpGlocP3NaMKOD63qeeVo
6E9P0z3Cl3MsPk7L09A9pPCE8K2Ko41tW2loZVduFuG05iPNb5RpSLrr/EvC
JT2HWlJ20JDkyNUSwk1Tpq031GhIy5xeSbifw+TbWXUa8lF/V0t4XsCozRSj
ocBg/o+EeWUMf6hp0tDaTT3NhCV3GXRs0KahrCHNr4R37dvXxapHQw3Dau2E
I9a/2SK1j4Y0Hgt3Eu4eUbmw9wANTX2K6yasWpZe6WKEz5cp6iMcHrmBJ8qU
hgx8QwcJ/7K5dTTvMA2J1PMOE96pzPWk9SgN8VqYjRIOY/Md/2dJQ7JvLOiE
u1rG1TfY0JDbuPwE4dALbc129jTk8lVzirCKcNXppy40tMb19QzhHyVZLBPu
NJS4J3uWcNDxuDjVizS0D8A5wvJD4I/xLRpKtmtbJNx8vtfQ5RkNrWDBPzfx
+xK6jfPRT3x+9m+GnR76lX5ZxY0e/1pkuNr1bF38GW60NL/MsASy/mrxgRst
LJP+7+tFK33pFYiF8TMOO8/E9Gy/+j8XrbgRP9T/P9955nsgad/K/3fT9lVT
Zew8/2/Oj8azrh//Z2xqeMzjzqr/93KuYHSMFO//u93j9tGi0P/5Uptdudrg
/5zIZZPUtYfvf/tobM82TvufE9dZW4qw8/+/HRy6KQOq/7PyK/uXL5z/5/8D
cZc1KA==
         "]]}, 
       {RGBColor[
         NCache[
          Rational[178, 255], 0.6980392156862745], 
         NCache[
          Rational[57, 85], 0.6705882352941176], 
         NCache[
          Rational[14, 17], 0.8235294117647058]], AbsoluteThickness[1.6], 
        Opacity[1.], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxF2Gk4VV0UB3AkuUNIMpZkLPWKMsU9Z2+RkClTEiVSaCBDxoRENJgiqQxF
ikISQkKkRMZEKJkzXSEhw3vOvZd8yPN7/muvvdc+25e22DgZ2bEwMTH5Y//g
vx/di4/wUPFCmRg/0op2mafED4Fl/+a5sEdB/NSKLYIWF4XEPVa8trj8OKd4
yIr7v4ivJ4jfXnFT3+fh1eJpK/5wRsacVTx/xR+zjjhs2/R+xW3O6crlPxtW
3H3e1iAk7cuKMyfuGX//0bnib6fiEgZbf6xYM1aUuH2pd8WvZojgFe/ginVD
k07yzA6tuOzwNOsrgbEVSz+d14kJHF+x977/ZibHf624aPG1tYff5IrJBql7
j/+aWrH+m5HvTpenVxyj3XNcnGNmxSOOslbAb3bF8k87119a+3fF14N+qEsE
zq/4s+++neMbFlcsFm6+ZP1gacVqG4+LbwxjgsseZHonGW/EvGI+uRa7j2tZ
Vqw9htw2qPxn1yJTyZPXV624pSpITy/8n5WbX7jJR/3z4si6tyxx/xwm/OlY
4sNlR1CSAjTvtBb+c81+JfKBn8t+TNlpcnL3rpFlZ1OirGMsBKj/fMhr8vHA
1D93p2ftC2JiZbiAcrbjdLcIedmllJm1Wy+95lv2O8oRwUOPUgSX/Z5SIhlc
e23Tsqspl0GvkIXYsj9RtMz3Om7dtuxGCsf5pIJpmWV/pjSHLrJVyi+7jRL/
wNI0WmXZnRTrosKHx+Gyf1Akmvkndmoy7N9DeZ9UYmOqvew+iuPZE03eusv1
A5S1KkSNJINl/6Rks2XnVhot1w9TjJpMJYZNl/Mxyu/EvzFchxmG45S4M8ls
ipYMl/6iqOzZ73Hk2HI+SelcPTrgb7O8/jfFvzHK/JHdcv00RTRR+cNH+2XP
UCpPf9vz6/Ry/V+KvXJQOq/Tcr8FCnG1tBDFZbl+ifKsoe7acXeGrZkRwwT3
+WBPhrtYkAlHobNPfZbnYUVilMo6G/yW+7Ehyqyn9P8ELJsd+VpPfrPxynI/
InLxfs7OvVeX9yMjIo7mSaeuLddzIuWKi1w3bi6fdx1ityolICdyeT9uhL1e
e+LLLYZFeJD0e1SbhdsMj29A9BximkTvLp+XDxlXUNXQSljOBZAolh+5Z5OX
99uIKNQFS0SnLJ9HGGm9uyO2II3hAhHE276R7Vs6w7KiyCYFT49VmQzXiyGl
zMKDW58zHCGB2Hx6a66fy7CzFLL6rsMH13yGr25DHp/iVLlTyPD77YiO/Mv0
ktcMK8sgo0xHhHpLGXaTRSJqma4TKhgelEN2xT+al6li2Hc38vmk7lmTaobl
FRDP3ROdXrUM8yghgkxx+on1DG/cg7yuQd5UNDFsoopY3+nZOdSyPD+CpO7a
uU6hk+EENURrqTnAoovhHerI0EfviUs9DH/TQG7Eidim9jOcp4nI2r1rqv65
fH9aSKPcGY3xEYb7dRD3xXUvN4wzrKmHFN62irWeZvjQQcTqxKo1wbMMfzdC
mOSeeGTMMxxmgjxY0B+sX2LYwgzZVz1lPs2ymjGPOTIYG/9BiI1hbwskzBaq
qBEYbrBE6uevCV3nZHjdcSRN6u+XB9x0+1+zQfyMHG+92sDIpU4gJhfbDOv5
Ge63Q7Y/1lo7IMRwzSmEpSn/w4Iwwx0OSOuCZDCPKKOfwBkk2Hj1ktpWuktj
nRFLP7ci8+0Ms7kgu5/0eDjJ0A1jXRFis5F8sBxjvZY70rVYNn5PnmERDyR/
m9yzF0qM/bZ4ITdNkhyqVRjW90FU0/26/0BGP2F/hPvzaAKHBt3WlwOQwSXL
IxL7GV5zGXkjXcNH0aG762kQEmuq2mykx/CFYOSMf3qEgyGj3v4qop4hoOdv
zDh/UBgyzjRT+eww3Ul64UjV9lOBFZZ0yzJHIglmLWj7Mcb5vaIQt4B9f3/Z
MHLuW8iBp7n57CcZ/hSDiH4Rc9vsQLdz9m1khjlaVvEMY57iO8ijQ+ef2Low
6o8lIBcDu+y83eneeikJMXlmIBrpSffj4WREurXkW5oPY3+PhwjzKpm7JX6M
/hKpSOt/9w99DqDbcOYRkmlO5hkJYsw7+RixzBy6LnCN7hmnZ8jutsPasjcZ
9bNZCJH1w+r9kXTLWz1HumSUy61u0c3ekYPkH07zc7tNd4FPLnIziFf1Wjzd
XCAPOZF15U/yfbpFthUg3KtPONc9ZNy/XzHyc2fTjv5HdJMnSpBSi70/55/Q
7VlbisReeZ66/hndHKAcOZstYiOdTbdm/VtEoz1cWO0F3fWXKxFBtqWvh/Lo
jresQt4f6TS+Ukx3S9hHJCFYl+veG7rdBmoR9+dFNTnldLeq1iO6HdKhHyrp
nk5sQETXxO/rek+3q2gTMitHYPnzke6eymak3tKzZG0d3dw3WpCLOWZKqp/p
XhP9FQkMKyjd2Eo3S3YHEmwjqLP4le7qP9+Qayq+Td87afbvzOtCIri/WZZ1
0fNiYjcSMwT6H/QwzuvVg8SXJzsF9dMturoPSXGxC9w/Ql+f7DuIPNGpIm2j
0vOws0NIpui2GOIE3feujCA5c2HCI1P0+sGqMSS/cSSt9g/d3+6OI8Xp+nJZ
c3SbjPxCSgOzCyMWaC6FhyaR6l1utcar2Gj5z6BppI7YYqbAxkb/HrozSHO3
Uhcvge5jSnNIW+EdhxkSzXBBax75FvV3oo2DnosELSI9jla+RetoFmG+wIQO
7n2z+j4PPecsZ0Z/TQTyWwvS3CWWzopOV/cmq22i2fqIDhs690Bzu5gIvT8v
iR1d8n6cyypG79c2RkBZjYlovwS93mKGhBK2n6mq2krPr0hzoByrPhk+2U7z
OKrBhfK/iLQ9I0fPG4e40U3XJkf05Gmulz3Jg4raml7YqUTvR1ragEqq5i9x
qdDr0/L50O3rBUInKDQ7u0cJoLLD3tzNgGZDvighVP5tx92Xe+nzHX+1CUVd
kzI9tej9n+zbgqofYFG2OECz/YkEUVRL7ESZqj7N2W/XiaN6fyt1Nh2k929I
lkCNmqSaF41pHiwxlEIPZYRadZnR/H5AZBtqeXm4v+wwzVs/82xH7XZnzQYd
o/mqoOtO1JG07vJJG3pe8UsWPdfjQtayo3nHH7VdqGtRc8w2e5orZjJ2o57R
iptJp2k+USKngF48Hfd45CzNZNvPimig+pzcJ2eauaTvKKPXJ19rRF6gWZf9
GgWN/Lj5k4sXzbnXSlA09mHAIRNfmj2v3oRovE9Pl8Il+vrhZjU00XifI18g
zTe3y6ujKdvTJmeCaJ7emqmBPl5FuPg1hOavfRqaaM6LmvD7N2jOdGjQRv8c
SLV5HUEzr//MAZTSe1GhM5rm0lV6+qi/rxn7QizNBsYOhmglz872jfE0y714
dxAlPluTSblPM/gAjVH9fV3+lkk0q/1sM0Fb3SMl7z2i+X6Iqzm6icNxtugJ
zSbpXhaozaO9Ne1PaSZtTbdEH6FCiX+zaDZzZD+GDrdMnhd6QfMCZ401KutU
o6GaR/O2ZBkb1G1NKt+RVzSHrs20RReVzF7Hv6HPM0A+harXy0QUltNMCPpl
j161X2P7tZLm3bYLjmgNU5fC3Huax1J3n0XX3SlgF6yhz/v0thNqJhfZvqeO
5tnrvOfR+A8OmYcbccOoUR8XVHxO0OROK25/3QOJ7qh91KTkq3ZavTerjQf6
TLpmtvUb/b30a3mhE+UpNTM/aOtVq818UMUjFxP5+3CX9pffvIj6TJq6KA/S
cp7NU5fQ0msy+8yHabmz0r4AVLv4+9DtX7T867sdQehNk4LX+VO0/JJn7RW0
cSQi4ssf+no0PATlu+Jg+2cOtwia4RaKWm7aq8i3iDtp8Ir/NTTppSBBiXkN
ZuvFDy9voH16k+1mrLjhyxZSBHrOLyUglojbcCEnPwp9wXvRJG8t7qQbnoq3
0JlMU6kWLtz137SaYlDKfpm53+tp+QHXiNtowHe22g18uJ2jXJ3voO88vicq
COL25/7tfhclchW4mG6i5eotD++jt6ADf4wY7vfVD/cmo22tasO5krhnHNsT
H6DC5wVLmrfRzmcvyZ+C2hAmI6Z20PeLepaKpiV/tOWRpZ33nLFNGjqyJ0VR
fjfuwdIq5SeobKMvwUQRd9xbr90ZaCGLTFY0hVY/lJOUhS7FswW+ALjN36aS
n6Mau7+bNO3F3SEieTwHvfoxX2pyH+4UnSd1L9Ba24g5bm3cslGbLV6i3PP2
tbt0cesq32fJR81uqSUZGeDWGLf8WIB2VUzsizLFXdBjVVWMGhNL+nzNcd9T
qW8tQd8ZhF45dQS3n2JRSCm6J8ZEwugobX7Jsbwy9OnXzZWU47jnL1j+LUc3
iwyfkDqBmyfL06wCjbLLY+U+hVu+rvZDJeoxrqsxcAb3VEjj0nt0SIG/t8GJ
dv4RkXfVqKVPz+ViF9xHT//MqEHrSjPF0txp8ybpvPiE7mXzfhvpSXsfiLpT
PfrywD5bXx/cfIoscQ3o1kiuVaf8cPf82Pa5EeXYmLaXEoQ7ej0S9RkNOO7S
LRlCm3+t1IYv6NQjJHBdGO5Dvl45rejJEXbR+eu4o95Mnv6Ktsk1l/WH4z5W
fF69A9X1SDzeEIX7xd1RlW9oSbEjc3EMZv999VC6C03Zz6wWeRf3t7zLPt0o
342aLp8EvF5cwrm8Bw1rvO1/Mhn3q98HN/ehC3y2IgdT8PpejdjoftTZSqZU
NQ3PHadKRQbRngezxyTTaf1Xn3v/EzUbrFjieob7Hqvx9WFU1fUI6M/BvbVD
zJmKZhZIfq9/idsBslaPoyKLv/yKCvB+bznWjv1Co9VfCz8qwlz6Q9RYYhJl
C71aElGC5xtVOM9PoV6fjI/6lGGGBI4bjb/RkfWbF+0q8H6HTu848AdtTHiJ
qFbTzruvMGQO3dfr3ylRS3svVl/059GCbboXuepx19S5715EpZ34Nv1txGwt
KpInxATu53YX933Gc5MkMxlmwDX3zLK+Fd8v2inFiAUEAq/5wnbcbeL5oauA
fTUnJeIHZpGs5A55NtDO2d7u3Yv3i7Zyy1gD9E0f+dgN4PMkfO3YQwBl8eeF
DIfwPFE/9AcRyHdRilRG8bzTgiWFDNIk2I9IjOO59u6BQA4geLppjnMScxfR
8Q/gAku/HVT6ZvB6Le+us9zARVXha91fzLIea9DE9aDXn8m7cBFzUjpTYg8P
OPTuo0AqMztkilC/KE7hBdWk26/CWTGPU8uXnvAB5KDNYe81eL5ho6uMAMiO
/W/2BBEzl3RBY7UgiN1SoazChdl51JvtoDBAKs3FeddjLpB/MikgAnrtRzkn
NmA2/xP3UWAL2JXNO/BECPOgQjuTlhhoM85ovCKM2f5j2xZPceD/B5Qc34L5
veinXYUSoBZ1iBGQwtd7n5D33Arcuhf8f2/D8xgWg+ltQDA46kzDDsz1Z79m
hm0H9rVF6qG78PNBd8W/MoDzvOFOOwXMU34pzGdlQR5Pn6CaMuaNFn6yjnKA
1ZJjYgbBTB5lpUbsBhlLDzqbIeYumzHBYnlg9FDpQ7Y6ZsPUh1ozCiBpyDrJ
Xhtzx4Njh9KUwf6bv69p6NLmCdixUQWMyYV5iBhghpLpI6mqQNXrhX6rCeaR
46XJ8yjo3qilknsI83RY0KwdBFdLOyQiLDA3uye4WaiBljVsC/utMffqTkWc
UQcXM+IHxWwxE3sH7l/TAOIGO5uX7PDvs/aMaeE+4BJrnpF/GnOj5/l5bS0g
oDIaG30O8/z4eOJTbVDaGRDodB7zhTdvzEQPAA6JjMNSHpg5zoV80dEHL9+D
fau88e/1ZfjJkgGwPNMs+90X8/Cpx/V9huDJi4U1twMxV+vWfWgxAoaHoiZd
rmAWLQ6Y7zYG03OS3/WvYl7d9GTHggnQ2GuYx3YT86fcMdWjh8BwX29ydwTm
KMLA1UfmICrU60ZJNOaZvMispcOgq/7BiQt3MIcbbno9YAlC3JQMje5hvpNR
b+R5FMjw16jKJGJms1WM4LAGvsd+c/enYL4kYRPVdByIrQpbLEtjh/6xarLS
VTag+pHw0P10LP/bvOXLO1vAP7a/zDQby/ce/5I8YgfeRHY8lXuB5XmJ033r
T4GTCufj1uZh+WPq3uva9iDXN96psgjzBuTFtW5HcERk55HkEqx+7ZCuyv4z
gKXirebFMixPLTadLj4LDEijmxSq8PcTZajh5AwUnWaMDKoxCw6uyzI/DzY2
rbrqUIvVa2rHLeq5gKF4wYn7TVjeSbbyPOoGGhYlpApa2GHpKtHvld7uoMBG
zrKxjR3CtU7jaOoFECyt9Y6tC1vfE3FDUcoLnL1p/FekB6uvG2lj9fcGJhNH
ZVX7sfoIdo+Enz5gS6F7vNMI1v8+xwLPhB9gFw6oC6Vi9dqZ6/do+4OxgOus
KROY38JsPbEAUKz98FzrDDtMYuZ9WzMdCB4+y3w48ZcdWuc2uqz7dRmErSts
JS+xw65inbzx6SBwqK1+r9pqAmRiL5M+LBUCUKTD4wg7AXbt3KvWanQViCcP
PHUnEaDI15gPnddCwYT9Im/6OixP4XUL33odtNUQdCt4MF/iMdO/cQOUym4I
+MZHgPARWf4Vczi4MbN9mFuYAA0nXc6Pr40EW68efuMjjVnD46Z89C3AOXJi
KuY/ArRuzHLJuh4Dpg2ct2XLEqBzHZeaX0QseMsXEt2rSID+GjpCXgVxIN0n
6v3iHgKMsJnVsui8AyK+31/gRzDX6cXMrr0LjqblntJTJ8BxGflT1Oj7YB+p
9N4pTew8xOrj7EMJYIfTx4YAbQKcOaYkmSOZBGYVu1XzDLC8KZXyOiEZ3HrH
ybXZkgALTk9sVRtIAT7SQvv2HCNArtBNM6y1qcDmpqS3sQ02b/CkKFfRI7DT
DOkNsSdA/p55nbbsx4C3UEvgwWkCVD5cEcj26gmY32SiX3wOy91bzx6uTgfV
fY4F424EmL36tv5BwjPwXPvCKNGTAEtlxmZOKmWCuGcBohI+2H4Pxe5ddsoC
du5x1w8HEGDN+dMWh5eyAdPqd9blNwiQ8pxfwb/uBdjAW2GTFkGAHdMqewKD
coG0VPmJ69EEeO/5zbpE9CUw0S6xN7tDgPb9ze8Dy/NA2o0856EUApx6xdEr
SSoExQm5LnVp2Pnu3kU1hwtBfVaOW246tl/C1VSRhiIw15Dp6ZdNgO85G2N0
M18Dfd40f+5i7L4lh4JFW0uBrVRq4J8S7L65qqxYrMuAp/LDoI4yAmQ523lw
fqgMPLBIvPqoigDjqtV/mxDfgt8JtyNUmgjQLKT3m4BTJbgndTXJZogAU6wK
Hm1uqgbPlYMf7B8lwI2GROHNNz+Cd9pBKTvGsf6zwl8NdGvA+Gn/x9O/CdDi
plvK7sZaoJ7tmR3GTIT1T9NeZgXUgyFlh9IcfiK8RbywsWK2CSxpnyq/LUSE
gYo52TPnmgHPEbsKX2Ei9Dbgk3fvawboxePvNcWJsPKDeq1Yy2cQVXa4/utO
IlTJGe06WPkF7NHR6WLZT4S1ViVWkQ3t4KbQm+2SOkTYLDC4Pvt4B+ge2e2h
rUeET9WK2nwnOsD18E0cEcZEmLIQ1N624Rvoah5X3WRNhP6fkd0Nsl0g+Njt
20peRPjmTR3B1q8btMuSeyx8iXCHne7hwKpuIMsSION3CduPL9fVmqsHtKU4
VlZcIcKqgD9Ou5J7wI4hZPJgFBFeSTE1EC/pBY1uvfpnMohQ45ZUq31nP5DS
PBwfnomdP11MSE54APjyferLeU6EIkZ/rsscHQAShfm+s/lEqGQnvi2zfQB4
LoWlB1cQYW6FxleemkFQW7/0+0kVESY8DNJqW/0TiD5wU6utxu6vXm59KvoT
fNQ42rq+gQgpu2V71Z79BMJhcmzJnUSoNUK1/89vCLgeeXSwoosI+VldjlRl
DYH3O4TuD/QQoSuP4weDriFwvo5VXmaICH8IiG2WRIdBBU/r8aJpIjyQ+iWi
YWQYCPTrPvs2i+WTcw2VG0bAufyyGeYFIgzWfCORiowAPouMcK1VJDh6K0Bz
W9gIcEz0e/2ZkwT7E7eLuPOOgtFN/Z/fcpPg67j/BOrkR4HzPb2x5xtI0DDO
mHOf0Si4cGfj5ptCJPhJbZwjPGwUzPIFKfkKY/nC2Rv2qaPAN3bYwHELCT7+
uzhm/2YUBEQX+mtKkeAtW4FvQ+OjgJVb9I68NAlK7F+35MI+BoIjQp+L/keC
FcNpEjs3j4HrN8y7F3eRoF5Hd+9BnTEQFzKtno+SIK8kW3P67TEgxHbUMlWN
BBsq9RdUn4yBhKBKt2gNEhSRKmMSKRwDKQG3Up10SPBegCz/r7YxIMU0/9pK
jwStj/Ze6h8cA+l+ti0HDElQvPeQHfgzBrJ8dq3ZakaCZm/kvXdwU8GuuTub
eQ+TYN7odu4PwlSQ68mszGpJgqh27O82aSoodK+37zpOguVRqboOalSATCkF
fDpBgr3V+9eMH6CCUpfEO8WnSNBZzD3urykVvHM6Vx13lgTZ9naeem5PBdpj
n7uDnUnQ4JbjfdvzVFBzBvnr5kqC2hVfYtK9qKDRgbzjoBcJ3tzvK84WSgWm
g64awJcEu69aIKIRVNB6st3yv0sk+MXs6cbuWCrotE2/QbhCgkEh51yOPKQC
6+51j/6EkOBn9V3tQk+ooNvaq6QvjAQzFQZHb2RSwaCVFrUsggShxxf+WwVU
cLoja012NAkePh3oL/OaCsYs+EQSYkmQZ6+NbEgZFUwd6jf0vkeCrMWsQpc+
UIFHi56DfSIJbi/YMyNWSwVzJi8DzB5g92t4zCaqngouNm2M10glQQuzwsma
JipgMgrK2fWYBO3978u2tFDB5frhapEMEuy4HBCS3UYFbAbGPRyZJCjjtvXg
0Q4qIOuK8gy/IEFlLhN55AcVhFeH7mjLI0EkOv6WSw8VcGv/0qh6RYI7c3J+
X+6jgpgqc6uXxSRY9E11v+sAFfBrlro/fEOC0vcLT+z9SQV3K6RuRpaTYJ/i
zIbJISoQVg9/dKmSBA8423OGjFCBGDz65chH7D4Srukfo1LB143hqqqfSDB3
/Nq5pHEqiJh9kyjYQIIP4ldVf/xFBftbxlfNNZGg5bPPad0TVLCYs8W+rQV7
T3tvgP5JKngZblRT0Ia9j/z6V1+mqODMmcuycR3Y+zdqkS34jfWX6Jsx6ybB
h0VRyjp/qCCShddKsY8Ed9xKf7WAWeu7ZtmGQex7H90tkDJDBUtFHhK/h0gw
9tgmWXSWCvLiHoc2j2J/L6pPP9ZgPuveNvpinAQ9OYefGc5RgbgR0Sh6kgQF
lDffrMYcRTojaDRLgs38mhMP/mLvb/Cen9w8CU6jbTks89j3qazt5loiwW+x
PsMWmPOTFzXHmcnQsINb/Cnmc347M+pYyfDcc62OacwSR6w5s9aQYXbV2DXV
BSroUIp0vUkkw/6j1g+9Mev8mlDV4yLDAxdm0n5iZv4klrRjPRk2vvxoLLhI
BQXpJqxkXjKUXOfap4nZKeSK/TA/Gepo6T1zwix5Iq+mWogMnz0zmL6FuRMO
yKYLk6GStjFbPuZbm/hjQreQocXCUeEWzDpzWrP24mR4/fmY9wRm5i9eVlpS
ZMh1VcmEvITt9yK9TEqaDJmlHL6JYT4X0S6x5j8y/CQ8or0Hs8RZclj/TjKk
et1/q4u5QxsZq9xFhicvr3E/ijla8pxRqgIZcjbdDjqHWWdVYl6QMhmOZTVu
uIiZuatO8IQqGY63XdYOw/crZrqkjpKhc+0IEovZ6Y5cj6gaGcZFj3MkY5a8
YLOfRYMMA3cjLemYO42iM35okqF5q0vGC8y3dlZwlmmToWKZVkoR5gPk365J
umRYz5ndXI6Z5adE6yUDMmS6NqX/AfOrSjPKMSMyvODYLlaH2flBSBJqis0H
S22aMUtdKmAVNidDdoFsgTbM3478tF+wIMODHYGmnZhjlAVrO6zIsJxncssP
zLobDsgVW5Oh/pbc0F7MqyZ8Yu7akmH1WHDsAObCT09nvU+S4RVtvYNDmM9n
dFpZOGDzfhUqH8G89SpH+Z4z2Pm7dcbHMH8/ASQFnMhQueJK9zjmWDXnsJnz
ZPjepS1hArOecPLYFzcy3FtbJj2FmfVvg1G+B2YmxWu/MRd9YcmP9cbe458X
FdOYXXJ3C124SIZzYzrtf/D9Ik9cMvUnwyCF1MYZfL+zMT3yl8mwVGpd5izm
FiISaRRMhi7Sk5fmMNek9aLOodh7He1S+ov5rcb1kRvXyZBXurcVd+GP3fEZ
4WTIDZ7bzWN+7te+/0MUGSZ0ZnXhfix0+Xd/DPY+ell0FzAnFkg/ZL1DhqyB
4U9wx5o2GoreI8OZ9FV/cd+Y8FoEiWT461e72iLmoPAtT60ekKFvnf0l3N47
Phz2ScXeh11TLu7zH5zX3HlMhjeqt/Tgtj/J/zIvgwxz+1RIS5iPrsK+ayYZ
kgd//ofbNOkU18RzMkxx+HEAty7CWcL5kgwt5UvscKt/zTv9XwEZPnxL8MWt
4nFU4EAR9n39KeG45XjYquxLyFD4zZtE3FufP3MLLiPD3hDqM9yb9U1FUyrI
8KX0xkLcvMPzdWVVZKj2+FoFbvLVlIvfq8nw7S/vWtyrJHS3L9SSYQnr5s+4
58omWwUbyFCjP7Ud9/jRu8HKzdh7CFD6gXvg7155sy/Y/I7Tfbi/xQ39cP1K
hg9uMg3h/qwQFR7ZSYbHPziN4q5p3INkdZFhyxmLcdxvnX4M1fSQ4fe8pgnc
heTQuKF+7D6UR6ZwP9ZsnZQYJcOaDrkZ3DH+UgbHJ8mQpyp4Dndg4YX0e7Nk
KM0rM4/beapydesSGYbVmy/Q7tP+RLE+eS0MkX69iFuqg8W1kn8ttI50WKKd
9y3oypFbC5U1ftB8K8NXL0lnLaTsmaN513hlUlbaWpiFrcbdIM85VcLKgf9/
PfYzDs4EyF647fDPbJ8Ozjh9+md0anjM9Rbnipdy+CNjJLlW3O4afbgw7J99
vtqWKg/+87011kld6utWXEiRzzqY9s/3+I5abmTlXvGpU93sA0r/vCv/5Mvn
p//5f0JZmcM=
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., Automatic},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Part[#, 2]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox[
          "\"CDF\"", 22, FontFamily -> "Helvetica", StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          RotationBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(2\\)]\\)/\[Beta]=1.5\"",
             22, FontFamily -> "Helvetica", StripOnInput -> False], 
           BoxRotation -> -1.5707963267948966`], TraditionalForm]}, {
         FormBox[
          StyleBox[
          "\"Time (years)\"", 22, FontFamily -> "Helvetica", StripOnInput -> 
           False], TraditionalForm], None}},
      FrameTicks->{{{{0., 
           FormBox["0.`", TraditionalForm]}, {0.2, 
           FormBox["0.2`", TraditionalForm]}, {0.4, 
           FormBox["0.4`", TraditionalForm]}, {0.6000000000000001, 
           FormBox["0.6000000000000001`", TraditionalForm]}, {0.8, 
           FormBox["0.8`", TraditionalForm]}, {1., 
           FormBox["1.`", TraditionalForm]}}, {{0., 
           FormBox["\"\"", TraditionalForm]}, {0.2, 
           FormBox["\"\"", TraditionalForm]}, {0.4, 
           FormBox["\"\"", TraditionalForm]}, {0.6000000000000001, 
           FormBox["\"\"", TraditionalForm]}, {0.8, 
           FormBox["\"\"", TraditionalForm]}, {1., 
           FormBox["\"\"", TraditionalForm]}}}, {{{0., 
           FormBox["1", TraditionalForm], {0.01, 0}}, {0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["10", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["100", TraditionalForm], {0.01, 0}}}, {{0., 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {
          0.6931471805599453, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.0986122886681098`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.3862943611198906`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.6094379124341003`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.791759469228055, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          1.9459101490553132`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.0794415416798357`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.1972245773362196`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          2.302585092994046, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}, {2.995732273553991, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          3.912023005428146, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.005, 0}}, {
          4.605170185988092, 
           FormBox["\"\"", TraditionalForm], {0.01, 0}}}}},
      FrameTicksStyle->Directive[16, FontFamily -> "Helvetica"],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{55, 95}, {50, 5}},
      ImageSize->390,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{0., 4.605170185988092}, {0, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0.22, 0.22}, {0.04, 0.04}},
      Ticks->{
        Charting`ScaledTicks[{Log, Exp}], Automatic}]},
    {
     TemplateBox[{TemplateBox[{
         TemplateBox[{"\"10\"", "3"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], 
         TemplateBox[{"\"10\"", "6"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], 
         TemplateBox[{"\"10\"", "9"}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "LineLegend", DisplayFunction -> (FrameBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 StyleBox[
                  TagBox[
                   FormBox[
                   "\"\\!\\(\\*\\nStyleBox[\\\"N\\\",\\nFontSlant->\\\"Italic\
\\\"]\\)\"", TraditionalForm], TraditionalForm, Editable -> True], {
                   Directive[16, FontFamily -> "Helvetica", 
                    GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> 
                  False]}, {
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                  "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
               AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
            False], {
            Directive[16, FontFamily -> "Helvetica", 
             GrayLevel[0.4]], FontFamily -> "Arial"}, StripOnInput -> False], 
          Background -> GrayLevel[1], RoundingRadius -> 5, ContentPadding -> 
          True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> 
          Thickness[0.01], StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Line"}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             
             RowBox[{"LegendLabel", "\[Rule]", 
               "\"\\!\\(\\*\\nStyleBox[\\\"N\\\",\\nFontSlant->\\\"Italic\\\"]\
\\)\""}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                 RowBox[{"16", ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.4]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.4], Editable -> False, Selectable -> False]}],
                  "]"}]}], ",", 
             RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
             RowBox[{"Background", "\[Rule]", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                 Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                 Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[1], Editable -> False, Selectable -> False]}], ",", 
             
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True],GraphicsBox[
        InsetBox[
         FormBox["\" \"", TraditionalForm], {0, 0}], {ImageSize -> 35}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.712051063473501*^9, 3.712051179764111*^9}, {
   3.7120512439543753`*^9, 3.7120512793756847`*^9}, {3.712051331526125*^9, 
   3.712051422105776*^9}, 3.712051468046584*^9, {3.712051540411313*^9, 
   3.712051552168144*^9}, 3.712057592886718*^9, {3.712058356883161*^9, 
   3.712058463661105*^9}, {3.71205851296624*^9, 3.7120585283124437`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Reconstitution of preconditioned host", "Chapter",
 CellChangeTimes->{{3.695623613252121*^9, 3.695623619512342*^9}, {
  3.695707693935843*^9, 3.695707694223825*^9}}],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.7089290699546003`*^9, 3.708929071831161*^9}}],

Cell[BoxData[
 RowBox[{"fSol", "=", 
  RowBox[{"First", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"f", "\[Equal]", 
          RowBox[{
           FractionBox[
            RowBox[{"\[Alpha]", " ", "\[Delta]"}], 
            RowBox[{"d", "+", "\[Beta]", "+", 
             RowBox[{"\[Alpha]", " ", "\[Delta]"}]}]], "+", 
           RowBox[{
            FractionBox["d", 
             RowBox[{"d", "+", "\[Beta]", "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}]], "\[Psi]"}], "+", 
           RowBox[{
            FractionBox["\[Beta]", 
             RowBox[{"d", "+", "\[Beta]", "+", 
              RowBox[{"\[Alpha]", " ", "\[Delta]"}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Rho]"}], ")"}], "\[Psi]", " ", "f"}], 
              "+", 
              RowBox[{"\[Rho]", " ", 
               SuperscriptBox["f", "2"]}]}], ")"}]}]}]}], ")"}], "/.", 
        RowBox[{"\[Rho]", "\[Rule]", "0"}]}], "]"}], ",", "f"}], "]"}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.7089290797837133`*^9, 3.7089291874436483`*^9}, {
  3.708929237084651*^9, 3.7089292678168383`*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Psi]", "==", 
       RowBox[{
        FractionBox["\[Delta]", 
         RowBox[{"\[Delta]", "+", "a"}]], "+", 
        RowBox[{
         FractionBox["a", 
          RowBox[{"\[Delta]", "+", "a"}]], "f"}]}]}], ")"}], "/.", "fSol"}], 
    ",", "\[Psi]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.708929214860365*^9, 3.7089292997835407`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.673249745359564*^9, 3.6732497462709723`*^9}}],

Cell[CellGroupData[{

Cell["Data analysis", "Subsection",
 CellChangeTimes->{{3.690719784380838*^9, 3.690719785331936*^9}, {
  3.6956238472649813`*^9, 3.695623851319709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPars", "[", "form_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "i", ",", "data", ",", "parsBase", ",", 
      "parsPars", ",", "pars"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", "form", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"parsBase", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Section]\[ScriptCapitalN]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]sStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]nStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]\[ScriptL]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]\[ScriptCapitalS]", "\[Rule]", "1"}]}], "}"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"parsPars", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Section]\[Beta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]\[Delta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]a", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Section]d", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "\[Equal]", "5"}],
              ",", 
             RowBox[{"\[Section]\[Alpha]", "\[Rule]", 
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ",", 
             RowBox[{"\[Section]\[Alpha]", "\[Rule]", "0"}]}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"parsBase", ",", "parsPars"}], "}"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pars", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695583714787603*^9, 3.695583723715773*^9}, {
  3.695583954441474*^9, 3.6955840232506523`*^9}, {3.6956253540012302`*^9, 
  3.695625360040989*^9}, {3.695625423687889*^9, 3.69562544530217*^9}, {
  3.695625476700931*^9, 3.695625529730783*^9}, {3.695627341578754*^9, 
  3.695627354561433*^9}, {3.6956281038166933`*^9, 3.695628132621253*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getReconstProb", "[", "form_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "prob", ",", "data", ",", "\[ScriptL]", ",",
       "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", "form", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptL]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prob", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[ScriptL]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"1440.", "\[Times]", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Drop", "[", 
           RowBox[{"data", ",", "2"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"prob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ScriptL]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
          "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.676700979324822*^9, 3.6767013256883993`*^9}, {
  3.676701397054736*^9, 3.67670140358974*^9}, {3.684755982180838*^9, 
  3.6847560740324163`*^9}, {3.684757182041049*^9, 3.6847571821849318`*^9}, {
  3.69562602844175*^9, 3.695626124877328*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getReconstProbAlt", "[", "form_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "prob", ",", "data", ",", "\[Alpha]", ",", 
      "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", "form", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prob", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Drop", "[", 
           RowBox[{"data", ",", "2"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"prob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
          "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.676700979324822*^9, 3.6767013256883993`*^9}, {
  3.676701397054736*^9, 3.67670140358974*^9}, {3.684667314852365*^9, 
  3.684667346986517*^9}, {3.684667406625225*^9, 3.684667442463169*^9}, {
  3.684667479086219*^9, 3.684667479405816*^9}, {3.684667532524184*^9, 
  3.684667536403904*^9}, {3.6847519808996696`*^9, 3.684751982634819*^9}, {
  3.684752037480791*^9, 3.684752038168833*^9}, {3.6847522484910383`*^9, 
  3.684752248961372*^9}, {3.68475517492204*^9, 3.6847551757532263`*^9}, {
  3.684763107388145*^9, 3.684763108386552*^9}, {3.684763145473881*^9, 
  3.684763170824417*^9}, {3.6907197301269417`*^9, 3.6907197304779663`*^9}, {
  3.6956282596496363`*^9, 3.695628292983626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getReconstProbS", "[", "form_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "prob", ",", "data", ",", "sStar", ",", 
      "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", "form", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sStar", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prob", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sStar", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Drop", "[", 
           RowBox[{"data", ",", "2"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"prob", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sStar", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], " ", "]"}]}], 
          "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707481406578659*^9, 3.707481450617272*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Analytical predictions", "Subsection",
 CellChangeTimes->{{3.690719784380838*^9, 3.690719785331936*^9}, {
  3.6956238472649813`*^9, 3.695623862583226*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Original", " ", 
    RowBox[{"model", ":", " ", 
     RowBox[{"First", " ", "approximation"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reconstProb0", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["\[Delta]", 
            RowBox[{"a", "+", "\[Delta]"}]], ")"}], "\[ScriptCapitalS]"]}], 
        ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           RowBox[{
            FractionBox["1", "\[ScriptL]"], 
            FractionBox["sStar", "nStar"]}], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Original", " ", 
     RowBox[{"model", ":", " ", 
      RowBox[{"Full", " ", "solution"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"reconstProb", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{" ", "\[Delta]"}], 
             RowBox[{"a", "+", "\[Delta]"}]], 
            FractionBox[
             RowBox[{"d", "+", "\[Beta]"}], "\[Beta]"]}], ")"}], 
          "\[ScriptCapitalS]"]}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           RowBox[{
            FractionBox["1", "\[ScriptL]"], 
            FractionBox["sStar", "nStar"]}], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], 
      ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Alternative", " ", 
     RowBox[{"model", ":", " ", 
      RowBox[{"Full", " ", "solution"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"reconstProbAlt", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[Delta]", 
             RowBox[{"a", "+", "\[Delta]"}]], 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Beta]", "+", "d", "+", 
                RowBox[{"\[Alpha]", " ", "\[Delta]"}]}], ")"}], "+", 
              RowBox[{"a", " ", "\[Alpha]"}]}], "\[Beta]"]}], ")"}], 
          "\[ScriptCapitalS]"]}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          FractionBox[
           RowBox[{"\[Beta]", " ", "nStar"}], 
           RowBox[{"sStar", "+", 
            RowBox[{"\[Alpha]", " ", "nStar"}]}]]}], ",", 
         RowBox[{"d", "\[Rule]", 
          RowBox[{
           RowBox[{
            FractionBox["1", "\[ScriptL]"], 
            FractionBox["sStar", "nStar"]}], "-", "\[Beta]"}]}], ",", 
         RowBox[{"a", "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "\[ScriptL]"], "-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "nStar"}], 
              RowBox[{"sStar", "+", 
               RowBox[{"\[Alpha]", " ", "nStar"}]}]]}], ")"}], 
           FractionBox["\[ScriptCapitalN]", 
            RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], 
      ")"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.690718933187565*^9, 3.690718942002735*^9}, {
  3.6907196820567713`*^9, 3.6907197240624933`*^9}, {3.695624855347665*^9, 
  3.695624874546155*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Section",
 CellChangeTimes->{{3.695624769470821*^9, 3.695624769958005*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Main panel: original model vs ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "*"], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->{{3.690719793156396*^9, 3.6907198018355217`*^9}, {
  3.6907198751617107`*^9, 3.690719875496697*^9}, {3.695624779902974*^9, 
  3.695624785933456*^9}, {3.697182625127001*^9, 3.697182627020895*^9}, {
  3.7074749645456047`*^9, 3.707474966829118*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "parameters", " ", "and", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"form", "[", "x_", "]"}], ":=", 
    RowBox[{
    "\"\<./zz-data/preconditioned/original/engraftProb_\>\"", "<>", "x", 
     "<>", "\"\<.dat\>\""}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indices", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<*_00_999\>\"", ",", "\"\<*_01_999\>\"", ",", "\"\<*_02_999\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"num", "=", 
     RowBox[{"Length", "[", "indices", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.69562559554852*^9, 3.695625598399873*^9}, {
  3.6956256524393883`*^9, 3.695625677941085*^9}, {3.695625739162807*^9, 
  3.695626020264777*^9}, {3.69562610207803*^9, 3.695626107649383*^9}, {
  3.695626144656904*^9, 3.695626147525078*^9}, {3.6956273670335083`*^9, 
  3.695627384807953*^9}, {3.6956277179967213`*^9, 3.6956277251244164`*^9}, {
  3.6956282014424562`*^9, 3.695628205370554*^9}, {3.707474976832458*^9, 
  3.707474980816287*^9}, {3.7074751122610807`*^9, 3.7074751124117517`*^9}, {
  3.707475151338168*^9, 3.707475151450409*^9}, {3.707480856822098*^9, 
  3.7074808605411787`*^9}, {3.707480925403261*^9, 3.7074809271149683`*^9}, {
  3.707481044818842*^9, 3.70748107551956*^9}, {3.707555213231751*^9, 
  3.707555228206036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getPars", "[", 
      RowBox[{"form", "[", 
       RowBox[{"indices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsSFunc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\[ScriptCapitalN]", "\[Rule]", "\[Section]\[ScriptCapitalN]"}], ",", 
        
        RowBox[{
        "\[ScriptCapitalS]", "\[Rule]", "\[Section]\[ScriptCapitalS]"}], ",", 
        
        RowBox[{"nStar", "\[Rule]", "\[Section]nStar"}], ",", 
        RowBox[{"sStar", "\[Rule]", "\[Section]\[Section]sStar"}], ",", 
        RowBox[{"\[Beta]", "\[Rule]", "\[Section]\[Beta]"}], ",", 
        RowBox[{"\[ScriptL]", "\[Rule]", "\[Section]\[ScriptL]"}], ",", 
        RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Alpha]"}]}], "}"}], "/.", 
      
      RowBox[{"params", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptL]Vals", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"1440.", "\[Section]\[ScriptL]"}], "/.", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], " ", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"getReconstProbS", "[", 
      RowBox[{"form", "[", 
       RowBox[{"indices", "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.69562559554852*^9, 3.695625598399873*^9}, {
   3.6956256524393883`*^9, 3.695625677941085*^9}, {3.695625739162807*^9, 
   3.695626020264777*^9}, {3.69562610207803*^9, 3.695626107649383*^9}, {
   3.695626144656904*^9, 3.695626147525078*^9}, {3.6956273670335083`*^9, 
   3.695627384807953*^9}, {3.6956277179967213`*^9, 3.6956277251244164`*^9}, {
   3.6956282014424562`*^9, 3.695628205370554*^9}, {3.707474976832458*^9, 
   3.707474980816287*^9}, {3.7074751122610807`*^9, 3.7074751124117517`*^9}, {
   3.707475151338168*^9, 3.707475151450409*^9}, {3.707480856822098*^9, 
   3.7074808605411787`*^9}, {3.707480925403261*^9, 3.7074809271149683`*^9}, {
   3.707481044818842*^9, 3.707481154699875*^9}, {3.7074812442410173`*^9, 
   3.70748127720686*^9}, 3.707481457368823*^9}],

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.7074813782028513`*^9, 3.707481378443056*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mySym", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "0.7"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mySymBig", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "1.1"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mainPanel", "=", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"reconstProb", "/.", 
           RowBox[{"paramsSFunc", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Section]sStar", ",", "1", ",", "128"}], "}"}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"\[ScriptL]Vals", ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "mySymBig"}], ",", 
            RowBox[{"LegendLabel", "\[Rule]", "\"\<\[ScriptL] (mins)\>\""}], 
            ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", "18", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.3"}], "}"}]}], "]"}]}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"reconstProb0", "/.", 
           RowBox[{"paramsSFunc", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Section]sStar", ",", "1", ",", "128"}], "}"}], 
       ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dotted", ",", 
            RowBox[{"myCol", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "mySymBig"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)\>\"", ",", "labelSize", 
          ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Reconstitution Prob.\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"ticksSize", ",", 
        RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"Log10", "[", "1", "]"}], 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
          FractionBox[
           RowBox[{"Log10", "[", "128", "]"}], 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.92", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "350"}]}], "\[IndentingNewLine]", "]"}], 
   "/.", "myPlotStyle"}]}]}], "Input",
 CellChangeTimes->{{3.676187167751549*^9, 3.6761872791955147`*^9}, {
   3.67618745950136*^9, 3.676187469540773*^9}, {3.676187506363727*^9, 
   3.676187528043665*^9}, {3.676187584521097*^9, 3.676187586944746*^9}, {
   3.676193468367508*^9, 3.676193501564136*^9}, {3.676193546204811*^9, 
   3.676193789604044*^9}, {3.676194390951418*^9, 3.67619439113517*^9}, {
   3.676194531835161*^9, 3.6761945867523937`*^9}, {3.676194743020062*^9, 
   3.676194743354826*^9}, {3.676194867943478*^9, 3.676194900221445*^9}, {
   3.676195307336607*^9, 3.676195318176538*^9}, {3.676195366765708*^9, 
   3.676195464185676*^9}, {3.6761967561092453`*^9, 3.676196795522889*^9}, {
   3.676701715156272*^9, 3.676701716499498*^9}, {3.676704251477838*^9, 
   3.676704296723969*^9}, {3.6767044787967176`*^9, 3.676704483964714*^9}, {
   3.676704616064863*^9, 3.676704701965728*^9}, 3.676704765781336*^9, {
   3.6767048065301323`*^9, 3.6767048514962463`*^9}, 3.676704886065534*^9, {
   3.676705131383449*^9, 3.6767051543021097`*^9}, {3.67670527908226*^9, 
   3.6767053183757*^9}, {3.676707080699407*^9, 3.6767071066331367`*^9}, {
   3.676707152801051*^9, 3.67670715963946*^9}, {3.676707254618391*^9, 
   3.676707278019137*^9}, {3.67671664164213*^9, 3.676716641849145*^9}, {
   3.676716676193823*^9, 3.6767167247983*^9}, {3.676716765997422*^9, 
   3.6767168005155983`*^9}, {3.676716882176817*^9, 3.676716945294902*^9}, {
   3.6767170459251747`*^9, 3.6767170607788143`*^9}, {3.676718574367128*^9, 
   3.6767186497567997`*^9}, {3.681535695134433*^9, 3.681535698590333*^9}, {
   3.681535744285284*^9, 3.681535890927622*^9}, {3.6815359809893713`*^9, 
   3.681535981780435*^9}, {3.68153604429919*^9, 3.681536045402277*^9}, {
   3.681536089137332*^9, 3.6815360892886066`*^9}, {3.681536198749497*^9, 
   3.681536261466614*^9}, {3.681536654430881*^9, 3.681536722932189*^9}, {
   3.681537142501647*^9, 3.6815371578606157`*^9}, {3.681537338334341*^9, 
   3.6815373397972507`*^9}, 3.681537858555859*^9, {3.68153792608152*^9, 
   3.681537987678331*^9}, {3.684659947078411*^9, 3.6846599908844357`*^9}, {
   3.684660701917544*^9, 3.684660711307166*^9}, {3.684750426321916*^9, 
   3.684750456152512*^9}, 3.6847505354624767`*^9, 3.6847505885484467`*^9, {
   3.684756538849083*^9, 3.6847565396015043`*^9}, {3.6847567484574413`*^9, 
   3.684756869837099*^9}, {3.684756909835198*^9, 3.6847569355299053`*^9}, {
   3.6847572559432287`*^9, 3.684757267390047*^9}, {3.690720026381978*^9, 
   3.690720225189761*^9}, {3.690720478732951*^9, 3.690720478899685*^9}, {
   3.690720531419169*^9, 3.690720550713361*^9}, {3.695626165820869*^9, 
   3.695626179627293*^9}, {3.695627272525612*^9, 3.695627290372546*^9}, {
   3.695627554858206*^9, 3.69562764509546*^9}, {3.695627744444347*^9, 
   3.6956277687865973`*^9}, {3.695627850936256*^9, 3.6956279176689453`*^9}, {
   3.695628728792872*^9, 3.695628728896248*^9}, {3.6971826738362837`*^9, 
   3.697182673956007*^9}, {3.697182705716474*^9, 3.697182717330534*^9}, {
   3.6971827614272833`*^9, 3.697182803751441*^9}, {3.697182834847155*^9, 
   3.697182836718484*^9}, {3.697182968026033*^9, 3.6971829736576767`*^9}, {
   3.6971830327686853`*^9, 3.697183033767529*^9}, {3.69718311399776*^9, 
   3.697183120668326*^9}, {3.697183392539839*^9, 3.697183427537856*^9}, {
   3.697183507750389*^9, 3.697183524886215*^9}, {3.707481227097074*^9, 
   3.707481235072578*^9}, {3.70748130226254*^9, 3.707481365300267*^9}, {
   3.707481466449724*^9, 3.707481530183185*^9}, {3.707555861728775*^9, 
   3.707555898808272*^9}, {3.707555947334725*^9, 3.707556016707588*^9}, {
   3.707556350768302*^9, 3.707556351023938*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Main panel: original model vs \[ScriptL]", "Subsection",
 CellChangeTimes->{{3.690719793156396*^9, 3.6907198018355217`*^9}, {
  3.6907198751617107`*^9, 3.690719875496697*^9}, {3.695624779902974*^9, 
  3.695624785933456*^9}, {3.697182625127001*^9, 3.697182627020895*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "parameters", " ", "and", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"form", "[", "x_", "]"}], ":=", 
    RowBox[{
    "\"\<./zz-data/preconditioned/original/engraftProb_\>\"", "<>", "x", 
     "<>", "\"\<.dat\>\""}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indices", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<00_*_001\>\"", ",", "\"\<01_*_001\>\"", ",", "\"\<02_*_001\>\""}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"num", "=", 
     RowBox[{"Length", "[", "indices", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getPars", "[", 
        RowBox[{"form", "[", 
         RowBox[{"indices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params\[ScriptL]Func", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\[ScriptCapitalN]", "\[Rule]", "\[Section]\[ScriptCapitalN]"}], 
          ",", 
          RowBox[{
          "\[ScriptCapitalS]", "\[Rule]", "\[Section]\[ScriptCapitalS]"}], 
          ",", 
          RowBox[{"nStar", "\[Rule]", "\[Section]nStar"}], ",", 
          RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "\[Section]\[Beta]"}], ",", 
          RowBox[{"\[ScriptL]", "\[Rule]", 
           RowBox[{"\[Section]\[Section]\[ScriptL]", "/", "1440."}]}], ",", 
          RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Alpha]"}]}], "}"}], "/.", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sStarVals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Section]sStar", "/.", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getReconstProb", "[", 
        RowBox[{"form", "[", 
         RowBox[{"indices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.69562559554852*^9, 3.695625598399873*^9}, {
  3.6956256524393883`*^9, 3.695625677941085*^9}, {3.695625739162807*^9, 
  3.695626020264777*^9}, {3.69562610207803*^9, 3.695626107649383*^9}, {
  3.695626144656904*^9, 3.695626147525078*^9}, {3.6956273670335083`*^9, 
  3.695627384807953*^9}, {3.6956277179967213`*^9, 3.6956277251244164`*^9}, {
  3.6956282014424562`*^9, 3.695628205370554*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mySym", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "0.7"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mySymBig", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "1.1"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"mainPanel", "=", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"reconstProb", "/.", 
           RowBox[{"params\[ScriptL]Func", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Section]\[ScriptL]", ",", "1", ",", "5"}], "}"}],
        ",", 
       RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"sStarVals", ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "mySymBig"}], ",", 
            RowBox[{
            "LegendLabel", "\[Rule]", 
             "\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)\>\""}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", "18", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.72", ",", "0.25"}], "}"}]}], "]"}]}]}], " ", "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"reconstProb0", "/.", 
           RowBox[{"params\[ScriptL]Func", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Section]\[ScriptL]", ",", "1", ",", "5"}], "}"}],
        ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Dotted", ",", 
            RowBox[{"myCol", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "mySym"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[ScriptL] (minutes)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Reconstitution Prob.\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"ticksSize", ",", 
        RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.92", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", "]"}], 
   "/.", "myPlotStyle"}]}]}], "Input",
 CellChangeTimes->{{3.676187167751549*^9, 3.6761872791955147`*^9}, {
   3.67618745950136*^9, 3.676187469540773*^9}, {3.676187506363727*^9, 
   3.676187528043665*^9}, {3.676187584521097*^9, 3.676187586944746*^9}, {
   3.676193468367508*^9, 3.676193501564136*^9}, {3.676193546204811*^9, 
   3.676193789604044*^9}, {3.676194390951418*^9, 3.67619439113517*^9}, {
   3.676194531835161*^9, 3.6761945867523937`*^9}, {3.676194743020062*^9, 
   3.676194743354826*^9}, {3.676194867943478*^9, 3.676194900221445*^9}, {
   3.676195307336607*^9, 3.676195318176538*^9}, {3.676195366765708*^9, 
   3.676195464185676*^9}, {3.6761967561092453`*^9, 3.676196795522889*^9}, {
   3.676701715156272*^9, 3.676701716499498*^9}, {3.676704251477838*^9, 
   3.676704296723969*^9}, {3.6767044787967176`*^9, 3.676704483964714*^9}, {
   3.676704616064863*^9, 3.676704701965728*^9}, 3.676704765781336*^9, {
   3.6767048065301323`*^9, 3.6767048514962463`*^9}, 3.676704886065534*^9, {
   3.676705131383449*^9, 3.6767051543021097`*^9}, {3.67670527908226*^9, 
   3.6767053183757*^9}, {3.676707080699407*^9, 3.6767071066331367`*^9}, {
   3.676707152801051*^9, 3.67670715963946*^9}, {3.676707254618391*^9, 
   3.676707278019137*^9}, {3.67671664164213*^9, 3.676716641849145*^9}, {
   3.676716676193823*^9, 3.6767167247983*^9}, {3.676716765997422*^9, 
   3.6767168005155983`*^9}, {3.676716882176817*^9, 3.676716945294902*^9}, {
   3.6767170459251747`*^9, 3.6767170607788143`*^9}, {3.676718574367128*^9, 
   3.6767186497567997`*^9}, {3.681535695134433*^9, 3.681535698590333*^9}, {
   3.681535744285284*^9, 3.681535890927622*^9}, {3.6815359809893713`*^9, 
   3.681535981780435*^9}, {3.68153604429919*^9, 3.681536045402277*^9}, {
   3.681536089137332*^9, 3.6815360892886066`*^9}, {3.681536198749497*^9, 
   3.681536261466614*^9}, {3.681536654430881*^9, 3.681536722932189*^9}, {
   3.681537142501647*^9, 3.6815371578606157`*^9}, {3.681537338334341*^9, 
   3.6815373397972507`*^9}, 3.681537858555859*^9, {3.68153792608152*^9, 
   3.681537987678331*^9}, {3.684659947078411*^9, 3.6846599908844357`*^9}, {
   3.684660701917544*^9, 3.684660711307166*^9}, {3.684750426321916*^9, 
   3.684750456152512*^9}, 3.6847505354624767`*^9, 3.6847505885484467`*^9, {
   3.684756538849083*^9, 3.6847565396015043`*^9}, {3.6847567484574413`*^9, 
   3.684756869837099*^9}, {3.684756909835198*^9, 3.6847569355299053`*^9}, {
   3.6847572559432287`*^9, 3.684757267390047*^9}, {3.690720026381978*^9, 
   3.690720225189761*^9}, {3.690720478732951*^9, 3.690720478899685*^9}, {
   3.690720531419169*^9, 3.690720550713361*^9}, {3.695626165820869*^9, 
   3.695626179627293*^9}, {3.695627272525612*^9, 3.695627290372546*^9}, {
   3.695627554858206*^9, 3.69562764509546*^9}, {3.695627744444347*^9, 
   3.6956277687865973`*^9}, {3.695627850936256*^9, 3.6956279176689453`*^9}, {
   3.695628728792872*^9, 3.695628728896248*^9}, {3.6971826738362837`*^9, 
   3.697182673956007*^9}, {3.697182705716474*^9, 3.697182717330534*^9}, {
   3.6971827614272833`*^9, 3.697182803751441*^9}, {3.697182834847155*^9, 
   3.697182836718484*^9}, {3.697182968026033*^9, 3.6971829736576767`*^9}, {
   3.6971830327686853`*^9, 3.697183033767529*^9}, {3.69718311399776*^9, 
   3.697183120668326*^9}, {3.697183392539839*^9, 3.697183427537856*^9}, {
   3.697183507750389*^9, 3.697183524886215*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"reconstProb", "/.", 
          RowBox[{"params\[ScriptL]Func", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Section]\[Section]\[ScriptL]", ",", "1", ",", "5"}], "}"}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{"sStarVals", ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "mySymBig"}], ",", 
           RowBox[{
           "LegendLabel", "\[Rule]", 
            "\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)\>\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", "18", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
           RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.15", ",", "0.3"}], "}"}]}], "]"}]}]}], " ", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"reconstProb0", "/.", 
          RowBox[{"params\[ScriptL]Func", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Section]\[Section]\[ScriptL]", ",", "1", ",", "5"}], "}"}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{"Dotted", ",", 
           RowBox[{"myCol", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"data", ",", 
      RowBox[{"PlotMarkers", "\[Rule]", "mySymBig"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[ScriptL] (minutes)\>\"", ",", "labelSize", ",", 
         RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Reconstitution Prob.\>\"", ",", "labelSize", ",", 
         RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"ticksSize", ",", 
       RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.92", ",", "1"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", "]"}], "/.",
   "myPlotStyle"}]], "Input",
 CellChangeTimes->{{3.707474734769412*^9, 3.7074747406333447`*^9}, {
  3.7074747876413393`*^9, 3.70747485684553*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Inset: alternative model vs \[Alpha] (for fixed \[ScriptL])", \
"Subsection",
 CellChangeTimes->{{3.695624795165737*^9, 3.695624805724781*^9}, {
  3.6971826312608957`*^9, 3.697182649300214*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "parameters", " ", "and", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"form", "[", "x_", "]"}], ":=", 
    RowBox[{
    "\"\<./zz-data/preconditioned/alternative/engraftProb_\>\"", "<>", "x", 
     "<>", "\"\<.dat\>\""}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indices", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<000_004_*_001\>\"", ",", "\"\<001_004_*_001\>\"", ",", 
       "\"\<002_004_*_001\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"num", "=", 
     RowBox[{"Length", "[", "indices", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getPars", "[", 
        RowBox[{"form", "[", 
         RowBox[{"indices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"params\[ScriptL]Func", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\[ScriptCapitalN]", "\[Rule]", "\[Section]\[ScriptCapitalN]"}], 
          ",", 
          RowBox[{
          "\[ScriptCapitalS]", "\[Rule]", "\[Section]\[ScriptCapitalS]"}], 
          ",", 
          RowBox[{"nStar", "\[Rule]", "\[Section]nStar"}], ",", 
          RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "\[Section]\[Beta]"}], ",", 
          RowBox[{"\[ScriptL]", "\[Rule]", "\[Section]\[ScriptL]"}], ",", 
          RowBox[{"\[Alpha]", "\[Rule]", "\[Section]\[Section]\[Alpha]"}]}], 
         "}"}], "/.", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sStarVals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Section]sStar", "/.", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getReconstProbAlt", "[", 
        RowBox[{"form", "[", 
         RowBox[{"indices", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.69562559554852*^9, 3.695625598399873*^9}, {
   3.6956256524393883`*^9, 3.695625677941085*^9}, {3.695625739162807*^9, 
   3.695626020264777*^9}, {3.69562610207803*^9, 3.695626107649383*^9}, {
   3.695626144656904*^9, 3.695626147525078*^9}, {3.6956273670335083`*^9, 
   3.695627384807953*^9}, {3.6956277179967213`*^9, 3.6956277251244164`*^9}, {
   3.6956279381087837`*^9, 3.695627986812807*^9}, 3.6956287701151037`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mySym", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "0.7"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mySymBig", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "\[Times]", "1.5"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"inset", "=", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LogLinearPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"reconstProbAlt", "/.", 
           RowBox[{"params\[ScriptL]Func", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], " ", "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\[Section]\[Section]\[Alpha]", ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]], ",", "1"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogLinearPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "mySymBig"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Alpha]\>\"", ",", 
          RowBox[{"labelSize", "-", "2"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", "None"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"ticksSize", "-", "2"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["i", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              RowBox[{"Superscript", "[", 
               RowBox[{"\"\<10\>\"", ",", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "8"}], ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["i", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "8"}], ",", "0", ",", "2"}], "}"}]}], "]"}]}], 
         "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "8"}], 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
          FractionBox["0", 
           RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "220"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Background", "\[Rule]", "White"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"23", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"45", ",", "3"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], "/.", "myPlotStyle"}]}]}], "Input",
 CellChangeTimes->{{3.695628573782344*^9, 3.695628590972674*^9}, {
   3.695628621236765*^9, 3.695628703137442*^9}, 3.697182753434794*^9, {
   3.6971830036337013`*^9, 3.6971830207854757`*^9}, {3.697183056616581*^9, 
   3.697183089717883*^9}, {3.697183131124155*^9, 3.697183131564025*^9}, {
   3.697183254571341*^9, 3.697183338364699*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combined fig", "Subsection",
 CellChangeTimes->{{3.690720323620864*^9, 3.690720338352648*^9}, {
  3.6907203978142147`*^9, 3.690720402757575*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"mainPanel", ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{"inset", ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.28", ",", "0.36"}], "}"}], "]"}]}], " ", "]"}]}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6907204043627977`*^9, 3.69072041705309*^9}, {
  3.690720572480157*^9, 3.690720667068509*^9}, {3.6956248225569057`*^9, 
  3.695624839891564*^9}, {3.69718310409339*^9, 3.697183106143763*^9}, {
  3.6971831413160048`*^9, 3.6971831602184896`*^9}, {3.697183238384974*^9, 
  3.697183251047353*^9}, {3.6971833292846212`*^9, 3.697183375170753*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Non-preconditioned host", "Chapter",
 CellChangeTimes->{{3.695628824924637*^9, 3.6956288285636673`*^9}, {
  3.695707696263802*^9, 3.695707696847687*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.69562883542819*^9, 3.69562883629123*^9}}],

Cell[CellGroupData[{

Cell["ODE integration and approximations", "Subsection",
 CellChangeTimes->{{3.673249745359564*^9, 3.6732497462709723`*^9}, {
  3.695634026084848*^9, 3.6956340327711763`*^9}}],

Cell[CellGroupData[{

Cell["Integrators", "Subsubsection",
 CellChangeTimes->{{3.695640799265752*^9, 3.69564080384892*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveODEs", "[", 
   RowBox[{"params_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"paramSub", ",", "initialCondition", ",", "eqs", ",", "dSol"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paramSub", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", 
         FractionBox[
          RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{
          FractionBox["sStar", 
           RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
        RowBox[{"a", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "\[ScriptL]"], "-", 
            FractionBox[
             RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
          FractionBox["\[ScriptCapitalN]", 
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"initialCondition", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "sStar"}], ",", 
        RowBox[{
         RowBox[{"s2", "[", "0", "]"}], "\[Equal]", "\[ScriptCapitalS]"}], 
        ",", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "nStar"}], ",", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eqs", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"s1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d1", "+", "\[Beta]1"}], ")"}], 
              RowBox[{"n1", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Delta]1", "+", 
                RowBox[{"a1", 
                 FractionBox[
                  RowBox[{"\[ScriptCapitalN]", "-", 
                   RowBox[{"n1", "[", "t", "]"}], "-", 
                   RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}], 
               ")"}], 
              RowBox[{"s1", "[", "t", "]"}]}]}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"s2", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d2", "+", "\[Beta]2"}], ")"}], 
              RowBox[{"n2", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Delta]2", "+", 
                RowBox[{"a2", 
                 FractionBox[
                  RowBox[{"\[ScriptCapitalN]", "-", 
                   RowBox[{"n1", "[", "t", "]"}], "-", 
                   RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}], 
               ")"}], 
              RowBox[{"s2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d1"}], " ", 
              RowBox[{"n1", "[", "t", "]"}]}], "+", 
             RowBox[{"a1", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", 
                RowBox[{"n1", "[", "t", "]"}], "-", 
                RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
              RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d2"}], " ", 
              RowBox[{"n2", "[", "t", "]"}]}], "+", 
             RowBox[{"a2", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", 
                RowBox[{"n1", "[", "t", "]"}], "-", 
                RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
              RowBox[{"s2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
          "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a1", "\[Rule]", "a"}], ",", 
           RowBox[{"d1", "\[Rule]", "d"}], ",", 
           RowBox[{"\[Beta]1", "\[Rule]", "\[Beta]"}], ",", 
           RowBox[{"\[Delta]1", "\[Rule]", "\[Delta]"}], ",", 
           RowBox[{"a2", "\[Rule]", "a"}], ",", 
           RowBox[{"d2", "\[Rule]", "d"}], ",", 
           RowBox[{"\[Beta]2", "\[Rule]", "\[Beta]"}], ",", 
           RowBox[{"\[Delta]2", "\[Rule]", "\[Delta]"}]}], "}"}]}], ")"}], "/.",
        "paramSub"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"dSol", "=", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"eqs", "/.", "params"}], ",", 
            RowBox[{"initialCondition", "/.", "params"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], ",", 
           RowBox[{"s2", "[", "t", "]"}], ",", 
           RowBox[{"n1", "[", "t", "]"}], ",", 
           RowBox[{"n2", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dSol", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695633729703937*^9, 3.695633736142619*^9}, 
   3.695634325705853*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveLinearODEs", "[", 
   RowBox[{"params_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"paramSub", ",", "initialCondition", ",", "eqs", ",", "dSol"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paramSub", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", 
         FractionBox[
          RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{
          FractionBox["sStar", 
           RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
        RowBox[{"a", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "\[ScriptL]"], "-", 
            FractionBox[
             RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
          FractionBox["\[ScriptCapitalN]", 
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"initialCondition", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"s2", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"\[ScriptCapitalS]", "-", 
          RowBox[{"(", 
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eqs", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", "d"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "-", 
              RowBox[{"\[ScriptCapitalN]", " ", 
               FractionBox[
                RowBox[{"s2", "[", "t", "]"}], 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"sStar", "+", "\[ScriptCapitalS]", "-", 
                    RowBox[{"(", 
                    RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], ")"}], "-", 
                    FractionBox[
                    RowBox[{"\[Beta]", " ", "\[ScriptCapitalN]"}], 
                    "\[Delta]"]}], ")"}], 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Delta]"}], " ", "t"}], "]"}]}], " ", "+", 
                  
                  FractionBox[
                   RowBox[{"\[Beta]", " ", "\[ScriptCapitalN]"}], 
                   "\[Delta]"]}], ")"}]]}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"s2", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"d", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n2", "[", "t", "]"}], "-", 
               RowBox[{"\[ScriptCapitalN]", " ", 
                FractionBox[
                 RowBox[{"s2", "[", "t", "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"sStar", "+", "\[ScriptCapitalS]", "-", 
                    RowBox[{"(", 
                    RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], ")"}], "-", 
                    FractionBox[
                    RowBox[{"\[Beta]", " ", "\[ScriptCapitalN]"}], 
                    "\[Delta]"]}], ")"}], 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Delta]"}], " ", "t"}], "]"}]}], " ", "+", 
                   
                   FractionBox[
                    RowBox[{"\[Beta]", " ", "\[ScriptCapitalN]"}], 
                    "\[Delta]"]}], ")"}]]}]}], ")"}]}], "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"n2", "[", "t", "]"}]}], "-", 
            RowBox[{"\[Delta]", " ", 
             RowBox[{"s2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
         "}"}], ")"}], "/.", "paramSub"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"dSol", "=", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"eqs", "/.", "params"}], ",", 
            RowBox[{"initialCondition", "/.", "params"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], ",", 
           RowBox[{"n2", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dSol", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6694417697705317`*^9, 3.669441846103045*^9}, {
  3.669441892693983*^9, 3.6694420051450987`*^9}, {3.669442229793828*^9, 
  3.6694422912943068`*^9}, {3.669442375123905*^9, 3.669442390674618*^9}, {
  3.6694424728003817`*^9, 3.669442481407476*^9}, {3.669443134087372*^9, 
  3.6694431356468143`*^9}, {3.6742048459821568`*^9, 3.6742049076172323`*^9}, {
  3.674210891326152*^9, 3.674210934076521*^9}, {3.67421698973663*^9, 
  3.67421699792376*^9}, {3.6742171576113443`*^9, 3.674217159314579*^9}, {
  3.695634208542243*^9, 3.695634275284821*^9}, {3.6956343072428627`*^9, 
  3.6956343249300737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveODEsDaily", "[", 
   RowBox[{"params_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "paramSub", ",", "initialCondition", ",", "eqs", ",", "dSol", ",", 
      "condition"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paramSub", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", 
         FractionBox[
          RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{
          FractionBox["sStar", 
           RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
        RowBox[{"a", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "\[ScriptL]"], "-", 
            FractionBox[
             RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
          FractionBox["\[ScriptCapitalN]", 
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"initialCondition", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "sStar"}], ",", 
        RowBox[{
         RowBox[{"s2", "[", "0", "]"}], "\[Equal]", 
         FractionBox["\[ScriptCapitalS]", "7.0"]}], ",", 
        RowBox[{
         RowBox[{"n1", "[", "0", "]"}], "\[Equal]", "nStar"}], ",", 
        RowBox[{
         RowBox[{"n2", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"eqs", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"s1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d1", "+", "\[Beta]1"}], ")"}], 
              RowBox[{"n1", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Delta]1", "+", 
                RowBox[{"a1", 
                 FractionBox[
                  RowBox[{"\[ScriptCapitalN]", "-", 
                   RowBox[{"n1", "[", "t", "]"}], "-", 
                   RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}], 
               ")"}], 
              RowBox[{"s1", "[", "t", "]"}]}]}]}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"s2", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"d2", "+", "\[Beta]2"}], ")"}], 
              RowBox[{"n2", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"\[Delta]2", "+", 
                RowBox[{"a2", 
                 FractionBox[
                  RowBox[{"\[ScriptCapitalN]", "-", 
                   RowBox[{"n1", "[", "t", "]"}], "-", 
                   RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"]}]}], 
               ")"}], 
              RowBox[{"s2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"n1", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d1"}], " ", 
              RowBox[{"n1", "[", "t", "]"}]}], "+", 
             RowBox[{"a1", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", 
                RowBox[{"n1", "[", "t", "]"}], "-", 
                RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
              RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"n2", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d2"}], " ", 
              RowBox[{"n2", "[", "t", "]"}]}], "+", 
             RowBox[{"a2", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", 
                RowBox[{"n1", "[", "t", "]"}], "-", 
                RowBox[{"n2", "[", "t", "]"}]}], "\[ScriptCapitalN]"], 
              RowBox[{"s2", "[", "t", "]"}]}]}]}]}], "\[IndentingNewLine]", 
          "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a1", "\[Rule]", "a"}], ",", 
           RowBox[{"d1", "\[Rule]", "d"}], ",", 
           RowBox[{"\[Beta]1", "\[Rule]", "\[Beta]"}], ",", 
           RowBox[{"\[Delta]1", "\[Rule]", "\[Delta]"}], ",", 
           RowBox[{"a2", "\[Rule]", "a"}], ",", 
           RowBox[{"d2", "\[Rule]", "d"}], ",", 
           RowBox[{"\[Beta]2", "\[Rule]", "\[Beta]"}], ",", 
           RowBox[{"\[Delta]2", "\[Rule]", "\[Delta]"}]}], "}"}]}], ")"}], "/.",
        "paramSub"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"condition", "=", 
      RowBox[{"WhenEvent", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
         RowBox[{"t", "<", "6.5"}]}], ",", 
        RowBox[{
         RowBox[{"s2", "[", "t", "]"}], "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], "+", 
           FractionBox[
            RowBox[{"\[ScriptCapitalS]", "/.", "params"}], "7.0"]}], 
          ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dSol", "=", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"eqs", "/.", "params"}], ",", 
            RowBox[{"initialCondition", "/.", "params"}], ",", 
            RowBox[{"{", "condition", "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], ",", 
           RowBox[{"s2", "[", "t", "]"}], ",", 
           RowBox[{"n1", "[", "t", "]"}], ",", 
           RowBox[{"n2", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dSol", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.673249817317045*^9, 3.673249834476966*^9}, {
  3.6732498651559067`*^9, 3.673249897979486*^9}, {3.67324992945844*^9, 
  3.6732499354330187`*^9}, {3.680340764479157*^9, 3.6803407664543552`*^9}, {
  3.680341774316372*^9, 3.680341774436242*^9}, {3.680341830554257*^9, 
  3.680341902127614*^9}, {3.680342696213352*^9, 3.6803426965971622`*^9}, {
  3.695640922534548*^9, 3.695641049177264*^9}, {3.695641307984838*^9, 
  3.6956413411113243`*^9}, {3.695641652043207*^9, 3.6956416521586237`*^9}, {
  3.69564225965464*^9, 3.695642270749593*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Wrappers", "Subsubsection",
 CellChangeTimes->{{3.695640808889436*^9, 3.695640810368544*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictionODEs", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dSol", ",", "x", ",", 
      RowBox[{"T", "=", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dSol", "=", 
      RowBox[{"solveODEs", "[", 
       RowBox[{"params", ",", "T"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", "[", "t", "]"}], "/.", "dSol"}], ")"}], "/.", 
        RowBox[{"t", "\[Rule]", "T"}]}], 
       RowBox[{"nStar", "/.", "params"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6744564585766773`*^9, 3.67445651053187*^9}, {
   3.6956337857162857`*^9, 3.695633816187169*^9}, {3.695633982614213*^9, 
   3.695633985261095*^9}, 3.695634144343444*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictionSmall", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"paramSub", ",", "x"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paramSub", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", 
         FractionBox[
          RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{
          FractionBox["sStar", 
           RowBox[{"\[ScriptL]", " ", "nStar"}]], "-", "\[Beta]"}]}], ",", 
        RowBox[{"a", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "\[ScriptL]"], "-", 
            FractionBox[
             RowBox[{"\[Beta]", " ", "nStar"}], "sStar"]}], ")"}], 
          FractionBox["\[ScriptCapitalN]", 
           RowBox[{"\[ScriptCapitalN]", "-", "nStar"}]]}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "nStar"], 
           FractionBox[
            RowBox[{"a", 
             FractionBox[
              RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
              "\[ScriptCapitalN]"]}], 
            RowBox[{"\[Delta]", "+", 
             RowBox[{"a", 
              FractionBox[
               RowBox[{"\[ScriptCapitalN]", "-", "nStar"}], 
               "\[ScriptCapitalN]"]}]}]], "\[ScriptCapitalS]"}], ")"}], "/.", 
         "paramSub"}], ")"}], "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"x", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"x", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695633852273795*^9, 3.695633956566566*^9}, {
   3.6956339974368773`*^9, 3.695633999541191*^9}, 3.695634149520348*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictionBig", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dSol", ",", "x", ",", 
      RowBox[{"T", "=", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dSol", "=", 
      RowBox[{"solveLinearODEs", "[", 
       RowBox[{"params", ",", "T"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", "[", "t", "]"}], "/.", "dSol"}], ")"}], "/.", 
        RowBox[{"t", "\[Rule]", "T"}]}], 
       RowBox[{"nStar", "/.", "params"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"x", ",", "0"}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.674455783991061*^9, 3.674455928337544*^9}, {
  3.6744564227433767`*^9, 3.674456423055252*^9}, {3.67453935812615*^9, 
  3.67453936326123*^9}, {3.6745611663955936`*^9, 3.6745611703872766`*^9}, {
  3.6956340398593397`*^9, 3.6956340450117607`*^9}, {3.6956340927702513`*^9, 
  3.6956341395277452`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Analysis", "Subsection",
 CellChangeTimes->{{3.6956437183304043`*^9, 3.695643720769752*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPars", "[", "dir_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "i", ",", "data", ",", "parsBase", ",", 
      "parsPars", ",", "parsSel", ",", "pars"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.dat\>\"", ",", "dir"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"parsBase", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ScriptCapitalN]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"sStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"nStar", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[ScriptL]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[ScriptCapitalS]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "5"}], "]"}], "]"}]}]}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"\[Alpha]", "\[Rule]", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "6"}], "]"}], "]"}]}]}], "*)"}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"parsPars", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Delta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"a", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"d", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "4"}], "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"parsSel", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]\[Beta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]\[Delta]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]a", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Gamma]d", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "4"}], "]"}], "]"}]}], ",", 
           RowBox[{"\[Epsilon]", "\[Rule]", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "5"}], "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"parsBase", ",", "parsPars", ",", "parsSel"}], "}"}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pars", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695583714787603*^9, 3.695583723715773*^9}, {
  3.695583954441474*^9, 3.6955840232506523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getData", "[", "dir_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "files", ",", "nFiles", ",", "data", ",", "j", ",", "dose", ",", 
      "finalState", ",", "fixProb", ",", "finalTime"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"files", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*.dat\>\"", ",", "dir"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nFiles", "=", 
      RowBox[{"Length", "[", "files", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dose", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finalTime", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finalState", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fixProb", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nFiles"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nFiles"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", 
          RowBox[{"files", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dose", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "5"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"data", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"finalTime", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"finalState", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"Unitize", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], " ", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"1", " ", "if", " ", "s2"}], ">", 
           RowBox[{"0", " ", "or", " ", "0", " ", "if", " ", "s2"}]}], "=", 
          "0"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fixProb", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"finalState", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"dose", ",", "finalTime", ",", "finalState", ",", "fixProb"}], 
       "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.67749101974644*^9, 3.677491086411522*^9}, {
   3.677492308848658*^9, 3.677492501417471*^9}, {3.677492544560114*^9, 
   3.677492597646229*^9}, 3.695644670161037*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"extractFixationStats", "[", "dir_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fixProb", ",", "meanUnconditional", ",", "stdUnconditional", ",", 
      "meanConditional", ",", "stdConditional", ",", "dose", ",", "time", ",",
       "state", ",", "prob"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dose", ",", "time", ",", "state", ",", "prob"}], "}"}], "=", 
      RowBox[{"getData", "[", "dir", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"fixProb", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dose", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"prob", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "dose", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"meanUnconditional", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dose", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"time", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "/", "365.25"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "dose", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stdUnconditional", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dose", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StandardDeviation", "[", 
            RowBox[{"time", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "/", "365.25"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "dose", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"meanConditional", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dose", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"time", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"state", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
               " ", "]"}], "]"}], "]"}], "/", "365.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "dose", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stdConditional", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dose", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StandardDeviation", "[", 
            RowBox[{"time", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"state", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}],
               " ", "]"}], "]"}], "]"}], "/", "365.25"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "dose", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
       "fixProb", ",", "meanUnconditional", ",", "stdUnconditional", ",", 
        "meanConditional", ",", "stdConditional"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.67756815809566*^9, 3.677568315854412*^9}, {
   3.67756837141957*^9, 3.677568376167967*^9}, {3.6775775541241903`*^9, 
   3.677577580370695*^9}, 3.677577614419149*^9, {3.677577710726283*^9, 
   3.677577715597679*^9}, {3.677577765141892*^9, 3.67757776786182*^9}, 
   3.6778432999775763`*^9, {3.677843334237673*^9, 3.677843398803134*^9}, {
   3.677843743271771*^9, 3.677843775117976*^9}, {3.6848409490791407`*^9, 
   3.684840978181625*^9}, {3.695643743161385*^9, 3.6956437441770477`*^9}, {
   3.695644664154933*^9, 3.6956446669293613`*^9}, {3.695645921437624*^9, 
   3.695645941430348*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Analytical formulae", "Subsection",
 CellChangeTimes->{{3.6956433082249603`*^9, 3.695643313631789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getZ0", "[", "params_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dSol", ",", 
      RowBox[{"T", "=", "10"}], ",", "z0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dSol", "=", 
      RowBox[{"solveODEs", "[", 
       RowBox[{"params", ",", "T"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n2", "[", "t", "]"}], "/.", "dSol"}], ")"}], "/.", 
        RowBox[{"t", "\[Rule]", "T"}]}], 
       RowBox[{"\[ScriptCapitalN]", "/.", "params"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "z0", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.668841539600287*^9, 3.668841561906837*^9}, {
   3.668841616682199*^9, 3.668841619345768*^9}, {3.668841746797442*^9, 
   3.668841752108912*^9}, 3.66884188208971*^9, {3.668842044618889*^9, 
   3.668842049849934*^9}, {3.6688420839213943`*^9, 3.6688422549568567`*^9}, {
   3.67749076451233*^9, 3.677490781687209*^9}, {3.677490828637987*^9, 
   3.677490828927264*^9}, {3.677490875829639*^9, 3.6774908779562693`*^9}, {
   3.677490928098897*^9, 3.677490968104032*^9}, {3.677492918547641*^9, 
   3.6774929346022387`*^9}, {3.695584308088787*^9, 3.6955843251507587`*^9}, {
   3.695584381989959*^9, 3.695584398074939*^9}, {3.695584451565102*^9, 
   3.6955845298680887`*^9}, {3.695643448780912*^9, 3.695643488729991*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalProb", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "prob"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"prob", "=", 
        FractionBox["z0", 
         RowBox[{"\[Sigma]", " ", "\[Xi]"}]]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"prob", "=", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "z0"}], "]"}]}], 
          RowBox[{"1", "-", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
             "\[Xi]"}], "]"}]}]], ")"}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695586504409417*^9, 3.6955866467615223`*^9}, {
   3.695586702077282*^9, 3.695586720452691*^9}, {3.711889333614003*^9, 
   3.711889368398201*^9}, 3.7118895614805183`*^9, {3.711889593406344*^9, 
   3.711889678475431*^9}, {3.7118897960392103`*^9, 3.7118899657300158`*^9}, {
   3.71189003902357*^9, 3.7118900407838087`*^9}, {3.711890092901648*^9, 
   3.711890164562224*^9}, {3.711890203186524*^9, 3.711890261958644*^9}, 
   3.711890297310302*^9, 3.7118903452206783`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"conditionalTime", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "time"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            FractionBox["\[Section]\[ScriptCapitalN]", "\[ScriptCapitalB]"], 
            FractionBox[
             RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "\[Xi]", "]"}], "-", 
              RowBox[{"Log", "[", 
               RowBox[{"\[Xi]", "-", "z0"}], "]"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Sigma]"}], ")"}], "z0"}], 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "z0"}], ")"}]}]], 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}]}]}], ")"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Section]\[ScriptCapitalN]", 
                RowBox[{" ", 
                 RowBox[{
                 "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", 
                  "\[Xi]"}]}]]}], 
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                  "1"}], ")"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "-", 
                   
                   RowBox[{"3", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}]}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"2", "\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                   "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], 
                  ")"}]}], "+", 
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{
                   RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                 RowBox[{"ExpIntegralEi", "[", 
                  RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "+", "z"}], ")"}]}], "]"}], "-", 
                   RowBox[{"2", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"time", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["\[Section]\[ScriptCapitalN]", 
               RowBox[{
               "\[ScriptCapitalB]", " ", "\[CapitalLambda]", " ", "\[Xi]"}]], 
              
              FractionBox["1", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{
                   "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], "]"}],
                   "-", "1"}], ")"}], " "}]], 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"EulerGamma", "+", 
                   RowBox[{"Log", "[", "\[Xi]", "]"}], "+", 
                   RowBox[{"Log", "[", "\[CapitalLambda]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Log", "[", "z", "]"}], "-", 
                   RowBox[{"Log", "[", 
                    RowBox[{"\[Xi]", "-", "z"}], "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                   "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", "1"}], ")"}]}], "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], "]"}], 
                    
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}]}], "+", 
                   
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Xi]"}], 
                    "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}]}], ")"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}], 
                    " ", 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "\[Xi]"}], "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Sigma]"}], ")"}], "\[Xi]"}], "]"}]}],
                    "-", 
                   RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Xi]", " ", "\[Sigma]"}], 
                    "]"}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], 
                    RowBox[{"ExpIntegralEi", "[", 
                    RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "-", "1"}],
                   ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"Log", "[", 
                    RowBox[{"1", "-", "\[Sigma]"}], "]"}], "-", 
                   RowBox[{"Log", "[", "\[Sigma]", "]"}]}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", " ", "z"}], "]"}], "+", 
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    "\[CapitalLambda]", " ", "\[Sigma]", " ", "\[Xi]"}], 
                    "]"}], "-", 
                   RowBox[{"Exp", "[", 
                    RowBox[{"\[CapitalLambda]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Sigma]", " ", "\[Xi]"}], "+", "z"}], ")"}]}], 
                    "]"}]}], ")"}]}]}], ")"}]}], ")"}], "/.", 
            RowBox[{"z", "\[Rule]", "z0"}]}]}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"time", "/", "365.25"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69558468484597*^9, 3.695584718769825*^9}, {
   3.6955848037398043`*^9, 3.695584899448827*^9}, {3.695584955617128*^9, 
   3.695584980574943*^9}, {3.6955852085987377`*^9, 3.6955852577202473`*^9}, {
   3.6955852985182047`*^9, 3.6955854012801228`*^9}, {3.695585492999866*^9, 
   3.695585494576703*^9}, {3.6955855448124933`*^9, 3.6955855695475492`*^9}, {
   3.6955856712545137`*^9, 3.695585707584066*^9}, 3.695585763156383*^9, {
   3.6955858753117113`*^9, 3.695585879204714*^9}, {3.71179422580057*^9, 
   3.7117942529755573`*^9}, {3.7117943741420517`*^9, 3.711794375703191*^9}, {
   3.711794414425766*^9, 3.711794435872561*^9}, {3.7117976755762863`*^9, 
   3.7117977025990257`*^9}, {3.711797775887155*^9, 3.71179777938892*^9}, 
   3.711798326498131*^9, {3.711798520250523*^9, 3.711798530086753*^9}, {
   3.7118026866630583`*^9, 3.711802713019799*^9}, {3.711802966435885*^9, 
   3.7118029825063972`*^9}, {3.711890362280406*^9, 3.711890510761325*^9}, 
   3.7118906265092897`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"variance", "[", 
   RowBox[{"z0_", ",", "\[Sigma]_", ",", "params_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Section]\[Epsilon]", ",", "\[Section]\[ScriptCapitalN]", ",", "\[Xi]",
       ",", "\[ScriptCapitalA]", ",", "\[ScriptCapitalB]", ",", 
      "\[CapitalLambda]", ",", "sec", ",", "var", ",", "sol", ",", 
      "\[CapitalDelta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Section]\[Epsilon]", "=", 
      RowBox[{"\[Epsilon]", "/.", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Section]\[ScriptCapitalN]", "=", 
      RowBox[{"\[ScriptCapitalN]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Xi]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["nStar", "\[ScriptCapitalN]"], ")"}], "/.", "params"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalA]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"sStar", "-", 
             RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
           "\[ScriptCapitalN]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "sStar"}]], 
         RowBox[{"(", 
          RowBox[{
          "\[Gamma]\[Beta]", "-", "\[Gamma]\[Delta]", "-", "\[Gamma]d", "+", 
           "\[Gamma]a"}], ")"}]}], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalB]", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Beta]", 
          RowBox[{"(", 
           RowBox[{"sStar", "-", 
            RowBox[{"\[Beta]", " ", "\[ScriptL]", " ", "nStar"}]}], ")"}], 
          "nStar", " ", "\[ScriptCapitalN]"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sStar", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"\[Beta]", " ", "\[ScriptL]"}]}], ")"}], "nStar"}]}], 
            ")"}], "2"], "sStar"}]], ")"}], "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalLambda]", "=", 
      FractionBox[
       RowBox[{
       "\[Section]\[Epsilon]", " ", "\[Section]\[ScriptCapitalN]", " ", 
        "\[ScriptCapitalA]"}], "\[ScriptCapitalB]"]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Section]\[Epsilon]", "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Neutral", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Sigma]", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", "Fixation", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "1"}], "]"}], "-", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}]}], ")"}]}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"\[Sigma]", "-", "Level"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"sec", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", 
              SuperscriptBox["\[Section]\[ScriptCapitalN]", "2"]}], 
             SuperscriptBox["\[ScriptCapitalB]", "2"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"\[Xi]", "-", "z0"}], "z0"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"\[Xi]", "-", "z0"}], "\[Xi]"], "]"}]}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", "\[Sigma]"}], "]"}], "-", " ", 
                RowBox[{"PolyLog", "[", 
                 RowBox[{"2", ",", 
                  FractionBox["z0", "\[Xi]"]}], "]"}]}], ")"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], " ", 
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", "\[Sigma]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{"\[Xi]", "-", "z0"}], "z0"], 
                  RowBox[{"Log", "[", 
                   FractionBox["\[Xi]", 
                    RowBox[{"\[Xi]", "-", "z0"}]], "]"}]}], "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"1", "-", "\[Sigma]"}], "\[Sigma]"], 
                  RowBox[{"Log", "[", 
                   RowBox[{"1", "-", "\[Sigma]"}], "]"}]}], "-", "1"}], 
                ")"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Selective", " ", "process"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{"Requires", " ", "numerical", " ", "solution", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "here", " ", "we", " ", "solve", " ", "the", " ", "first", " ", 
            "and", " ", "second", " ", "moments"}], ",", " ", 
           RowBox[{"because", " ", "we", " ", "can"}]}], ")"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]", "=", 
         SuperscriptBox["10.", 
          RowBox[{"-", "10"}]]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Move", " ", "away", " ", "from", " ", "the", " ", "singular", " ", 
           
           RowBox[{"boundaries", ".", " ", "Not"}], " ", "perfect"}], ",", 
          " ", 
          RowBox[{"but", " ", "good", " ", "enough"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"sol", "=", 
         RowBox[{
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]1", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["\[Section]\[ScriptCapitalN]", 
                  RowBox[{"\[ScriptCapitalB]", " ", "z", 
                   RowBox[{"(", 
                    RowBox[{"\[Xi]", "-", "z"}], ")"}]}]]}], 
                FractionBox[
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
                 RowBox[{"1", "-", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                    "\[Xi]"}], "]"}]}]]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalLambda]", " ", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "'"}], "[", "z", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"\[Theta]2", "''"}], "[", "z", "]"}]}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", "2"}], 
                FractionBox["\[Section]\[ScriptCapitalN]", 
                 RowBox[{"\[ScriptCapitalB]", " ", "z", 
                  RowBox[{"(", 
                   RowBox[{"\[Xi]", "-", "z"}], ")"}]}]], 
                RowBox[{"\[Theta]1", "[", "z", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "\[CapitalDelta]", "]"}], "\[Equal]",
                "0"}], ",", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", 
                RowBox[{"\[Sigma]", 
                 RowBox[{"(", 
                  RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}], "]"}], 
               "\[Equal]", "0"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "z", "]"}], ",", 
              RowBox[{"\[Theta]2", "[", "z", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", "\[CapitalDelta]", ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"(", 
                RowBox[{"\[Xi]", "-", "\[CapitalDelta]"}], ")"}]}]}], "}"}], 
            ",", 
            RowBox[{"MaxSteps", "\[Rule]", "100000"}]}], "]"}], "//", 
          "First"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"sec", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "z", "]"}], "/.", "sol"}], ")"}], "/", 
            FractionBox[
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "z"}], "]"}]}], 
             RowBox[{"1", "-", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", "\[CapitalLambda]"}], " ", "\[Sigma]", " ", 
                "\[Xi]"}], "]"}]}]]}], ")"}], "/.", 
          RowBox[{"z", "\[Rule]", "z0"}]}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"var", "=", 
      RowBox[{
       FractionBox["sec", 
        SuperscriptBox["365.25", "2"]], "-", 
       SuperscriptBox[
        RowBox[{"conditionalTime", "[", 
         RowBox[{"z0", ",", "\[Sigma]", ",", "params"}], "]"}], "2"]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "var", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711446478802761*^9, 3.7114465828170633`*^9}, {
   3.711446738841564*^9, 3.711446754720251*^9}, {3.711446813086996*^9, 
   3.71144690628032*^9}, {3.711446950281795*^9, 3.711446957173641*^9}, {
   3.711446993336164*^9, 3.711447046956019*^9}, 3.7114472068375797`*^9, {
   3.711451969649268*^9, 3.711452022357366*^9}, {3.711452256222262*^9, 
   3.711452300180933*^9}, {3.711453174625086*^9, 3.711453183174818*^9}, {
   3.711691724516521*^9, 3.7116917550179987`*^9}, {3.7116917981043873`*^9, 
   3.711691841087152*^9}, {3.711791758524539*^9, 3.711791795956662*^9}, {
   3.711791832882471*^9, 3.71179184631597*^9}, {3.711791893385562*^9, 
   3.71179194199135*^9}, {3.711791980213264*^9, 3.711791982429175*^9}, {
   3.71179206230791*^9, 3.711792076293066*^9}, {3.711797868947214*^9, 
   3.711797871207541*^9}, {3.711797992683066*^9, 3.7117980978311787`*^9}, {
   3.711798133473428*^9, 3.711798136936211*^9}, 3.711798555304923*^9, {
   3.711798599536109*^9, 3.7117986057742977`*^9}, {3.711798649531909*^9, 
   3.71179870357178*^9}, {3.711798840278583*^9, 3.7117988601097317`*^9}, {
   3.7117997785339823`*^9, 3.711799820412499*^9}, {3.711799857445311*^9, 
   3.711799863227083*^9}, 3.711801078316558*^9, {3.711801184759046*^9, 
   3.7118011875418673`*^9}, {3.711801543986307*^9, 3.7118015820914717`*^9}, 
   3.711802735430949*^9, 3.711802995694175*^9, {3.7118031064862633`*^9, 
   3.711803110825198*^9}, {3.711803145124913*^9, 3.711803145300867*^9}, {
   3.7118033282869062`*^9, 3.711803353764391*^9}, {3.7118033937330112`*^9, 
   3.711803394187455*^9}, {3.711803519943961*^9, 3.7118035203192873`*^9}, {
   3.71180355765485*^9, 3.711803558062118*^9}, {3.7118064756926928`*^9, 
   3.7118065668481092`*^9}, {3.711806621895279*^9, 3.711806752579093*^9}, {
   3.711806804063676*^9, 3.711806804246913*^9}, {3.711806953941045*^9, 
   3.7118069827051773`*^9}, {3.711807325335123*^9, 3.71180735507304*^9}, {
   3.711863849056623*^9, 3.71186384956861*^9}, {3.711864018088746*^9, 
   3.711864034290105*^9}, {3.711865004863596*^9, 3.711865005817881*^9}, {
   3.7118652527947893`*^9, 3.711865252882113*^9}, 3.711865445012985*^9, {
   3.71186580456024*^9, 3.7118658051587563`*^9}, {3.711865921834813*^9, 
   3.711865923354885*^9}, {3.7118659856665983`*^9, 3.711866002594029*^9}, {
   3.7118906077837353`*^9, 3.7118907092501287`*^9}, {3.7118907685173903`*^9, 
   3.7118908465632257`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection",
 CellChangeTimes->{{3.695637196735448*^9, 3.695637199670351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"chimerismErrorPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "odePrediction_", ",", "smallPrediction_", ",", "bigPrediction_"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"smallError_", ",", "bigError_"}], "}"}], ",", "params_", ",", 
    "label_", ",", "legend_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myCol", ",", "mySym", ",", "mySymLegend", ",", "mySymError", ",", 
      "myTicks", ",", "myTicksError", ",", "predPlot", ",", "errorPlot", ",", 
      "plot", ",", 
      RowBox[{"imageSize", "=", "370"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myCol", "=", 
      RowBox[{"col", "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mySym", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Times]", "1.3"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySymLegend", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Times]", "1.0"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySymError", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"sym", "/.", "myPlotStyle"}], ")"}], "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Times]", "2.2"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"myTicks", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              RowBox[{"Superscript", "[", 
               RowBox[{"\"\<10\>\"", ",", "j"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], 
             RowBox[{"(*", 
              RowBox[{"Superscript", "[", 
               RowBox[{"\"\<10\>\"", ",", "i"}], "]"}], "*)"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myTicksError", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              RowBox[{"Superscript", "[", 
               RowBox[{"\"\<10\>\"", ",", "j"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              FractionBox["j", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
              "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"predPlot", "=", 
      RowBox[{
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListLogLogPlot", "[", 
          RowBox[{"smallPrediction", ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "myCol"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLogLogPlot", "[", 
          RowBox[{"bigPrediction", ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "myCol"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"legend", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ListLogLogPlot", "[", 
            RowBox[{"odePrediction", ",", 
             RowBox[{"PlotMarkers", "\[Rule]", "mySym"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"LineLegend", "[", 
                 RowBox[{
                  RowBox[{"Round", "[", 
                   RowBox[{"1440", "\[ScriptL]Vals"}], "]"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", "mySymLegend"}], ",", 
                  RowBox[{"LegendLabel", "\[Rule]", "\"\<\[ScriptL]\>\""}], 
                  ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", "ticksSize", 
                    ",", 
                    RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
                  RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
                  RowBox[{"Spacings", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"0.3", ",", "0.5"}], "}"}]}], ",", 
                  RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.08", ",", "0.55"}], "}"}]}], "]"}]}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"ListLogLogPlot", "[", 
            RowBox[{"odePrediction", ",", 
             RowBox[{"PlotMarkers", "\[Rule]", "mySym"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4.1"}], ",", "0"}], "}"}]}], "}"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", "myTicks"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"35", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", 
              RowBox[{"(*", "25", "*)"}], ",", "5"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], "/.", "myPlotStyle"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"predPlot", "=", 
      RowBox[{"Show", "[", 
       RowBox[{"predPlot", ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"label", ",", "labelSize", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
              RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
            "myPlotStyle"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<\!\(\*SuperscriptBox[\(s\), \(*\)]\)=\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"sStar", "/.", 
                 RowBox[{"params", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], " ", "]"}]}], ",",
               "labelSize", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
              RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
            "myPlotStyle"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"errorPlot", "=", 
      RowBox[{
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"smallError", ",", 
           RowBox[{"PlotMarkers", "\[Rule]", "mySymError"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{"bigError", ",", 
           RowBox[{"PlotMarkers", "\[Rule]", "mySymError"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              FractionBox["5", 
               RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", "myTicksError"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"None", ",", "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[ScriptCapitalS]\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "imageSize"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "0.3"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"35", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "0"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], "/.", "myPlotStyle"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"predPlot", ",", "errorPlot"}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695635584943802*^9, 3.6956357228344393`*^9}, {
   3.695635764832699*^9, 3.6956361993299026`*^9}, {3.695636260345348*^9, 
   3.695636344893605*^9}, {3.695636500009027*^9, 3.695636564445541*^9}, {
   3.6956367579831038`*^9, 3.6956367718388367`*^9}, {3.695636806246045*^9, 
   3.695636809389625*^9}, {3.695637065493371*^9, 3.695637122354473*^9}, {
   3.695637166379683*^9, 3.695637171110586*^9}, {3.6956372033130713`*^9, 
   3.695637204927781*^9}, {3.695637528192864*^9, 3.695637611313637*^9}, {
   3.69743809964809*^9, 3.6974382026779118`*^9}, {3.697438273529849*^9, 
   3.697438274873238*^9}, 3.697438433124753*^9, {3.697438467211342*^9, 
   3.697438468545635*^9}, {3.6974385162164297`*^9, 3.6974385486472063`*^9}, {
   3.697438605990335*^9, 3.697438626772229*^9}, {3.697438834533552*^9, 
   3.6974388669314404`*^9}, {3.697438917946267*^9, 3.697438976535549*^9}, {
   3.6974390238870697`*^9, 3.6974390473250837`*^9}, {3.69743914903461*^9, 
   3.697439174584186*^9}, {3.7087784891739283`*^9, 3.7087784895167093`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"multipleDosesPlot", "[", 
   RowBox[{
   "singleBolus_", ",", "dailyInjections_", ",", "params_", ",", "T_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[ScriptCapitalS]Vals", ",", "n\[ScriptCapitalS]", ",", "myCol", ",", 
      "max", ",", "plot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[ScriptCapitalS]Vals", "=", 
      RowBox[{"\[ScriptCapitalS]", "/.", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n\[ScriptCapitalS]", "=", 
      RowBox[{"Length", "[", "\[ScriptCapitalS]Vals", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"myCol", "=", 
      RowBox[{"col", "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"max", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n2", "[", "t", "]"}], "/.", 
              RowBox[{"dailyInjections", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nS"}], "}"}]}], "]"}], " ", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{
         RowBox[{"Ceiling", "[", 
          RowBox[{"xxx", ",", 
           SuperscriptBox["10", 
            RowBox[{"Floor", "[", 
             RowBox[{"Log10", "[", "xxx", "]"}], "]"}]]}], "]"}], "/.", 
         RowBox[{"xxx", "\[Rule]", "max"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"max", "=", "2000"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"n2", "[", "t", "]"}], "/.", 
               RowBox[{"singleBolus", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], 
             "]"}], " ", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"myCol", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"Opacity", "[", "0.8", "]"}], ",", "Thick", ",", 
                "Dashed"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "nS"}], "}"}]}], "]"}]}]}], " ", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"n2", "[", "t", "]"}], "/.", 
               RowBox[{"dailyInjections", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], 
             "]"}], " ", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "myCol"}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"LineLegend", "[", 
               RowBox[{"\[ScriptCapitalS]Vals", ",", 
                RowBox[{
                "LegendLabel", "\[Rule]", "\"\<\[ScriptCapitalS]\>\""}], ",", 
                
                RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"labelSize", "-", "2"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                   RowBox[{"GrayLevel", "[", "0.4", "]"}]}], " ", "]"}]}], 
                ",", 
                RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "0.3"}], "}"}]}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"Scaled", "[", 
               RowBox[{"{", 
                RowBox[{"0.16", ",", "0.65"}], "}"}], "]"}]}], " ", "]"}]}]}],
           " ", "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "T"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "max"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangePadding", "\[Rule]", "0.05"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(n\), \(2\)]\)\>\"", ",", "labelSize",
                 ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              "None"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Time (days)\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
              "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"ticksSize", ",", 
            RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Background", "\[Rule]", "White"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"62", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"48", ",", "10"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "0.45"}]}], "\[IndentingNewLine]", 
        "]"}], "/.", "myPlotStyle"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.695635584943802*^9, 3.6956357228344393`*^9}, {
   3.695635764832699*^9, 3.6956361993299026`*^9}, {3.695636260345348*^9, 
   3.695636344893605*^9}, {3.695636500009027*^9, 3.695636564445541*^9}, {
   3.6956367579831038`*^9, 3.6956367718388367`*^9}, {3.695636806246045*^9, 
   3.695636809389625*^9}, {3.695637065493371*^9, 3.695637122354473*^9}, {
   3.695637166379683*^9, 3.695637171110586*^9}, {3.6956372033130713`*^9, 
   3.695637204927781*^9}, {3.695637528192864*^9, 3.695637611313637*^9}, {
   3.695641694124436*^9, 3.695641895139102*^9}, {3.695641937426342*^9, 
   3.695642093044011*^9}, {3.695642131780117*^9, 3.695642134099246*^9}, {
   3.695642511078375*^9, 3.6956425168695498`*^9}, {3.6956425981074944`*^9, 
   3.695642600465116*^9}, {3.695642722822729*^9, 3.69564275703732*^9}, {
   3.6956430044527893`*^9, 3.695643033738924*^9}, {3.695649873515527*^9, 
   3.695649898506675*^9}, {3.695649980009015*^9, 3.695650048813697*^9}, {
   3.695650080293041*^9, 3.6956500950355883`*^9}, 3.697188016824265*^9, {
   3.697190426203611*^9, 3.6971905436622143`*^9}, {3.69719057499806*^9, 
   3.69719060871544*^9}, {3.697190639435191*^9, 3.697190729247223*^9}, {
   3.708778414207077*^9, 3.708778425352054*^9}, {3.7087786477437077`*^9, 
   3.708778676525826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorLogLinearPlot", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[CapitalDelta]", "=", "0"}], ","}], "*)"}], 
     RowBox[{"num", ",", "points", ",", "lines", ",", 
      RowBox[{"(*", 
       RowBox[{"bars", ","}], "*)"}], "plot"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"num", "=", 
      RowBox[{"Length", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"points", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{"x", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "col"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lines", "=", 
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                 RowBox[{"\[Sigma]", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"col", ",", 
           RowBox[{"Thickness", "[", "0.004", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"bars", "=", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "0"}], 
                    "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"col", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                    "\[CapitalDelta]"}], ",", 
                    RowBox[{
                    RowBox[{"x", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"\[Sigma]", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "}"}],
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "num"}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot", "=", 
      RowBox[{"Show", "[", 
       RowBox[{"lines", ",", 
        RowBox[{"(*", 
         RowBox[{"bars", ","}], "*)"}], "points"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "plot", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690366361098097*^9, 3.6903663756568403`*^9}, {
  3.690447167338378*^9, 3.6904471748094587`*^9}, {3.690447221464448*^9, 
  3.6904472746779003`*^9}, {3.695586111033328*^9, 3.695586111687381*^9}, {
  3.695587121470046*^9, 3.695587133028921*^9}, {3.695647904841099*^9, 
  3.6956479049760723`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initial chimerism", "Section",
 CellChangeTimes->{{3.69562883542819*^9, 3.695628853898645*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initiate", " ", "variable", " ", "parameters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalS]Vals", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "5", ",", 
         RowBox[{"1", "/", "3"}]}], "}"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"This", " ", "is", " ", "my", " ", "x"}], "-", 
      RowBox[{"axis", " ", "variable"}]}], ";", " ", 
     RowBox[{"dose", " ", "size"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalS]", "=", 
     RowBox[{"Length", "[", "\[ScriptCapitalS]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sStarVals", "=", 
     RowBox[{"{", 
      RowBox[{"10", ",", "100"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nS", "=", 
     RowBox[{"Length", "[", "sStarVals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptL]Vals", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.", ",", "3.", ",", "5."}], "}"}], "/", "1440."}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptL]", "=", 
     RowBox[{"Length", "[", "\[ScriptL]Vals", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.66943964751322*^9, 3.6694396514805317`*^9}, 
   3.669439847641354*^9, {3.669439992263359*^9, 3.669439999955433*^9}, {
   3.669440162399632*^9, 3.669440172741529*^9}, {3.674208175029993*^9, 
   3.674208220875812*^9}, {3.674208266098268*^9, 3.674208267178605*^9}, {
   3.6742108716311207`*^9, 3.6742108720867043`*^9}, {3.6742110277458878`*^9, 
   3.674211028008944*^9}, {3.674212121090599*^9, 3.674212127594264*^9}, 
   3.674217117763854*^9, {3.674217180273593*^9, 3.67421718041737*^9}, {
   3.674218410711248*^9, 3.67421841101504*^9}, {3.6742190236098137`*^9, 
   3.674219023761669*^9}, {3.674283247712076*^9, 3.674283261333963*^9}, {
   3.674455950753701*^9, 3.6744559763119383`*^9}, {3.674456014750391*^9, 
   3.6744562628533983`*^9}, {3.67445629505224*^9, 3.6744563017236967`*^9}, {
   3.674456336122589*^9, 3.674456339674346*^9}, {3.674456429071156*^9, 
   3.674456454222973*^9}, {3.674456523891376*^9, 3.67445653685096*^9}, {
   3.674456678669916*^9, 3.674456682445689*^9}, {3.674456951284562*^9, 
   3.67445704269633*^9}, {3.674457118070134*^9, 3.674457120925658*^9}, {
   3.674539185364085*^9, 3.674539190835717*^9}, {3.6745425716339703`*^9, 
   3.6745426156630993`*^9}, {3.674553291911993*^9, 3.674553300474324*^9}, {
   3.674558740497957*^9, 3.674558741553314*^9}, {3.674558798784425*^9, 
   3.6745588029990797`*^9}, {3.67455938630066*^9, 3.674559404890956*^9}, {
   3.674559480368915*^9, 3.6745595606934767`*^9}, 3.674560589421112*^9, {
   3.676806399474284*^9, 3.676806402386016*^9}, {3.676870793384409*^9, 
   3.676870794358759*^9}, {3.676876700187416*^9, 3.676876709458165*^9}, {
   3.676876893844109*^9, 3.676876893999548*^9}, {3.676876947794217*^9, 
   3.676876994216501*^9}, {3.6768774986800547`*^9, 3.676877508966935*^9}, {
   3.6768778378045893`*^9, 3.676877860683572*^9}, {3.676878604076097*^9, 
   3.6768786045391417`*^9}, {3.676878729543819*^9, 3.676878729735158*^9}, {
   3.676878831732307*^9, 3.676878834243351*^9}, {3.676879026277813*^9, 
   3.676879037012596*^9}, {3.67688653881102*^9, 3.6768865786524467`*^9}, {
   3.6768893906190367`*^9, 3.6768893909379683`*^9}, {3.695634375904544*^9, 
   3.695634496699642*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"paramsFunc", "[", 
    RowBox[{
    "\[Section]sStar_", ",", "\[Section]\[ScriptL]_", ",", 
     "\[Section]\[ScriptCapitalS]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
     RowBox[{"sStar", "\[Rule]", "\[Section]sStar"}], ",", 
     RowBox[{"nStar", "\[Rule]", "9900"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"1.", "/", "39"}]}], ",", 
     RowBox[{"\[ScriptCapitalS]", "\[Rule]", "\[Section]\[ScriptCapitalS]"}], 
     ",", 
     RowBox[{"\[ScriptL]", "\[Rule]", "\[Section]\[ScriptL]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paramsTab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"paramsFunc", "[", 
          RowBox[{
           RowBox[{"sStarVals", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"\[ScriptL]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"\[ScriptCapitalS]Vals", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.695634510568836*^9, 3.695634541154533*^9}, {
  3.695634577577249*^9, 3.695634614103479*^9}, {3.695634659181904*^9, 
  3.695634749420123*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Get", " ", "chimerism", " ", "predictions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"endSmall", "=", 
     RowBox[{"Ceiling", "[", 
      FractionBox[
       RowBox[{"n\[ScriptCapitalS]", "+", "4"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startBig", "=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       FractionBox[
        RowBox[{"n\[ScriptCapitalS]", "-", "4"}], "2"], "]"}], "+", "2"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"odePrediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[ScriptCapitalS]", "/.", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ",", 
             RowBox[{"predictionODEs", "[", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", "]"}]}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"smallPrediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[ScriptCapitalS]", "/.", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ",", 
             RowBox[{"predictionSmall", "[", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", "]"}]}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "endSmall"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bigPrediction", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[ScriptCapitalS]", "/.", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ",", 
             RowBox[{"predictionBig", "[", 
              RowBox[{"paramsTab", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", "]"}]}],
             "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "startBig", ",", "n\[ScriptCapitalS]"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.695634864045732*^9, 3.695634955979884*^9}, {
  3.6956350784885283`*^9, 3.695635102358897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "errors"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"smallError", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[ScriptCapitalS]", "/.", 
             RowBox[{"paramsTab", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"smallPrediction", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "2"}], "]"}], "]"}], 
              "-", 
              RowBox[{"odePrediction", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "2"}], "]"}], "]"}]}], 
             RowBox[{"odePrediction", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k", ",", "2"}], "]"}], "]"}]]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "endSmall"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"bigError", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[ScriptCapitalS]", "/.", 
             RowBox[{"paramsTab", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"bigPrediction", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", 
                 RowBox[{"k", "-", "startBig", "+", "1"}], ",", "2"}], "]"}], 
               "]"}], "-", 
              RowBox[{"odePrediction", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "2"}], "]"}], "]"}]}], 
             RowBox[{"odePrediction", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k", ",", "2"}], "]"}], "]"}]]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "startBig", ",", "n\[ScriptCapitalS]"}], "}"}]}],
          "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n\[ScriptL]"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nS"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.695635105813393*^9, 3.695635274378457*^9}, {
  3.695635318087946*^9, 3.695635320912285*^9}, {3.695636651314416*^9, 
  3.695636679385825*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot10", "=", 
   RowBox[{"chimerismErrorPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"odePrediction", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"smallPrediction", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bigPrediction", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"smallError", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bigError", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"paramsTab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<(a)\>\"", ",", "False"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot100", "=", 
   RowBox[{"chimerismErrorPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"odePrediction", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"smallPrediction", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"bigPrediction", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"smallError", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"bigError", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"paramsTab", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<(b)\>\"", ",", "True"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697438702096142*^9, 3.697438770335123*^9}, {
  3.69743887761078*^9, 3.6974388900575953`*^9}, {3.697439004794012*^9, 
  3.697439012868744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Row", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<  Error         Chimerism\>\"", ",", "labelSize", ",", 
                RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}], "/.", 
              "myPlotStyle"}], ",", 
             RowBox[{"90", "Degree"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"24", ",", "250"}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "plot10", ",", "\[IndentingNewLine]", 
      "plot100"}], "\[IndentingNewLine]", "}"}], ",", "\"\< \>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6956353898040133`*^9, 3.695635391108832*^9}, {
  3.695637216926571*^9, 3.6956374586796103`*^9}, {3.697438350174739*^9, 
  3.6974383917637167`*^9}, {3.697438690521309*^9, 3.6974386954724207`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiple doses", "Section",
 CellChangeTimes->{{3.69562883542819*^9, 3.695628863370356*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Parameters", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalS]Vals", "=", 
     RowBox[{"{", 
      RowBox[{"98", ",", "980", ",", "2100"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalS]", "=", 
     RowBox[{"Length", "[", "\[ScriptCapitalS]Vals", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", "=", "7"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"paramsFunc", "[", "\[Section]\[ScriptCapitalS]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ScriptCapitalN]", "\[Rule]", "10000"}], ",", 
       RowBox[{"sStar", "\[Rule]", "100"}], ",", 
       RowBox[{"nStar", "\[Rule]", "9900"}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", 
        RowBox[{"1.", "/", "39"}]}], ",", 
       RowBox[{
       "\[ScriptCapitalS]", "\[Rule]", "\[Section]\[ScriptCapitalS]"}], ",", 
       RowBox[{"\[ScriptL]", "\[Rule]", 
        FractionBox["3.", "1440."]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramsTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"paramsFunc", "[", 
        RowBox[{"\[ScriptCapitalS]Vals", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.680345358963711*^9, 3.680345382769651*^9}, {
  3.695641388820779*^9, 3.695641527344095*^9}, {3.6971842067982893`*^9, 
  3.697184208989574*^9}, {3.69718783626124*^9, 3.69718783786124*^9}, {
  3.6971878879728203`*^9, 3.697187900068165*^9}, {3.697187955986149*^9, 
  3.697187992255554*^9}, {3.697188089973454*^9, 3.697188104283491*^9}, {
  3.6971903459499702`*^9, 3.69719036701161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Integrate", " ", "ODEs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"singleBolus", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"solveODEs", "[", 
        RowBox[{
         RowBox[{"paramsTab", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "T"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dailyInjections", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"solveODEsDaily", "[", 
        RowBox[{
         RowBox[{"paramsTab", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "T"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6732499658108273`*^9, 3.6732499683592863`*^9}, {
   3.673250084804002*^9, 3.673250084907091*^9}, {3.673341789613435*^9, 
   3.673341799492607*^9}, {3.673341831788179*^9, 3.673341837452153*^9}, {
   3.673341870258779*^9, 3.673341878249826*^9}, {3.673342722341752*^9, 
   3.6733427229409323`*^9}, {3.6733427827796173`*^9, 3.673342793338644*^9}, {
   3.673345107507531*^9, 3.673345108211273*^9}, {3.673346722548781*^9, 
   3.6733467421235867`*^9}, {3.673346875239542*^9, 3.673346888006205*^9}, {
   3.67334977665301*^9, 3.6733497789481487`*^9}, {3.674808420527636*^9, 
   3.674808565498363*^9}, 3.674808618767869*^9, {3.67480869135061*^9, 
   3.674808700660866*^9}, {3.674816951423004*^9, 3.674816982933651*^9}, {
   3.674817997523066*^9, 3.674817997923045*^9}, {3.674819138036454*^9, 
   3.674819138692041*^9}, {3.674821220244605*^9, 3.674821220420341*^9}, {
   3.674882788203287*^9, 3.674882788651187*^9}, 3.680342411503083*^9, {
   3.6803426687895317`*^9, 3.68034276385843*^9}, {3.6803432335544567`*^9, 
   3.6803432338345137`*^9}, 3.680343840454997*^9, 3.680343951987183*^9, {
   3.680345059069639*^9, 3.680345076748152*^9}, {3.680345143889968*^9, 
   3.680345233750801*^9}, {3.68034531463721*^9, 3.680345336275508*^9}, {
   3.680345373562297*^9, 3.6803453752506523`*^9}, {3.680345414905713*^9, 
   3.680345483022585*^9}, {3.6956414269230213`*^9, 3.695641427250885*^9}, {
   3.6956415536873198`*^9, 3.695641642775325*^9}, {3.695642285900653*^9, 
   3.6956422888601933`*^9}, {3.69564235950601*^9, 3.695642364457718*^9}, {
   3.697187910035021*^9, 3.697187919483053*^9}, {3.697190356221714*^9, 
   3.6971903817311983`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"multipleDosesPlot", "[", 
   RowBox[{
   "singleBolus", ",", "dailyInjections", ",", "paramsTab", ",", "T"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6803444318427258`*^9, 3.680344497887985*^9}, {
  3.6803452653340282`*^9, 3.680345300972825*^9}, {3.680345490991351*^9, 
  3.680345492942319*^9}, {3.6803455383257113`*^9, 3.680345545172678*^9}, {
  3.680345800812788*^9, 3.680346009612834*^9}, {3.6803460488278847`*^9, 
  3.680346097354312*^9}, {3.680346169921135*^9, 3.680346171073792*^9}, {
  3.6803463524217987`*^9, 3.680346352585268*^9}, {3.680346388272605*^9, 
  3.680346482957809*^9}, {3.680346557339517*^9, 3.680346684526713*^9}, {
  3.681714410141137*^9, 3.681714467802415*^9}, {3.695642102423296*^9, 
  3.695642124410626*^9}, {3.695642535316428*^9, 3.6956425786506367`*^9}, {
  3.695650037421386*^9, 3.69565003778876*^9}, {3.697184216397244*^9, 
  3.697184217453174*^9}, {3.697190385052062*^9, 3.697190397962655*^9}, {
  3.697190500752034*^9, 3.697190500902856*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Takeover probability and time", "Section",
 CellChangeTimes->{{3.69562883542819*^9, 3.69562883629123*^9}, {
  3.695628876674883*^9, 3.695628888945437*^9}}],

Cell[CellGroupData[{

Cell["Analyse Data", "Subsection",
 CellChangeTimes->{{3.6956431124797707`*^9, 3.695643116614811*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Load", " ", "parameters", " ", "and", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"dirs", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<./zz-data/non-preconditioned/fixation-epsilon_01/\>\"", ",", 
       "\"\<./zz-data/non-preconditioned/fixation-epsilon_05/\>\""}], "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[Epsilon]", "=", 
     RowBox[{"Length", "[", "dirs", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getPars", "[", 
        RowBox[{"dirs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n\[ScriptCapitalS]", "=", 
     RowBox[{"Length", "[", 
      RowBox[{"params", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"extractFixationStats", "[", 
        RowBox[{"dirs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataProb", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataTime", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataTimeSigma", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.695644043191058*^9, 3.6956443046310453`*^9}, {
  3.695644362844009*^9, 3.6956444054263067`*^9}, {3.695644796997649*^9, 
  3.6956448107476397`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Analytic predictions", "Subsection",
 CellChangeTimes->{{3.695644597475623*^9, 3.6956446014187098`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalS]Vals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox["2", "j"], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "13", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n\[ScriptCapitalS]", "=", 
   RowBox[{"Length", "[", "\[ScriptCapitalS]Vals", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moreParams", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"params", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"{", "5", "}"}]}], "]"}], ",", 
          RowBox[{"\[ScriptCapitalS]", "\[Rule]", 
           RowBox[{"\[ScriptCapitalS]Vals", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], " ", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"getZ0", "[", 
        RowBox[{"moreParams", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"analyticProb", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[ScriptCapitalS]", "/.", 
          RowBox[{"moreParams", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
         RowBox[{"conditionalProb", "[", 
          RowBox[{
           RowBox[{"z0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1", ",", 
           RowBox[{"moreParams", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analyticTime", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptCapitalS]", "/.", 
           RowBox[{"moreParams", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
          RowBox[{"conditionalTime", "[", 
           RowBox[{
            RowBox[{"z0", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1", ",", 
            RowBox[{"moreParams", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "variance", " ", "and", " ", "export", " ", "for", " ", 
    "speed"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Comment", " ", "out", " ", "to", " ", "avoid", " ", "costly", " ", 
    "recalculations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"analyticVariance", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[ScriptCapitalS]", "/.", 
            RowBox[{"moreParams", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
           RowBox[{"conditionalTime", "[", 
            RowBox[{
             RowBox[{"z0", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1", ",", 
             RowBox[{"moreParams", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}], ",", 
           RowBox[{"variance", "[", 
            RowBox[{
             RowBox[{"z0", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "1", ",", 
             RowBox[{"moreParams", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n\[ScriptCapitalS]"}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}]}], ";", 
    "\n", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"\"\<zz-data/non-preconditioned/variance\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.dat\>\""}], ",", 
         RowBox[{"analyticVariance", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], " ", "]"}], "&"}], ",", 
      RowBox[{"Range", "[", "n\[Epsilon]", "]"}]}], " ", "]"}], ";"}], "*)"}],
   "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticVariance", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<zz-data/non-preconditioned/variance\>\"", "<>", 
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.dat\>\""}], "]"}], 
      "&"}], ",", 
     RowBox[{"Range", "[", "n\[Epsilon]", "]"}]}], " ", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.695645372343162*^9, 3.695645374488001*^9}, {
  3.69564540584706*^9, 3.695645654006577*^9}, {3.711891321714459*^9, 
  3.711891356849168*^9}, {3.711891402967866*^9, 3.711891430418747*^9}, {
  3.711943514430292*^9, 3.711943520029291*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot fixation probability", "Subsection",
 CellChangeTimes->{{3.6956431124797707`*^9, 3.695643132014201*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probPlot", "=", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"dataProb", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
         
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"myCol", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", "3"}], "]"}], "]"}]}]}], " ", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{"analyticProb", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"myCol", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Line"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"myCol", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "Dashed"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "+", "\[Epsilon]"}], ")"}], "/.", 
                 RowBox[{"params", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"LegendMarkerSize", "\[Rule]", "20"}], ",", 
              RowBox[{
              "LegendLabel", "\[Rule]", 
               "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(2\)]\)/\[Beta]\>\""}], 
              ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"18", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
                 RowBox[{"GrayLevel", "[", "0.4", "]"}]}], "]"}]}], ",", 
              RowBox[{"LegendFunction", "\[Rule]", "\"\<Frame\>\""}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"{", 
              RowBox[{"0.85", ",", "0.32"}], "}"}], "]"}]}], "]"}]}]}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox["0", 
             RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
            FractionBox["4", 
             RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.04"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Fixation prob.\>\"", ",", "labelSize", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"None", 
            RowBox[{"(*", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<\[ScriptCapitalS]\>\"", ",", "labelSize", ",", 
               RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], "*)"}], 
            ",", "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"ticksSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                RowBox[{"Superscript", "[", 
                 RowBox[{"\"\<10\>\"", ",", "i"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "}"}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"55", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"55", "-", "30"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "\[IndentingNewLine]", 
      "]"}], "/.", "myPlotStyle"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"topPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"probPlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(a)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6956435284575872`*^9, 3.69564355035301*^9}, {
   3.695643620255426*^9, 3.695643622534618*^9}, {3.695643655709548*^9, 
   3.695643658716462*^9}, {3.695644532114214*^9, 3.69564457688454*^9}, {
   3.695645035854596*^9, 3.695645092698497*^9}, {3.695645845584257*^9, 
   3.695645847432308*^9}, {3.6956477728937073`*^9, 3.695647798563848*^9}, {
   3.695647946903921*^9, 3.695647956302288*^9}, {3.695647997340979*^9, 
   3.695648010796574*^9}, {3.697439238934229*^9, 3.697439250747945*^9}, {
   3.6974393498344793`*^9, 3.697439370712195*^9}, {3.7087790245471077`*^9, 
   3.708779036601678*^9}, 3.708931541689528*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot fixation time", "Subsection",
 CellChangeTimes->{{3.6956431124797707`*^9, 3.695643142933926*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCol", "=", 
   RowBox[{"col", "/.", "myPlotStyle"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timePlot", "=", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"errorLogLinearPlot", "[", 
          RowBox[{
           RowBox[{"dataTime", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"dataTimeSigma", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"myCol", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], " ", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListLogLinearPlot", "[", 
        RowBox[{"analyticTime", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"myCol", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "Line"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"myCol", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "Dashed"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListLogLinearPlot", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"analyticVariance", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"analyticVariance", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"analyticVariance", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], " ", 
                   "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"analyticVariance", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"analyticVariance", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"analyticVariance", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], "+", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"analyticVariance", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], " ", 
                   "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"analyticVariance", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", "]"}]}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"Filling", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
           RowBox[{"FillingStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"myCol", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], " ", "]"}]}]}], " ", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n\[Epsilon]"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox["0", 
             RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
            FractionBox["4", 
             RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", "\[Rule]", "0.2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Mean time (years)\>\"", ",", "labelSize", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
            "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\[ScriptCapitalS]\>\"", ",", "labelSize", ",", 
              RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}], ",", 
            "None"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"ticksSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                RowBox[{"Superscript", "[", 
                 RowBox[{"\"\<10\>\"", ",", "i"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                FractionBox["i", 
                 RowBox[{"Log10", "[", "\[ExponentialE]", "]"}]], ",", 
                "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}]}], "}"}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"55", ",", "5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"55", ",", "10"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "350"}]}], "\[IndentingNewLine]", 
      "]"}], "/.", "myPlotStyle"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"bottomPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"timePlot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<(b)\>\"", ",", "labelSize", ",", 
          RowBox[{"FontFamily", "\[Rule]", "font"}], ",", 
          RowBox[{"GrayLevel", "[", "0.4", "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "/.", 
        "myPlotStyle"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.05", ",", "0.93"}], "}"}], "]"}]}], "]"}], "]"}]}], " ", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6956435830956707`*^9, 3.6956435927430897`*^9}, {
  3.695643628647173*^9, 3.695643630757846*^9}, {3.695643664708112*^9, 
  3.695643666339884*^9}, {3.695645685703353*^9, 3.695645687341786*^9}, {
  3.6956457619720793`*^9, 3.695645790753974*^9}, {3.69564583523466*^9, 
  3.69564586322375*^9}, {3.6956479584383707`*^9, 3.695647958797926*^9}, {
  3.69743926331662*^9, 3.6974392795799017`*^9}, {3.697439326642825*^9, 
  3.697439338361598*^9}, {3.7087790455837717`*^9, 3.708779076911734*^9}, {
  3.71189145697313*^9, 3.711891482462447*^9}, {3.711891531603737*^9, 
  3.711891570322844*^9}, {3.711891684621498*^9, 3.711891826586018*^9}, {
  3.711891923270297*^9, 3.711891929420957*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Combine plots", "Subsection",
 CellChangeTimes->{{3.6956431124797707`*^9, 3.695643146509563*^9}}],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"topPlot", ",", "bottomPlot"}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695643241061028*^9, 3.6956432541379137`*^9}, 
   3.69564771352711*^9, {3.6956480225473967`*^9, 3.695648024548044*^9}, {
   3.6974392999150333`*^9, 3.697439304033905*^9}, {3.7087790623286247`*^9, 
   3.708779083126586*^9}, {3.711943497390964*^9, 3.711943498453774*^9}}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1737, 1330},
WindowMargins->{{67, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 2, 92, "Title"],
Cell[741, 26, 141, 1, 51, "Subtitle"],
Cell[885, 29, 134, 1, 29, "Subsubtitle"],
Cell[1022, 32, 271, 9, 10, "Text"],
Cell[1296, 43, 549, 15, 46, "Input"],
Cell[1848, 60, 271, 9, 10, "Text"],
Cell[2122, 71, 15704, 372, 1049, "Input"],
Cell[17829, 445, 271, 9, 10, "Text"],
Cell[CellGroupData[{
Cell[18125, 458, 442, 7, 65, "Chapter"],
Cell[CellGroupData[{
Cell[18592, 469, 155, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[18772, 475, 111, 1, 35, "Subsubsection"],
Cell[18886, 478, 1955, 54, 69, "Input"],
Cell[20844, 534, 127, 2, 28, "Input"],
Cell[20974, 538, 104, 2, 28, "Input"],
Cell[21081, 542, 128, 2, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[21246, 549, 112, 1, 29, "Subsubsection"],
Cell[21361, 552, 1954, 54, 69, "Input"],
Cell[23318, 608, 131, 2, 28, "Input"],
Cell[23452, 612, 108, 2, 28, "Input"],
Cell[23563, 616, 131, 2, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[23731, 623, 95, 1, 29, "Subsubsection"],
Cell[23829, 626, 1928, 52, 69, "Input"],
Cell[25760, 680, 126, 2, 28, "Input"],
Cell[25889, 684, 103, 2, 28, "Input"],
Cell[25995, 688, 130, 2, 28, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[26174, 696, 304, 8, 37, "Subsection"],
Cell[CellGroupData[{
Cell[26503, 708, 183, 2, 35, "Subsubsection"],
Cell[26689, 712, 2727, 73, 69, "Input"],
Cell[29419, 787, 313, 9, 35, "Input"],
Cell[29735, 798, 210, 4, 28, "Input"],
Cell[29948, 804, 163, 3, 28, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[30160, 813, 622, 17, 43, "Subsection"],
Cell[CellGroupData[{
Cell[30807, 834, 127, 1, 35, "Subsubsection"],
Cell[30937, 837, 1884, 51, 59, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[32858, 893, 111, 1, 29, "Subsubsection"],
Cell[32972, 896, 3172, 83, 69, "Input"],
Cell[36147, 981, 313, 9, 35, "Input"],
Cell[36463, 992, 210, 4, 28, "Input"],
Cell[36676, 998, 163, 3, 28, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36888, 1007, 987, 29, 44, "Subsection"],
Cell[CellGroupData[{
Cell[37900, 1040, 127, 1, 35, "Subsubsection"],
Cell[38030, 1043, 1674, 45, 59, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[39741, 1093, 111, 1, 29, "Subsubsection"],
Cell[39855, 1096, 3070, 79, 69, "Input"],
Cell[42928, 1177, 313, 9, 35, "Input"],
Cell[43244, 1188, 210, 4, 28, "Input"],
Cell[43457, 1194, 163, 3, 28, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[43681, 1204, 254, 4, 54, "Chapter"],
Cell[CellGroupData[{
Cell[43960, 1212, 202, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[44187, 1219, 161, 2, 44, "Subsection"],
Cell[44351, 1223, 713, 24, 43, "Text"],
Cell[45067, 1249, 1411, 43, 114, "Input"],
Cell[46481, 1294, 235, 5, 30, "Text"],
Cell[46719, 1301, 1260, 36, 87, "Input"],
Cell[47982, 1339, 220, 6, 31, "Text"],
Cell[48205, 1347, 603, 15, 28, "Input"],
Cell[48811, 1364, 591, 15, 28, "Input"],
Cell[49405, 1381, 607, 15, 28, "Input"],
Cell[50015, 1398, 489, 12, 31, "Text"],
Cell[50507, 1412, 815, 23, 111, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[51359, 1440, 104, 1, 36, "Subsection"],
Cell[51466, 1443, 320, 6, 49, "Text"],
Cell[51789, 1451, 2586, 76, 114, "Input"],
Cell[54378, 1529, 393, 8, 46, "Input"],
Cell[54774, 1539, 326, 6, 30, "Text"],
Cell[55103, 1547, 250, 6, 28, "Input"],
Cell[55356, 1555, 135, 1, 30, "Text"],
Cell[55494, 1558, 980, 26, 54, "Input"],
Cell[56477, 1586, 312, 8, 46, "Input"],
Cell[56792, 1596, 412, 11, 32, "Text"],
Cell[57207, 1609, 1405, 44, 102, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[58649, 1658, 120, 1, 36, "Subsection"],
Cell[58772, 1661, 310, 6, 30, "Text"],
Cell[59085, 1669, 424, 10, 28, "Input"],
Cell[59512, 1681, 900, 23, 46, "Input"],
Cell[60415, 1706, 1393, 33, 67, "Input"],
Cell[61811, 1741, 2103, 52, 106, "Input"],
Cell[63917, 1795, 2614, 64, 133, "Input"],
Cell[66534, 1861, 1259, 37, 73, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[67830, 1903, 206, 3, 36, "Subsection"],
Cell[68039, 1908, 223, 4, 30, "Text"],
Cell[68265, 1914, 493, 12, 28, "Input"],
Cell[68761, 1928, 1437, 32, 46, "Input"],
Cell[70201, 1962, 1910, 41, 67, "Input"],
Cell[72114, 2005, 2379, 57, 106, "Input"],
Cell[74496, 2064, 1270, 34, 68, "Input"],
Cell[75769, 2100, 2797, 71, 108, "Input"],
Cell[CellGroupData[{
Cell[78591, 2175, 136, 1, 35, "Subsubsection"],
Cell[78730, 2178, 123, 2, 28, "Input"],
Cell[78856, 2182, 2301, 65, 90, "Input"],
Cell[81160, 2249, 255, 5, 28, "Input"],
Cell[81418, 2256, 339, 8, 28, "Input"],
Cell[81760, 2266, 1333, 37, 61, "Input"],
Cell[83096, 2305, 223, 4, 28, "Input"],
Cell[83322, 2311, 2219, 58, 103, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[85602, 2376, 152, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[85779, 2382, 230, 3, 44, "Subsection"],
Cell[86012, 2387, 647, 22, 43, "Text"],
Cell[86662, 2411, 1464, 43, 114, "Input"],
Cell[88129, 2456, 235, 5, 30, "Text"],
Cell[88367, 2463, 1413, 38, 87, "Input"],
Cell[89783, 2503, 313, 8, 31, "Text"],
Cell[90099, 2513, 649, 15, 28, "Input"],
Cell[90751, 2530, 645, 15, 28, "Input"],
Cell[91399, 2547, 663, 16, 28, "Input"],
Cell[92065, 2565, 199, 4, 30, "Text"],
Cell[92267, 2571, 1154, 34, 51, "Input"],
Cell[93424, 2607, 624, 17, 51, "Input"],
Cell[94051, 2626, 337, 7, 49, "Text"],
Cell[94391, 2635, 7843, 225, 502, "Input"],
Cell[102237, 2862, 399, 7, 46, "Input"],
Cell[102639, 2871, 505, 14, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[103181, 2890, 100, 1, 36, "Subsection"],
Cell[103284, 2893, 330, 6, 30, "Text"],
Cell[103617, 2901, 995, 29, 28, "Input"],
Cell[104615, 2932, 298, 7, 28, "Input"],
Cell[104916, 2941, 443, 12, 32, "Text"],
Cell[105362, 2955, 1619, 42, 54, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[107018, 3002, 129, 2, 36, "Subsection"],
Cell[107150, 3006, 530, 18, 31, "Text"],
Cell[107683, 3026, 1310, 35, 70, "Input"],
Cell[CellGroupData[{
Cell[109018, 3065, 114, 1, 35, "Subsubsection"],
Cell[109135, 3068, 6947, 174, 454, "Input"],
Cell[116085, 3244, 27282, 618, 881, "Input"],
Cell[143370, 3864, 3788, 89, 238, "Input"],
Cell[147161, 3955, 686, 14, 46, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[147896, 3975, 104, 1, 36, "Subsection"],
Cell[148003, 3978, 260, 5, 30, "Text"],
Cell[148266, 3985, 1065, 32, 54, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[149368, 4022, 120, 1, 36, "Subsection"],
Cell[149491, 4025, 636, 15, 50, "Text"],
Cell[150130, 4042, 523, 11, 28, "Input"],
Cell[150656, 4055, 1535, 35, 46, "Input"],
Cell[152194, 4092, 1937, 43, 67, "Input"],
Cell[154134, 4137, 3688, 97, 152, "Input"],
Cell[157825, 4236, 2920, 75, 112, "Input"],
Cell[160748, 4313, 5558, 144, 152, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[166343, 4462, 206, 3, 36, "Subsection"],
Cell[166552, 4467, 224, 4, 30, "Text"],
Cell[166779, 4473, 642, 14, 28, "Input"],
Cell[167424, 4489, 1541, 36, 46, "Input"],
Cell[168968, 4527, 1911, 44, 67, "Input"],
Cell[170882, 4573, 4814, 126, 135, "Input"],
Cell[175699, 4701, 3058, 77, 112, "Input"],
Cell[178760, 4780, 7579, 188, 186, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[186400, 4975, 284, 3, 54, "Chapter"],
Cell[CellGroupData[{
Cell[186709, 4982, 202, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[186936, 4989, 161, 2, 44, "Subsection"],
Cell[187100, 4993, 647, 22, 43, "Text"],
Cell[187750, 5017, 1963, 58, 114, "Input"],
Cell[189716, 5077, 154, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[189895, 5084, 537, 15, 28, "Input"],
Cell[190435, 5101, 584, 11, 24, "Message"]
}, Open  ]],
Cell[191034, 5115, 1489, 38, 71, "Input"],
Cell[192526, 5155, 235, 5, 30, "Text"],
Cell[192764, 5162, 1783, 50, 87, "Input"],
Cell[194550, 5214, 220, 6, 31, "Text"],
Cell[194773, 5222, 603, 15, 28, "Input"],
Cell[195379, 5239, 591, 15, 28, "Input"],
Cell[195973, 5256, 607, 15, 28, "Input"],
Cell[196583, 5273, 456, 11, 31, "Text"],
Cell[197042, 5286, 815, 23, 111, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[197894, 5314, 104, 1, 36, "Subsection"],
Cell[198001, 5317, 320, 6, 49, "Text"],
Cell[198324, 5325, 3302, 95, 114, "Input"],
Cell[201629, 5422, 393, 8, 46, "Input"],
Cell[202025, 5432, 277, 5, 30, "Text"],
Cell[202305, 5439, 250, 6, 28, "Input"],
Cell[202558, 5447, 135, 1, 30, "Text"],
Cell[202696, 5450, 1962, 54, 54, "Input"],
Cell[204661, 5506, 244, 7, 46, "Input"],
Cell[204908, 5515, 611, 15, 52, "Text"],
Cell[205522, 5532, 1236, 35, 59, "Input"],
Cell[206761, 5569, 998, 29, 49, "Input"],
Cell[207762, 5600, 1761, 49, 54, "Input"],
Cell[209526, 5651, 1820, 53, 70, "Input"],
Cell[CellGroupData[{
Cell[211371, 5708, 104, 1, 35, "Subsubsection"],
Cell[211478, 5711, 3114, 82, 73, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[214641, 5799, 206, 3, 36, "Subsection"],
Cell[214850, 5804, 223, 4, 30, "Text"],
Cell[215076, 5810, 1604, 37, 46, "Input"],
Cell[216683, 5849, 2080, 48, 69, "Input"],
Cell[218766, 5899, 2889, 71, 121, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[221704, 5976, 152, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[221881, 5982, 230, 3, 44, "Subsection"],
Cell[222114, 5987, 647, 22, 43, "Text"],
Cell[222764, 6011, 1970, 58, 114, "Input"],
Cell[224737, 6071, 881, 27, 49, "Input"],
Cell[225621, 6100, 235, 5, 30, "Text"],
Cell[225859, 6107, 1881, 51, 87, "Input"],
Cell[227743, 6160, 290, 8, 31, "Text"],
Cell[228036, 6170, 649, 15, 28, "Input"],
Cell[228688, 6187, 645, 15, 28, "Input"],
Cell[229336, 6204, 663, 16, 28, "Input"],
Cell[230002, 6222, 199, 4, 30, "Text"],
Cell[230204, 6228, 1154, 34, 51, "Input"],
Cell[231361, 6264, 672, 17, 51, "Input"],
Cell[232036, 6283, 337, 7, 49, "Text"],
Cell[232376, 6292, 9436, 262, 378, "Input"],
Cell[241815, 6556, 492, 10, 46, "Input"],
Cell[242310, 6568, 590, 16, 28, "Input"],
Cell[242903, 6586, 211, 5, 46, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[243151, 6596, 100, 1, 36, "Subsection"],
Cell[243254, 6599, 330, 6, 30, "Text"],
Cell[243587, 6607, 1503, 41, 28, "Input"],
Cell[245093, 6650, 298, 7, 28, "Input"],
Cell[245394, 6659, 410, 11, 32, "Text"],
Cell[245807, 6672, 3583, 90, 69, "Input"],
Cell[249393, 6764, 2990, 78, 51, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[252420, 6847, 198, 2, 36, "Subsection"],
Cell[252621, 6851, 464, 16, 31, "Text"],
Cell[253088, 6869, 1778, 48, 70, "Input"],
Cell[CellGroupData[{
Cell[254891, 6921, 114, 1, 35, "Subsubsection"],
Cell[255008, 6924, 6947, 174, 454, "Input"],
Cell[261958, 7100, 26811, 614, 881, "Input"],
Cell[288772, 7716, 3788, 89, 238, "Input"],
Cell[292563, 7807, 736, 15, 46, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[293348, 7828, 104, 1, 36, "Subsection"],
Cell[293455, 7831, 260, 5, 30, "Text"],
Cell[293718, 7838, 1959, 55, 54, "Input"],
Cell[295680, 7895, 398, 10, 31, "Text"],
Cell[296081, 7907, 3467, 93, 96, "Input"],
Cell[299551, 8002, 464, 11, 68, "Input"],
Cell[300018, 8015, 298, 7, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[300353, 8027, 120, 1, 36, "Subsection"],
Cell[300476, 8030, 603, 14, 50, "Text"],
Cell[301082, 8046, 1648, 39, 46, "Input"],
Cell[302733, 8087, 2010, 48, 69, "Input"],
Cell[304746, 8137, 3289, 85, 123, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[308072, 8227, 206, 3, 36, "Subsection"],
Cell[308281, 8232, 224, 4, 30, "Text"],
Cell[308508, 8238, 1785, 42, 46, "Input"],
Cell[310296, 8282, 2223, 52, 69, "Input"],
Cell[312522, 8336, 3677, 91, 123, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[316260, 8434, 212, 3, 54, "Chapter"],
Cell[CellGroupData[{
Cell[316497, 8441, 96, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[316618, 8446, 103, 1, 44, "Subsection"],
Cell[316724, 8449, 4867, 124, 301, "Input"],
Cell[321594, 8575, 3370, 84, 453, "Input"],
Cell[324967, 8661, 3246, 82, 267, "Input"],
Cell[328216, 8745, 2481, 62, 284, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[330734, 8812, 105, 1, 36, "Subsection"],
Cell[330842, 8815, 1465, 33, 146, "Input"],
Cell[332310, 8850, 4161, 103, 468, "Input"],
Cell[336474, 8955, 20180, 466, 940, "Input"],
Cell[356657, 9423, 13583, 308, 901, "Input"],
Cell[370243, 9733, 4238, 95, 438, "Input"],
Cell[374484, 9830, 2805, 65, 181, "Input"],
Cell[377292, 9897, 2677, 66, 199, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[380006, 9968, 95, 1, 36, "Subsection"],
Cell[380104, 9971, 6581, 164, 301, "Input"],
Cell[386688, 10137, 6727, 166, 318, "Input"],
Cell[393418, 10305, 3408, 82, 165, "Input"],
Cell[396829, 10389, 2972, 81, 165, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[399850, 10476, 91, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[399966, 10481, 141, 1, 44, "Subsection"],
Cell[400110, 10484, 5411, 148, 495, "Input"],
Cell[405524, 10634, 2240, 51, 199, "Input"],
Cell[407767, 10687, 792, 19, 46, "Input"],
Cell[408562, 10708, 12571, 276, 460, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[421170, 10989, 170, 3, 36, "Subsection"],
Cell[421343, 10994, 2891, 76, 257, "Input"],
Cell[424237, 11072, 2424, 56, 199, "Input"],
Cell[426664, 11130, 930, 21, 46, "Input"],
Cell[427597, 11153, 13784, 337, 522, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[441418, 11495, 282, 3, 36, "Subsection"],
Cell[441703, 11500, 1029, 25, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[442769, 11530, 108, 1, 36, "Subsection"],
Cell[442880, 11533, 1804, 40, 155, "Input"],
Cell[444687, 11575, 3622, 93, 250, "Input"],
Cell[CellGroupData[{
Cell[448334, 11672, 122, 2, 28, "Input"],
Cell[448459, 11676, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448584, 11682, 7405, 176, 363, "Input"],
Cell[455992, 11860, 329530, 5728, 280, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[785595, 17596, 160, 2, 54, "Chapter"],
Cell[CellGroupData[{
Cell[785780, 17602, 96, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[785901, 17607, 110, 1, 44, "Subsection"],
Cell[786014, 17610, 2575, 56, 69, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[788626, 17671, 105, 1, 36, "Subsection"],
Cell[788734, 17674, 1465, 33, 146, "Input"],
Cell[790202, 17709, 4161, 103, 468, "Input"],
Cell[794366, 17814, 20180, 466, 940, "Input"],
Cell[814549, 18282, 13605, 308, 901, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[828203, 18596, 89, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[828317, 18601, 187, 2, 44, "Subsection"],
Cell[828507, 18605, 2598, 66, 284, "Input"],
Cell[831108, 18673, 4653, 119, 182, "Input"],
Cell[835764, 18794, 10814, 235, 512, "Input"],
Cell[846581, 19031, 5636, 118, 104, "Input"],
Cell[852220, 19151, 776, 19, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[853033, 19175, 195, 2, 36, "Subsection"],
Cell[853231, 19179, 4176, 107, 358, "Input"],
Cell[857410, 19288, 8748, 206, 385, "Input"],
Cell[866161, 19496, 806, 20, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[867004, 19521, 191, 2, 36, "Subsection"],
Cell[867198, 19525, 859, 22, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[868094, 19552, 187, 2, 36, "Subsection"],
Cell[868284, 19556, 2676, 66, 283, "Input"],
Cell[870963, 19624, 2275, 56, 63, "Input"],
Cell[CellGroupData[{
Cell[873263, 19684, 20686, 470, 810, "Input"],
Cell[893952, 20156, 121129, 2113, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1015118, 22274, 21842, 488, 827, "Input"],
Cell[1036963, 22764, 111181, 2025, 601, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148217, 24797, 174, 2, 65, "Chapter"],
Cell[CellGroupData[{
Cell[1148416, 24803, 95, 1, 64, "Section"],
Cell[1148514, 24806, 1301, 34, 50, "Input"],
Cell[1149818, 24842, 472, 14, 49, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1150327, 24861, 96, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[1150448, 24866, 152, 2, 44, "Subsection"],
Cell[1150603, 24870, 4298, 102, 267, "Input"],
Cell[1154904, 24974, 2727, 69, 284, "Input"],
Cell[1157634, 25045, 3146, 74, 301, "Input"],
Cell[1160783, 25121, 2467, 65, 284, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1163287, 25191, 161, 2, 36, "Subsection"],
Cell[1163451, 25195, 4489, 126, 202, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1167989, 25327, 90, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[1168104, 25332, 440, 10, 45, "Subsection"],
Cell[1168547, 25344, 1540, 34, 97, "Input"],
Cell[1170090, 25380, 2880, 72, 97, "Input"],
Cell[1172973, 25454, 98, 1, 28, "Input"],
Cell[1173074, 25457, 9347, 200, 347, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1182458, 25662, 276, 3, 36, "Subsection"],
Cell[1182737, 25667, 3357, 88, 199, "Input"],
Cell[1186097, 25757, 8791, 189, 301, "Input"],
Cell[1194891, 25948, 4069, 99, 233, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1198997, 26052, 200, 3, 36, "Subsection"],
Cell[1199200, 26057, 3361, 87, 199, "Input"],
Cell[1202564, 26146, 5453, 146, 395, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1208054, 26297, 151, 2, 36, "Subsection"],
Cell[1208208, 26301, 662, 14, 28, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1208931, 26322, 162, 2, 54, "Chapter"],
Cell[CellGroupData[{
Cell[1209118, 26328, 92, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1209235, 26333, 175, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1209435, 26339, 101, 1, 35, "Subsubsection"],
Cell[1209539, 26342, 5768, 145, 437, "Input"],
Cell[1215310, 26489, 5575, 135, 435, "Input"],
Cell[1220888, 26626, 6884, 169, 481, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1227809, 26800, 99, 1, 29, "Subsubsection"],
Cell[1227911, 26803, 964, 24, 143, "Input"],
Cell[1228878, 26829, 1970, 53, 202, "Input"],
Cell[1230851, 26884, 1291, 32, 160, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1232191, 26922, 103, 1, 36, "Subsection"],
Cell[1232297, 26925, 4867, 124, 301, "Input"],
Cell[1237167, 27051, 3581, 93, 386, "Input"],
Cell[1240751, 27146, 213, 3, 28, "Input"],
Cell[1240967, 27151, 4770, 120, 216, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1245774, 27276, 109, 1, 36, "Subsection"],
Cell[1245886, 27279, 1522, 33, 143, "Input"],
Cell[1247411, 27314, 4161, 103, 468, "Input"],
Cell[1251575, 27419, 20180, 466, 940, "Input"],
Cell[1271758, 27887, 13583, 308, 901, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1285378, 28200, 96, 1, 36, "Subsection"],
Cell[1285477, 28203, 15011, 360, 1093, "Input"],
Cell[1300491, 28565, 8295, 186, 570, "Input"],
Cell[1308789, 28753, 6590, 165, 301, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1315428, 28924, 101, 1, 50, "Section"],
Cell[1315532, 28927, 3568, 70, 172, "Input"],
Cell[1319103, 28999, 1660, 43, 46, "Input"],
Cell[1320766, 29044, 3587, 99, 156, "Input"],
Cell[1324356, 29145, 2819, 74, 112, "Input"],
Cell[1327178, 29221, 1644, 45, 46, "Input"],
Cell[1328825, 29268, 1335, 32, 114, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1330197, 29305, 98, 1, 50, "Section"],
Cell[1330298, 29308, 1844, 44, 153, "Input"],
Cell[1332145, 29354, 2520, 49, 63, "Input"],
Cell[1334668, 29405, 1069, 18, 46, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1335774, 29428, 161, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[1335960, 29434, 102, 1, 44, "Subsection"],
Cell[1336065, 29437, 2700, 79, 216, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1338802, 29521, 110, 1, 36, "Subsection"],
Cell[1338915, 29524, 6270, 177, 258, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1345222, 29706, 115, 1, 36, "Subsection"],
Cell[1345340, 29709, 7394, 176, 424, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1352771, 29890, 108, 1, 36, "Subsection"],
Cell[1352882, 29893, 8930, 209, 526, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1361849, 30107, 103, 1, 36, "Subsection"],
Cell[1361955, 30110, 474, 9, 28, "Input"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
